set 0 = GOTO( set -1 , -1 ) :
{
[ S ->  · <pr>  ,  ]
[ <pr> ->  ·  ,  ]
[ <pr> ->  · <op> <pr>  ,  ]
[ <op> ->  · ;  ,  ]
[ <op> ->  · ;  , ;  ]
[ <op> ->  · ;  , V  ]
[ <op> ->  · ;  , :  ]
[ <op> ->  · ;  , let  ]
[ <op> ->  · ;  , if  ]
[ <op> ->  · ;  , goto  ]
[ <op> ->  · ;  , load  ]
[ <op> ->  · ;  , put  ]
[ <op> ->  · ;  , switch  ]
[ <op> ->  · ;  , error  ]
[ <op> ->  · ;  , comment  ]
[ <op> ->  · V <listV> : TYPE ;  ,  ]
[ <op> ->  · V <listV> : TYPE ;  , ;  ]
[ <op> ->  · V <listV> : TYPE ;  , V  ]
[ <op> ->  · V <listV> : TYPE ;  , :  ]
[ <op> ->  · V <listV> : TYPE ;  , let  ]
[ <op> ->  · V <listV> : TYPE ;  , if  ]
[ <op> ->  · V <listV> : TYPE ;  , goto  ]
[ <op> ->  · V <listV> : TYPE ;  , load  ]
[ <op> ->  · V <listV> : TYPE ;  , put  ]
[ <op> ->  · V <listV> : TYPE ;  , switch  ]
[ <op> ->  · V <listV> : TYPE ;  , error  ]
[ <op> ->  · V <listV> : TYPE ;  , comment  ]
[ <op> ->  · V for V = E to E <step> <pr> next V  ,  ]
[ <op> ->  · V for V = E to E <step> <pr> next V  , ;  ]
[ <op> ->  · V for V = E to E <step> <pr> next V  , V  ]
[ <op> ->  · V for V = E to E <step> <pr> next V  , :  ]
[ <op> ->  · V for V = E to E <step> <pr> next V  , let  ]
[ <op> ->  · V for V = E to E <step> <pr> next V  , if  ]
[ <op> ->  · V for V = E to E <step> <pr> next V  , goto  ]
[ <op> ->  · V for V = E to E <step> <pr> next V  , load  ]
[ <op> ->  · V for V = E to E <step> <pr> next V  , put  ]
[ <op> ->  · V for V = E to E <step> <pr> next V  , switch  ]
[ <op> ->  · V for V = E to E <step> <pr> next V  , error  ]
[ <op> ->  · V for V = E to E <step> <pr> next V  , comment  ]
[ <op> ->  · : V  ,  ]
[ <op> ->  · : V  , ;  ]
[ <op> ->  · : V  , V  ]
[ <op> ->  · : V  , :  ]
[ <op> ->  · : V  , let  ]
[ <op> ->  · : V  , if  ]
[ <op> ->  · : V  , goto  ]
[ <op> ->  · : V  , load  ]
[ <op> ->  · : V  , put  ]
[ <op> ->  · : V  , switch  ]
[ <op> ->  · : V  , error  ]
[ <op> ->  · : V  , comment  ]
[ <op> ->  · let V <listA>  ,  ]
[ <op> ->  · let V <listA>  , ;  ]
[ <op> ->  · let V <listA>  , V  ]
[ <op> ->  · let V <listA>  , :  ]
[ <op> ->  · let V <listA>  , let  ]
[ <op> ->  · let V <listA>  , if  ]
[ <op> ->  · let V <listA>  , goto  ]
[ <op> ->  · let V <listA>  , load  ]
[ <op> ->  · let V <listA>  , put  ]
[ <op> ->  · let V <listA>  , switch  ]
[ <op> ->  · let V <listA>  , error  ]
[ <op> ->  · let V <listA>  , comment  ]
[ <op> ->  · if <test> goto V <else> ;  ,  ]
[ <op> ->  · if <test> goto V <else> ;  , ;  ]
[ <op> ->  · if <test> goto V <else> ;  , V  ]
[ <op> ->  · if <test> goto V <else> ;  , :  ]
[ <op> ->  · if <test> goto V <else> ;  , let  ]
[ <op> ->  · if <test> goto V <else> ;  , if  ]
[ <op> ->  · if <test> goto V <else> ;  , goto  ]
[ <op> ->  · if <test> goto V <else> ;  , load  ]
[ <op> ->  · if <test> goto V <else> ;  , put  ]
[ <op> ->  · if <test> goto V <else> ;  , switch  ]
[ <op> ->  · if <test> goto V <else> ;  , error  ]
[ <op> ->  · if <test> goto V <else> ;  , comment  ]
[ <op> ->  · goto V  ,  ]
[ <op> ->  · goto V  , ;  ]
[ <op> ->  · goto V  , V  ]
[ <op> ->  · goto V  , :  ]
[ <op> ->  · goto V  , let  ]
[ <op> ->  · goto V  , if  ]
[ <op> ->  · goto V  , goto  ]
[ <op> ->  · goto V  , load  ]
[ <op> ->  · goto V  , put  ]
[ <op> ->  · goto V  , switch  ]
[ <op> ->  · goto V  , error  ]
[ <op> ->  · goto V  , comment  ]
[ <op> ->  · load ( V <listV> ) ;  ,  ]
[ <op> ->  · load ( V <listV> ) ;  , ;  ]
[ <op> ->  · load ( V <listV> ) ;  , V  ]
[ <op> ->  · load ( V <listV> ) ;  , :  ]
[ <op> ->  · load ( V <listV> ) ;  , let  ]
[ <op> ->  · load ( V <listV> ) ;  , if  ]
[ <op> ->  · load ( V <listV> ) ;  , goto  ]
[ <op> ->  · load ( V <listV> ) ;  , load  ]
[ <op> ->  · load ( V <listV> ) ;  , put  ]
[ <op> ->  · load ( V <listV> ) ;  , switch  ]
[ <op> ->  · load ( V <listV> ) ;  , error  ]
[ <op> ->  · load ( V <listV> ) ;  , comment  ]
[ <op> ->  · put ( E <listE> ) ;  ,  ]
[ <op> ->  · put ( E <listE> ) ;  , ;  ]
[ <op> ->  · put ( E <listE> ) ;  , V  ]
[ <op> ->  · put ( E <listE> ) ;  , :  ]
[ <op> ->  · put ( E <listE> ) ;  , let  ]
[ <op> ->  · put ( E <listE> ) ;  , if  ]
[ <op> ->  · put ( E <listE> ) ;  , goto  ]
[ <op> ->  · put ( E <listE> ) ;  , load  ]
[ <op> ->  · put ( E <listE> ) ;  , put  ]
[ <op> ->  · put ( E <listE> ) ;  , switch  ]
[ <op> ->  · put ( E <listE> ) ;  , error  ]
[ <op> ->  · put ( E <listE> ) ;  , comment  ]
[ <op> ->  · switch ( E ) <switch_body> end switch ;  ,  ]
[ <op> ->  · switch ( E ) <switch_body> end switch ;  , ;  ]
[ <op> ->  · switch ( E ) <switch_body> end switch ;  , V  ]
[ <op> ->  · switch ( E ) <switch_body> end switch ;  , :  ]
[ <op> ->  · switch ( E ) <switch_body> end switch ;  , let  ]
[ <op> ->  · switch ( E ) <switch_body> end switch ;  , if  ]
[ <op> ->  · switch ( E ) <switch_body> end switch ;  , goto  ]
[ <op> ->  · switch ( E ) <switch_body> end switch ;  , load  ]
[ <op> ->  · switch ( E ) <switch_body> end switch ;  , put  ]
[ <op> ->  · switch ( E ) <switch_body> end switch ;  , switch  ]
[ <op> ->  · switch ( E ) <switch_body> end switch ;  , error  ]
[ <op> ->  · switch ( E ) <switch_body> end switch ;  , comment  ]
[ <op> ->  · error ;  ,  ]
[ <op> ->  · error ;  , ;  ]
[ <op> ->  · error ;  , V  ]
[ <op> ->  · error ;  , :  ]
[ <op> ->  · error ;  , let  ]
[ <op> ->  · error ;  , if  ]
[ <op> ->  · error ;  , goto  ]
[ <op> ->  · error ;  , load  ]
[ <op> ->  · error ;  , put  ]
[ <op> ->  · error ;  , switch  ]
[ <op> ->  · error ;  , error  ]
[ <op> ->  · error ;  , comment  ]
[ <op> ->  · comment  ,  ]
[ <op> ->  · comment  , ;  ]
[ <op> ->  · comment  , V  ]
[ <op> ->  · comment  , :  ]
[ <op> ->  · comment  , let  ]
[ <op> ->  · comment  , if  ]
[ <op> ->  · comment  , goto  ]
[ <op> ->  · comment  , load  ]
[ <op> ->  · comment  , put  ]
[ <op> ->  · comment  , switch  ]
[ <op> ->  · comment  , error  ]
[ <op> ->  · comment  , comment  ]
}

set 1 = GOTO( set 0 , : ) :
{
[ <op> -> :  · V  ,  ]
[ <op> -> :  · V  , ;  ]
[ <op> -> :  · V  , V  ]
[ <op> -> :  · V  , :  ]
[ <op> -> :  · V  , let  ]
[ <op> -> :  · V  , if  ]
[ <op> -> :  · V  , goto  ]
[ <op> -> :  · V  , load  ]
[ <op> -> :  · V  , put  ]
[ <op> -> :  · V  , switch  ]
[ <op> -> :  · V  , error  ]
[ <op> -> :  · V  , comment  ]
}

set 2 = GOTO( set 0 , ; ) :
{
[ <op> -> ;  ·  ,  ]
[ <op> -> ;  ·  , ;  ]
[ <op> -> ;  ·  , V  ]
[ <op> -> ;  ·  , :  ]
[ <op> -> ;  ·  , let  ]
[ <op> -> ;  ·  , if  ]
[ <op> -> ;  ·  , goto  ]
[ <op> -> ;  ·  , load  ]
[ <op> -> ;  ·  , put  ]
[ <op> -> ;  ·  , switch  ]
[ <op> -> ;  ·  , error  ]
[ <op> -> ;  ·  , comment  ]
}

set 3 = GOTO( set 0 , <op> ) :
{
[ <pr> ->  ·  ,  ]
[ <pr> ->  · <op> <pr>  ,  ]
[ <pr> -> <op>  · <pr>  ,  ]
[ <op> ->  · ;  ,  ]
[ <op> ->  · ;  , ;  ]
[ <op> ->  · ;  , V  ]
[ <op> ->  · ;  , :  ]
[ <op> ->  · ;  , let  ]
[ <op> ->  · ;  , if  ]
[ <op> ->  · ;  , goto  ]
[ <op> ->  · ;  , load  ]
[ <op> ->  · ;  , put  ]
[ <op> ->  · ;  , switch  ]
[ <op> ->  · ;  , error  ]
[ <op> ->  · ;  , comment  ]
[ <op> ->  · V <listV> : TYPE ;  ,  ]
[ <op> ->  · V <listV> : TYPE ;  , ;  ]
[ <op> ->  · V <listV> : TYPE ;  , V  ]
[ <op> ->  · V <listV> : TYPE ;  , :  ]
[ <op> ->  · V <listV> : TYPE ;  , let  ]
[ <op> ->  · V <listV> : TYPE ;  , if  ]
[ <op> ->  · V <listV> : TYPE ;  , goto  ]
[ <op> ->  · V <listV> : TYPE ;  , load  ]
[ <op> ->  · V <listV> : TYPE ;  , put  ]
[ <op> ->  · V <listV> : TYPE ;  , switch  ]
[ <op> ->  · V <listV> : TYPE ;  , error  ]
[ <op> ->  · V <listV> : TYPE ;  , comment  ]
[ <op> ->  · V for V = E to E <step> <pr> next V  ,  ]
[ <op> ->  · V for V = E to E <step> <pr> next V  , ;  ]
[ <op> ->  · V for V = E to E <step> <pr> next V  , V  ]
[ <op> ->  · V for V = E to E <step> <pr> next V  , :  ]
[ <op> ->  · V for V = E to E <step> <pr> next V  , let  ]
[ <op> ->  · V for V = E to E <step> <pr> next V  , if  ]
[ <op> ->  · V for V = E to E <step> <pr> next V  , goto  ]
[ <op> ->  · V for V = E to E <step> <pr> next V  , load  ]
[ <op> ->  · V for V = E to E <step> <pr> next V  , put  ]
[ <op> ->  · V for V = E to E <step> <pr> next V  , switch  ]
[ <op> ->  · V for V = E to E <step> <pr> next V  , error  ]
[ <op> ->  · V for V = E to E <step> <pr> next V  , comment  ]
[ <op> ->  · : V  ,  ]
[ <op> ->  · : V  , ;  ]
[ <op> ->  · : V  , V  ]
[ <op> ->  · : V  , :  ]
[ <op> ->  · : V  , let  ]
[ <op> ->  · : V  , if  ]
[ <op> ->  · : V  , goto  ]
[ <op> ->  · : V  , load  ]
[ <op> ->  · : V  , put  ]
[ <op> ->  · : V  , switch  ]
[ <op> ->  · : V  , error  ]
[ <op> ->  · : V  , comment  ]
[ <op> ->  · let V <listA>  ,  ]
[ <op> ->  · let V <listA>  , ;  ]
[ <op> ->  · let V <listA>  , V  ]
[ <op> ->  · let V <listA>  , :  ]
[ <op> ->  · let V <listA>  , let  ]
[ <op> ->  · let V <listA>  , if  ]
[ <op> ->  · let V <listA>  , goto  ]
[ <op> ->  · let V <listA>  , load  ]
[ <op> ->  · let V <listA>  , put  ]
[ <op> ->  · let V <listA>  , switch  ]
[ <op> ->  · let V <listA>  , error  ]
[ <op> ->  · let V <listA>  , comment  ]
[ <op> ->  · if <test> goto V <else> ;  ,  ]
[ <op> ->  · if <test> goto V <else> ;  , ;  ]
[ <op> ->  · if <test> goto V <else> ;  , V  ]
[ <op> ->  · if <test> goto V <else> ;  , :  ]
[ <op> ->  · if <test> goto V <else> ;  , let  ]
[ <op> ->  · if <test> goto V <else> ;  , if  ]
[ <op> ->  · if <test> goto V <else> ;  , goto  ]
[ <op> ->  · if <test> goto V <else> ;  , load  ]
[ <op> ->  · if <test> goto V <else> ;  , put  ]
[ <op> ->  · if <test> goto V <else> ;  , switch  ]
[ <op> ->  · if <test> goto V <else> ;  , error  ]
[ <op> ->  · if <test> goto V <else> ;  , comment  ]
[ <op> ->  · goto V  ,  ]
[ <op> ->  · goto V  , ;  ]
[ <op> ->  · goto V  , V  ]
[ <op> ->  · goto V  , :  ]
[ <op> ->  · goto V  , let  ]
[ <op> ->  · goto V  , if  ]
[ <op> ->  · goto V  , goto  ]
[ <op> ->  · goto V  , load  ]
[ <op> ->  · goto V  , put  ]
[ <op> ->  · goto V  , switch  ]
[ <op> ->  · goto V  , error  ]
[ <op> ->  · goto V  , comment  ]
[ <op> ->  · load ( V <listV> ) ;  ,  ]
[ <op> ->  · load ( V <listV> ) ;  , ;  ]
[ <op> ->  · load ( V <listV> ) ;  , V  ]
[ <op> ->  · load ( V <listV> ) ;  , :  ]
[ <op> ->  · load ( V <listV> ) ;  , let  ]
[ <op> ->  · load ( V <listV> ) ;  , if  ]
[ <op> ->  · load ( V <listV> ) ;  , goto  ]
[ <op> ->  · load ( V <listV> ) ;  , load  ]
[ <op> ->  · load ( V <listV> ) ;  , put  ]
[ <op> ->  · load ( V <listV> ) ;  , switch  ]
[ <op> ->  · load ( V <listV> ) ;  , error  ]
[ <op> ->  · load ( V <listV> ) ;  , comment  ]
[ <op> ->  · put ( E <listE> ) ;  ,  ]
[ <op> ->  · put ( E <listE> ) ;  , ;  ]
[ <op> ->  · put ( E <listE> ) ;  , V  ]
[ <op> ->  · put ( E <listE> ) ;  , :  ]
[ <op> ->  · put ( E <listE> ) ;  , let  ]
[ <op> ->  · put ( E <listE> ) ;  , if  ]
[ <op> ->  · put ( E <listE> ) ;  , goto  ]
[ <op> ->  · put ( E <listE> ) ;  , load  ]
[ <op> ->  · put ( E <listE> ) ;  , put  ]
[ <op> ->  · put ( E <listE> ) ;  , switch  ]
[ <op> ->  · put ( E <listE> ) ;  , error  ]
[ <op> ->  · put ( E <listE> ) ;  , comment  ]
[ <op> ->  · switch ( E ) <switch_body> end switch ;  ,  ]
[ <op> ->  · switch ( E ) <switch_body> end switch ;  , ;  ]
[ <op> ->  · switch ( E ) <switch_body> end switch ;  , V  ]
[ <op> ->  · switch ( E ) <switch_body> end switch ;  , :  ]
[ <op> ->  · switch ( E ) <switch_body> end switch ;  , let  ]
[ <op> ->  · switch ( E ) <switch_body> end switch ;  , if  ]
[ <op> ->  · switch ( E ) <switch_body> end switch ;  , goto  ]
[ <op> ->  · switch ( E ) <switch_body> end switch ;  , load  ]
[ <op> ->  · switch ( E ) <switch_body> end switch ;  , put  ]
[ <op> ->  · switch ( E ) <switch_body> end switch ;  , switch  ]
[ <op> ->  · switch ( E ) <switch_body> end switch ;  , error  ]
[ <op> ->  · switch ( E ) <switch_body> end switch ;  , comment  ]
[ <op> ->  · error ;  ,  ]
[ <op> ->  · error ;  , ;  ]
[ <op> ->  · error ;  , V  ]
[ <op> ->  · error ;  , :  ]
[ <op> ->  · error ;  , let  ]
[ <op> ->  · error ;  , if  ]
[ <op> ->  · error ;  , goto  ]
[ <op> ->  · error ;  , load  ]
[ <op> ->  · error ;  , put  ]
[ <op> ->  · error ;  , switch  ]
[ <op> ->  · error ;  , error  ]
[ <op> ->  · error ;  , comment  ]
[ <op> ->  · comment  ,  ]
[ <op> ->  · comment  , ;  ]
[ <op> ->  · comment  , V  ]
[ <op> ->  · comment  , :  ]
[ <op> ->  · comment  , let  ]
[ <op> ->  · comment  , if  ]
[ <op> ->  · comment  , goto  ]
[ <op> ->  · comment  , load  ]
[ <op> ->  · comment  , put  ]
[ <op> ->  · comment  , switch  ]
[ <op> ->  · comment  , error  ]
[ <op> ->  · comment  , comment  ]
}

set 4 = GOTO( set 0 , <pr> ) :
{
[ S -> <pr>  ·  ,  ]
}

set 5 = GOTO( set 0 , V ) :
{
[ <op> -> V  · <listV> : TYPE ;  ,  ]
[ <op> -> V  · <listV> : TYPE ;  , ;  ]
[ <op> -> V  · <listV> : TYPE ;  , V  ]
[ <op> -> V  · <listV> : TYPE ;  , :  ]
[ <op> -> V  · <listV> : TYPE ;  , let  ]
[ <op> -> V  · <listV> : TYPE ;  , if  ]
[ <op> -> V  · <listV> : TYPE ;  , goto  ]
[ <op> -> V  · <listV> : TYPE ;  , load  ]
[ <op> -> V  · <listV> : TYPE ;  , put  ]
[ <op> -> V  · <listV> : TYPE ;  , switch  ]
[ <op> -> V  · <listV> : TYPE ;  , error  ]
[ <op> -> V  · <listV> : TYPE ;  , comment  ]
[ <op> -> V  · for V = E to E <step> <pr> next V  ,  ]
[ <op> -> V  · for V = E to E <step> <pr> next V  , ;  ]
[ <op> -> V  · for V = E to E <step> <pr> next V  , V  ]
[ <op> -> V  · for V = E to E <step> <pr> next V  , :  ]
[ <op> -> V  · for V = E to E <step> <pr> next V  , let  ]
[ <op> -> V  · for V = E to E <step> <pr> next V  , if  ]
[ <op> -> V  · for V = E to E <step> <pr> next V  , goto  ]
[ <op> -> V  · for V = E to E <step> <pr> next V  , load  ]
[ <op> -> V  · for V = E to E <step> <pr> next V  , put  ]
[ <op> -> V  · for V = E to E <step> <pr> next V  , switch  ]
[ <op> -> V  · for V = E to E <step> <pr> next V  , error  ]
[ <op> -> V  · for V = E to E <step> <pr> next V  , comment  ]
[ <listV> ->  ·  , :  ]
[ <listV> ->  · , V <listV>  , :  ]
}

set 6 = GOTO( set 0 , comment ) :
{
[ <op> -> comment  ·  ,  ]
[ <op> -> comment  ·  , ;  ]
[ <op> -> comment  ·  , V  ]
[ <op> -> comment  ·  , :  ]
[ <op> -> comment  ·  , let  ]
[ <op> -> comment  ·  , if  ]
[ <op> -> comment  ·  , goto  ]
[ <op> -> comment  ·  , load  ]
[ <op> -> comment  ·  , put  ]
[ <op> -> comment  ·  , switch  ]
[ <op> -> comment  ·  , error  ]
[ <op> -> comment  ·  , comment  ]
}

set 7 = GOTO( set 0 , error ) :
{
[ <op> -> error  · ;  ,  ]
[ <op> -> error  · ;  , ;  ]
[ <op> -> error  · ;  , V  ]
[ <op> -> error  · ;  , :  ]
[ <op> -> error  · ;  , let  ]
[ <op> -> error  · ;  , if  ]
[ <op> -> error  · ;  , goto  ]
[ <op> -> error  · ;  , load  ]
[ <op> -> error  · ;  , put  ]
[ <op> -> error  · ;  , switch  ]
[ <op> -> error  · ;  , error  ]
[ <op> -> error  · ;  , comment  ]
}

set 8 = GOTO( set 0 , goto ) :
{
[ <op> -> goto  · V  ,  ]
[ <op> -> goto  · V  , ;  ]
[ <op> -> goto  · V  , V  ]
[ <op> -> goto  · V  , :  ]
[ <op> -> goto  · V  , let  ]
[ <op> -> goto  · V  , if  ]
[ <op> -> goto  · V  , goto  ]
[ <op> -> goto  · V  , load  ]
[ <op> -> goto  · V  , put  ]
[ <op> -> goto  · V  , switch  ]
[ <op> -> goto  · V  , error  ]
[ <op> -> goto  · V  , comment  ]
}

set 9 = GOTO( set 0 , if ) :
{
[ <op> -> if  · <test> goto V <else> ;  ,  ]
[ <op> -> if  · <test> goto V <else> ;  , ;  ]
[ <op> -> if  · <test> goto V <else> ;  , V  ]
[ <op> -> if  · <test> goto V <else> ;  , :  ]
[ <op> -> if  · <test> goto V <else> ;  , let  ]
[ <op> -> if  · <test> goto V <else> ;  , if  ]
[ <op> -> if  · <test> goto V <else> ;  , goto  ]
[ <op> -> if  · <test> goto V <else> ;  , load  ]
[ <op> -> if  · <test> goto V <else> ;  , put  ]
[ <op> -> if  · <test> goto V <else> ;  , switch  ]
[ <op> -> if  · <test> goto V <else> ;  , error  ]
[ <op> -> if  · <test> goto V <else> ;  , comment  ]
[ E ->  · E - T  , Rel  ]
[ E ->  · E - T  , -  ]
[ E ->  · E - T  , +  ]
[ E ->  · E + T  , Rel  ]
[ E ->  · E + T  , -  ]
[ E ->  · E + T  , +  ]
[ E ->  · T  , Rel  ]
[ E ->  · T  , -  ]
[ E ->  · T  , +  ]
[ <test> ->  · E Rel E  , goto  ]
[ T ->  · T * F  , Rel  ]
[ T ->  · T * F  , -  ]
[ T ->  · T * F  , +  ]
[ T ->  · T * F  , *  ]
[ T ->  · T * F  , /  ]
[ T ->  · T * F  , %  ]
[ T ->  · T / F  , Rel  ]
[ T ->  · T / F  , -  ]
[ T ->  · T / F  , +  ]
[ T ->  · T / F  , *  ]
[ T ->  · T / F  , /  ]
[ T ->  · T / F  , %  ]
[ T ->  · T % F  , Rel  ]
[ T ->  · T % F  , -  ]
[ T ->  · T % F  , +  ]
[ T ->  · T % F  , *  ]
[ T ->  · T % F  , /  ]
[ T ->  · T % F  , %  ]
[ T ->  · F  , Rel  ]
[ T ->  · F  , -  ]
[ T ->  · F  , +  ]
[ T ->  · F  , *  ]
[ T ->  · F  , /  ]
[ T ->  · F  , %  ]
[ F ->  · V  , Rel  ]
[ F ->  · V  , -  ]
[ F ->  · V  , +  ]
[ F ->  · V  , *  ]
[ F ->  · V  , /  ]
[ F ->  · V  , %  ]
[ F ->  · ( E )  , Rel  ]
[ F ->  · ( E )  , -  ]
[ F ->  · ( E )  , +  ]
[ F ->  · ( E )  , *  ]
[ F ->  · ( E )  , /  ]
[ F ->  · ( E )  , %  ]
[ F ->  · C  , Rel  ]
[ F ->  · C  , -  ]
[ F ->  · C  , +  ]
[ F ->  · C  , *  ]
[ F ->  · C  , /  ]
[ F ->  · C  , %  ]
[ F ->  · value ( E , E )  , Rel  ]
[ F ->  · value ( E , E )  , -  ]
[ F ->  · value ( E , E )  , +  ]
[ F ->  · value ( E , E )  , *  ]
[ F ->  · value ( E , E )  , /  ]
[ F ->  · value ( E , E )  , %  ]
[ F ->  · derivative ( E )  , Rel  ]
[ F ->  · derivative ( E )  , -  ]
[ F ->  · derivative ( E )  , +  ]
[ F ->  · derivative ( E )  , *  ]
[ F ->  · derivative ( E )  , /  ]
[ F ->  · derivative ( E )  , %  ]
[ F ->  · coeff ( E , E )  , Rel  ]
[ F ->  · coeff ( E , E )  , -  ]
[ F ->  · coeff ( E , E )  , +  ]
[ F ->  · coeff ( E , E )  , *  ]
[ F ->  · coeff ( E , E )  , /  ]
[ F ->  · coeff ( E , E )  , %  ]
[ F ->  · deg ( E )  , Rel  ]
[ F ->  · deg ( E )  , -  ]
[ F ->  · deg ( E )  , +  ]
[ F ->  · deg ( E )  , *  ]
[ F ->  · deg ( E )  , /  ]
[ F ->  · deg ( E )  , %  ]
}

set 10 = GOTO( set 0 , let ) :
{
[ <op> -> let  · V <listA>  ,  ]
[ <op> -> let  · V <listA>  , ;  ]
[ <op> -> let  · V <listA>  , V  ]
[ <op> -> let  · V <listA>  , :  ]
[ <op> -> let  · V <listA>  , let  ]
[ <op> -> let  · V <listA>  , if  ]
[ <op> -> let  · V <listA>  , goto  ]
[ <op> -> let  · V <listA>  , load  ]
[ <op> -> let  · V <listA>  , put  ]
[ <op> -> let  · V <listA>  , switch  ]
[ <op> -> let  · V <listA>  , error  ]
[ <op> -> let  · V <listA>  , comment  ]
}

set 11 = GOTO( set 0 , load ) :
{
[ <op> -> load  · ( V <listV> ) ;  ,  ]
[ <op> -> load  · ( V <listV> ) ;  , ;  ]
[ <op> -> load  · ( V <listV> ) ;  , V  ]
[ <op> -> load  · ( V <listV> ) ;  , :  ]
[ <op> -> load  · ( V <listV> ) ;  , let  ]
[ <op> -> load  · ( V <listV> ) ;  , if  ]
[ <op> -> load  · ( V <listV> ) ;  , goto  ]
[ <op> -> load  · ( V <listV> ) ;  , load  ]
[ <op> -> load  · ( V <listV> ) ;  , put  ]
[ <op> -> load  · ( V <listV> ) ;  , switch  ]
[ <op> -> load  · ( V <listV> ) ;  , error  ]
[ <op> -> load  · ( V <listV> ) ;  , comment  ]
}

set 12 = GOTO( set 0 , put ) :
{
[ <op> -> put  · ( E <listE> ) ;  ,  ]
[ <op> -> put  · ( E <listE> ) ;  , ;  ]
[ <op> -> put  · ( E <listE> ) ;  , V  ]
[ <op> -> put  · ( E <listE> ) ;  , :  ]
[ <op> -> put  · ( E <listE> ) ;  , let  ]
[ <op> -> put  · ( E <listE> ) ;  , if  ]
[ <op> -> put  · ( E <listE> ) ;  , goto  ]
[ <op> -> put  · ( E <listE> ) ;  , load  ]
[ <op> -> put  · ( E <listE> ) ;  , put  ]
[ <op> -> put  · ( E <listE> ) ;  , switch  ]
[ <op> -> put  · ( E <listE> ) ;  , error  ]
[ <op> -> put  · ( E <listE> ) ;  , comment  ]
}

set 13 = GOTO( set 0 , switch ) :
{
[ <op> -> switch  · ( E ) <switch_body> end switch ;  ,  ]
[ <op> -> switch  · ( E ) <switch_body> end switch ;  , ;  ]
[ <op> -> switch  · ( E ) <switch_body> end switch ;  , V  ]
[ <op> -> switch  · ( E ) <switch_body> end switch ;  , :  ]
[ <op> -> switch  · ( E ) <switch_body> end switch ;  , let  ]
[ <op> -> switch  · ( E ) <switch_body> end switch ;  , if  ]
[ <op> -> switch  · ( E ) <switch_body> end switch ;  , goto  ]
[ <op> -> switch  · ( E ) <switch_body> end switch ;  , load  ]
[ <op> -> switch  · ( E ) <switch_body> end switch ;  , put  ]
[ <op> -> switch  · ( E ) <switch_body> end switch ;  , switch  ]
[ <op> -> switch  · ( E ) <switch_body> end switch ;  , error  ]
[ <op> -> switch  · ( E ) <switch_body> end switch ;  , comment  ]
}

set 14 = GOTO( set 1 , V ) :
{
[ <op> -> : V  ·  ,  ]
[ <op> -> : V  ·  , ;  ]
[ <op> -> : V  ·  , V  ]
[ <op> -> : V  ·  , :  ]
[ <op> -> : V  ·  , let  ]
[ <op> -> : V  ·  , if  ]
[ <op> -> : V  ·  , goto  ]
[ <op> -> : V  ·  , load  ]
[ <op> -> : V  ·  , put  ]
[ <op> -> : V  ·  , switch  ]
[ <op> -> : V  ·  , error  ]
[ <op> -> : V  ·  , comment  ]
}

set 15 = GOTO( set 3 , <pr> ) :
{
[ <pr> -> <op> <pr>  ·  ,  ]
}

set 16 = GOTO( set 5 , , ) :
{
[ <listV> -> ,  · V <listV>  , :  ]
}

set 17 = GOTO( set 5 , <listV> ) :
{
[ <op> -> V <listV>  · : TYPE ;  ,  ]
[ <op> -> V <listV>  · : TYPE ;  , ;  ]
[ <op> -> V <listV>  · : TYPE ;  , V  ]
[ <op> -> V <listV>  · : TYPE ;  , :  ]
[ <op> -> V <listV>  · : TYPE ;  , let  ]
[ <op> -> V <listV>  · : TYPE ;  , if  ]
[ <op> -> V <listV>  · : TYPE ;  , goto  ]
[ <op> -> V <listV>  · : TYPE ;  , load  ]
[ <op> -> V <listV>  · : TYPE ;  , put  ]
[ <op> -> V <listV>  · : TYPE ;  , switch  ]
[ <op> -> V <listV>  · : TYPE ;  , error  ]
[ <op> -> V <listV>  · : TYPE ;  , comment  ]
}

set 18 = GOTO( set 5 , for ) :
{
[ <op> -> V for  · V = E to E <step> <pr> next V  ,  ]
[ <op> -> V for  · V = E to E <step> <pr> next V  , ;  ]
[ <op> -> V for  · V = E to E <step> <pr> next V  , V  ]
[ <op> -> V for  · V = E to E <step> <pr> next V  , :  ]
[ <op> -> V for  · V = E to E <step> <pr> next V  , let  ]
[ <op> -> V for  · V = E to E <step> <pr> next V  , if  ]
[ <op> -> V for  · V = E to E <step> <pr> next V  , goto  ]
[ <op> -> V for  · V = E to E <step> <pr> next V  , load  ]
[ <op> -> V for  · V = E to E <step> <pr> next V  , put  ]
[ <op> -> V for  · V = E to E <step> <pr> next V  , switch  ]
[ <op> -> V for  · V = E to E <step> <pr> next V  , error  ]
[ <op> -> V for  · V = E to E <step> <pr> next V  , comment  ]
}

set 19 = GOTO( set 7 , ; ) :
{
[ <op> -> error ;  ·  ,  ]
[ <op> -> error ;  ·  , ;  ]
[ <op> -> error ;  ·  , V  ]
[ <op> -> error ;  ·  , :  ]
[ <op> -> error ;  ·  , let  ]
[ <op> -> error ;  ·  , if  ]
[ <op> -> error ;  ·  , goto  ]
[ <op> -> error ;  ·  , load  ]
[ <op> -> error ;  ·  , put  ]
[ <op> -> error ;  ·  , switch  ]
[ <op> -> error ;  ·  , error  ]
[ <op> -> error ;  ·  , comment  ]
}

set 20 = GOTO( set 8 , V ) :
{
[ <op> -> goto V  ·  ,  ]
[ <op> -> goto V  ·  , ;  ]
[ <op> -> goto V  ·  , V  ]
[ <op> -> goto V  ·  , :  ]
[ <op> -> goto V  ·  , let  ]
[ <op> -> goto V  ·  , if  ]
[ <op> -> goto V  ·  , goto  ]
[ <op> -> goto V  ·  , load  ]
[ <op> -> goto V  ·  , put  ]
[ <op> -> goto V  ·  , switch  ]
[ <op> -> goto V  ·  , error  ]
[ <op> -> goto V  ·  , comment  ]
}

set 21 = GOTO( set 9 , ( ) :
{
[ E ->  · E - T  , )  ]
[ E ->  · E - T  , -  ]
[ E ->  · E - T  , +  ]
[ E ->  · E + T  , )  ]
[ E ->  · E + T  , -  ]
[ E ->  · E + T  , +  ]
[ E ->  · T  , )  ]
[ E ->  · T  , -  ]
[ E ->  · T  , +  ]
[ T ->  · T * F  , )  ]
[ T ->  · T * F  , -  ]
[ T ->  · T * F  , +  ]
[ T ->  · T * F  , *  ]
[ T ->  · T * F  , /  ]
[ T ->  · T * F  , %  ]
[ T ->  · T / F  , )  ]
[ T ->  · T / F  , -  ]
[ T ->  · T / F  , +  ]
[ T ->  · T / F  , *  ]
[ T ->  · T / F  , /  ]
[ T ->  · T / F  , %  ]
[ T ->  · T % F  , )  ]
[ T ->  · T % F  , -  ]
[ T ->  · T % F  , +  ]
[ T ->  · T % F  , *  ]
[ T ->  · T % F  , /  ]
[ T ->  · T % F  , %  ]
[ T ->  · F  , )  ]
[ T ->  · F  , -  ]
[ T ->  · F  , +  ]
[ T ->  · F  , *  ]
[ T ->  · F  , /  ]
[ T ->  · F  , %  ]
[ F ->  · V  , )  ]
[ F ->  · V  , -  ]
[ F ->  · V  , +  ]
[ F ->  · V  , *  ]
[ F ->  · V  , /  ]
[ F ->  · V  , %  ]
[ F ->  · ( E )  , )  ]
[ F ->  · ( E )  , -  ]
[ F ->  · ( E )  , +  ]
[ F ->  · ( E )  , *  ]
[ F ->  · ( E )  , /  ]
[ F ->  · ( E )  , %  ]
[ F ->  · C  , )  ]
[ F ->  · C  , -  ]
[ F ->  · C  , +  ]
[ F ->  · C  , *  ]
[ F ->  · C  , /  ]
[ F ->  · C  , %  ]
[ F ->  · value ( E , E )  , )  ]
[ F ->  · value ( E , E )  , -  ]
[ F ->  · value ( E , E )  , +  ]
[ F ->  · value ( E , E )  , *  ]
[ F ->  · value ( E , E )  , /  ]
[ F ->  · value ( E , E )  , %  ]
[ F ->  · derivative ( E )  , )  ]
[ F ->  · derivative ( E )  , -  ]
[ F ->  · derivative ( E )  , +  ]
[ F ->  · derivative ( E )  , *  ]
[ F ->  · derivative ( E )  , /  ]
[ F ->  · derivative ( E )  , %  ]
[ F ->  · coeff ( E , E )  , )  ]
[ F ->  · coeff ( E , E )  , -  ]
[ F ->  · coeff ( E , E )  , +  ]
[ F ->  · coeff ( E , E )  , *  ]
[ F ->  · coeff ( E , E )  , /  ]
[ F ->  · coeff ( E , E )  , %  ]
[ F ->  · deg ( E )  , )  ]
[ F ->  · deg ( E )  , -  ]
[ F ->  · deg ( E )  , +  ]
[ F ->  · deg ( E )  , *  ]
[ F ->  · deg ( E )  , /  ]
[ F ->  · deg ( E )  , %  ]
[ F -> (  · E )  , Rel  ]
[ F -> (  · E )  , -  ]
[ F -> (  · E )  , +  ]
[ F -> (  · E )  , *  ]
[ F -> (  · E )  , /  ]
[ F -> (  · E )  , %  ]
}

set 22 = GOTO( set 9 , <test> ) :
{
[ <op> -> if <test>  · goto V <else> ;  ,  ]
[ <op> -> if <test>  · goto V <else> ;  , ;  ]
[ <op> -> if <test>  · goto V <else> ;  , V  ]
[ <op> -> if <test>  · goto V <else> ;  , :  ]
[ <op> -> if <test>  · goto V <else> ;  , let  ]
[ <op> -> if <test>  · goto V <else> ;  , if  ]
[ <op> -> if <test>  · goto V <else> ;  , goto  ]
[ <op> -> if <test>  · goto V <else> ;  , load  ]
[ <op> -> if <test>  · goto V <else> ;  , put  ]
[ <op> -> if <test>  · goto V <else> ;  , switch  ]
[ <op> -> if <test>  · goto V <else> ;  , error  ]
[ <op> -> if <test>  · goto V <else> ;  , comment  ]
}

set 23 = GOTO( set 9 , C ) :
{
[ F -> C  ·  , Rel  ]
[ F -> C  ·  , -  ]
[ F -> C  ·  , +  ]
[ F -> C  ·  , *  ]
[ F -> C  ·  , /  ]
[ F -> C  ·  , %  ]
}

set 24 = GOTO( set 9 , E ) :
{
[ E -> E  · - T  , Rel  ]
[ E -> E  · - T  , -  ]
[ E -> E  · - T  , +  ]
[ E -> E  · + T  , Rel  ]
[ E -> E  · + T  , -  ]
[ E -> E  · + T  , +  ]
[ <test> -> E  · Rel E  , goto  ]
}

set 25 = GOTO( set 9 , F ) :
{
[ T -> F  ·  , Rel  ]
[ T -> F  ·  , -  ]
[ T -> F  ·  , +  ]
[ T -> F  ·  , *  ]
[ T -> F  ·  , /  ]
[ T -> F  ·  , %  ]
}

set 26 = GOTO( set 9 , T ) :
{
[ E -> T  ·  , Rel  ]
[ E -> T  ·  , -  ]
[ E -> T  ·  , +  ]
[ T -> T  · * F  , Rel  ]
[ T -> T  · * F  , -  ]
[ T -> T  · * F  , +  ]
[ T -> T  · * F  , *  ]
[ T -> T  · * F  , /  ]
[ T -> T  · * F  , %  ]
[ T -> T  · / F  , Rel  ]
[ T -> T  · / F  , -  ]
[ T -> T  · / F  , +  ]
[ T -> T  · / F  , *  ]
[ T -> T  · / F  , /  ]
[ T -> T  · / F  , %  ]
[ T -> T  · % F  , Rel  ]
[ T -> T  · % F  , -  ]
[ T -> T  · % F  , +  ]
[ T -> T  · % F  , *  ]
[ T -> T  · % F  , /  ]
[ T -> T  · % F  , %  ]
}

set 27 = GOTO( set 9 , V ) :
{
[ F -> V  ·  , Rel  ]
[ F -> V  ·  , -  ]
[ F -> V  ·  , +  ]
[ F -> V  ·  , *  ]
[ F -> V  ·  , /  ]
[ F -> V  ·  , %  ]
}

set 28 = GOTO( set 9 , coeff ) :
{
[ F -> coeff  · ( E , E )  , Rel  ]
[ F -> coeff  · ( E , E )  , -  ]
[ F -> coeff  · ( E , E )  , +  ]
[ F -> coeff  · ( E , E )  , *  ]
[ F -> coeff  · ( E , E )  , /  ]
[ F -> coeff  · ( E , E )  , %  ]
}

set 29 = GOTO( set 9 , deg ) :
{
[ F -> deg  · ( E )  , Rel  ]
[ F -> deg  · ( E )  , -  ]
[ F -> deg  · ( E )  , +  ]
[ F -> deg  · ( E )  , *  ]
[ F -> deg  · ( E )  , /  ]
[ F -> deg  · ( E )  , %  ]
}

set 30 = GOTO( set 9 , derivative ) :
{
[ F -> derivative  · ( E )  , Rel  ]
[ F -> derivative  · ( E )  , -  ]
[ F -> derivative  · ( E )  , +  ]
[ F -> derivative  · ( E )  , *  ]
[ F -> derivative  · ( E )  , /  ]
[ F -> derivative  · ( E )  , %  ]
}

set 31 = GOTO( set 9 , value ) :
{
[ F -> value  · ( E , E )  , Rel  ]
[ F -> value  · ( E , E )  , -  ]
[ F -> value  · ( E , E )  , +  ]
[ F -> value  · ( E , E )  , *  ]
[ F -> value  · ( E , E )  , /  ]
[ F -> value  · ( E , E )  , %  ]
}

set 32 = GOTO( set 10 , V ) :
{
[ <op> -> let V  · <listA>  ,  ]
[ <op> -> let V  · <listA>  , ;  ]
[ <op> -> let V  · <listA>  , V  ]
[ <op> -> let V  · <listA>  , :  ]
[ <op> -> let V  · <listA>  , let  ]
[ <op> -> let V  · <listA>  , if  ]
[ <op> -> let V  · <listA>  , goto  ]
[ <op> -> let V  · <listA>  , load  ]
[ <op> -> let V  · <listA>  , put  ]
[ <op> -> let V  · <listA>  , switch  ]
[ <op> -> let V  · <listA>  , error  ]
[ <op> -> let V  · <listA>  , comment  ]
[ <listA> ->  · = V <listA>  ,  ]
[ <listA> ->  · = V <listA>  , ;  ]
[ <listA> ->  · = V <listA>  , V  ]
[ <listA> ->  · = V <listA>  , :  ]
[ <listA> ->  · = V <listA>  , let  ]
[ <listA> ->  · = V <listA>  , if  ]
[ <listA> ->  · = V <listA>  , goto  ]
[ <listA> ->  · = V <listA>  , load  ]
[ <listA> ->  · = V <listA>  , put  ]
[ <listA> ->  · = V <listA>  , switch  ]
[ <listA> ->  · = V <listA>  , error  ]
[ <listA> ->  · = V <listA>  , comment  ]
[ <listA> ->  · = E ;  ,  ]
[ <listA> ->  · = E ;  , ;  ]
[ <listA> ->  · = E ;  , V  ]
[ <listA> ->  · = E ;  , :  ]
[ <listA> ->  · = E ;  , let  ]
[ <listA> ->  · = E ;  , if  ]
[ <listA> ->  · = E ;  , goto  ]
[ <listA> ->  · = E ;  , load  ]
[ <listA> ->  · = E ;  , put  ]
[ <listA> ->  · = E ;  , switch  ]
[ <listA> ->  · = E ;  , error  ]
[ <listA> ->  · = E ;  , comment  ]
}

set 33 = GOTO( set 11 , ( ) :
{
[ <op> -> load (  · V <listV> ) ;  ,  ]
[ <op> -> load (  · V <listV> ) ;  , ;  ]
[ <op> -> load (  · V <listV> ) ;  , V  ]
[ <op> -> load (  · V <listV> ) ;  , :  ]
[ <op> -> load (  · V <listV> ) ;  , let  ]
[ <op> -> load (  · V <listV> ) ;  , if  ]
[ <op> -> load (  · V <listV> ) ;  , goto  ]
[ <op> -> load (  · V <listV> ) ;  , load  ]
[ <op> -> load (  · V <listV> ) ;  , put  ]
[ <op> -> load (  · V <listV> ) ;  , switch  ]
[ <op> -> load (  · V <listV> ) ;  , error  ]
[ <op> -> load (  · V <listV> ) ;  , comment  ]
}

set 34 = GOTO( set 12 , ( ) :
{
[ <op> -> put (  · E <listE> ) ;  ,  ]
[ <op> -> put (  · E <listE> ) ;  , ;  ]
[ <op> -> put (  · E <listE> ) ;  , V  ]
[ <op> -> put (  · E <listE> ) ;  , :  ]
[ <op> -> put (  · E <listE> ) ;  , let  ]
[ <op> -> put (  · E <listE> ) ;  , if  ]
[ <op> -> put (  · E <listE> ) ;  , goto  ]
[ <op> -> put (  · E <listE> ) ;  , load  ]
[ <op> -> put (  · E <listE> ) ;  , put  ]
[ <op> -> put (  · E <listE> ) ;  , switch  ]
[ <op> -> put (  · E <listE> ) ;  , error  ]
[ <op> -> put (  · E <listE> ) ;  , comment  ]
[ E ->  · E - T  , ,  ]
[ E ->  · E - T  , )  ]
[ E ->  · E - T  , -  ]
[ E ->  · E - T  , +  ]
[ E ->  · E + T  , ,  ]
[ E ->  · E + T  , )  ]
[ E ->  · E + T  , -  ]
[ E ->  · E + T  , +  ]
[ E ->  · T  , ,  ]
[ E ->  · T  , )  ]
[ E ->  · T  , -  ]
[ E ->  · T  , +  ]
[ T ->  · T * F  , ,  ]
[ T ->  · T * F  , )  ]
[ T ->  · T * F  , -  ]
[ T ->  · T * F  , +  ]
[ T ->  · T * F  , *  ]
[ T ->  · T * F  , /  ]
[ T ->  · T * F  , %  ]
[ T ->  · T / F  , ,  ]
[ T ->  · T / F  , )  ]
[ T ->  · T / F  , -  ]
[ T ->  · T / F  , +  ]
[ T ->  · T / F  , *  ]
[ T ->  · T / F  , /  ]
[ T ->  · T / F  , %  ]
[ T ->  · T % F  , ,  ]
[ T ->  · T % F  , )  ]
[ T ->  · T % F  , -  ]
[ T ->  · T % F  , +  ]
[ T ->  · T % F  , *  ]
[ T ->  · T % F  , /  ]
[ T ->  · T % F  , %  ]
[ T ->  · F  , ,  ]
[ T ->  · F  , )  ]
[ T ->  · F  , -  ]
[ T ->  · F  , +  ]
[ T ->  · F  , *  ]
[ T ->  · F  , /  ]
[ T ->  · F  , %  ]
[ F ->  · V  , ,  ]
[ F ->  · V  , )  ]
[ F ->  · V  , -  ]
[ F ->  · V  , +  ]
[ F ->  · V  , *  ]
[ F ->  · V  , /  ]
[ F ->  · V  , %  ]
[ F ->  · ( E )  , ,  ]
[ F ->  · ( E )  , )  ]
[ F ->  · ( E )  , -  ]
[ F ->  · ( E )  , +  ]
[ F ->  · ( E )  , *  ]
[ F ->  · ( E )  , /  ]
[ F ->  · ( E )  , %  ]
[ F ->  · C  , ,  ]
[ F ->  · C  , )  ]
[ F ->  · C  , -  ]
[ F ->  · C  , +  ]
[ F ->  · C  , *  ]
[ F ->  · C  , /  ]
[ F ->  · C  , %  ]
[ F ->  · value ( E , E )  , ,  ]
[ F ->  · value ( E , E )  , )  ]
[ F ->  · value ( E , E )  , -  ]
[ F ->  · value ( E , E )  , +  ]
[ F ->  · value ( E , E )  , *  ]
[ F ->  · value ( E , E )  , /  ]
[ F ->  · value ( E , E )  , %  ]
[ F ->  · derivative ( E )  , ,  ]
[ F ->  · derivative ( E )  , )  ]
[ F ->  · derivative ( E )  , -  ]
[ F ->  · derivative ( E )  , +  ]
[ F ->  · derivative ( E )  , *  ]
[ F ->  · derivative ( E )  , /  ]
[ F ->  · derivative ( E )  , %  ]
[ F ->  · coeff ( E , E )  , ,  ]
[ F ->  · coeff ( E , E )  , )  ]
[ F ->  · coeff ( E , E )  , -  ]
[ F ->  · coeff ( E , E )  , +  ]
[ F ->  · coeff ( E , E )  , *  ]
[ F ->  · coeff ( E , E )  , /  ]
[ F ->  · coeff ( E , E )  , %  ]
[ F ->  · deg ( E )  , ,  ]
[ F ->  · deg ( E )  , )  ]
[ F ->  · deg ( E )  , -  ]
[ F ->  · deg ( E )  , +  ]
[ F ->  · deg ( E )  , *  ]
[ F ->  · deg ( E )  , /  ]
[ F ->  · deg ( E )  , %  ]
}

set 35 = GOTO( set 13 , ( ) :
{
[ <op> -> switch (  · E ) <switch_body> end switch ;  ,  ]
[ <op> -> switch (  · E ) <switch_body> end switch ;  , ;  ]
[ <op> -> switch (  · E ) <switch_body> end switch ;  , V  ]
[ <op> -> switch (  · E ) <switch_body> end switch ;  , :  ]
[ <op> -> switch (  · E ) <switch_body> end switch ;  , let  ]
[ <op> -> switch (  · E ) <switch_body> end switch ;  , if  ]
[ <op> -> switch (  · E ) <switch_body> end switch ;  , goto  ]
[ <op> -> switch (  · E ) <switch_body> end switch ;  , load  ]
[ <op> -> switch (  · E ) <switch_body> end switch ;  , put  ]
[ <op> -> switch (  · E ) <switch_body> end switch ;  , switch  ]
[ <op> -> switch (  · E ) <switch_body> end switch ;  , error  ]
[ <op> -> switch (  · E ) <switch_body> end switch ;  , comment  ]
[ E ->  · E - T  , )  ]
[ E ->  · E - T  , -  ]
[ E ->  · E - T  , +  ]
[ E ->  · E + T  , )  ]
[ E ->  · E + T  , -  ]
[ E ->  · E + T  , +  ]
[ E ->  · T  , )  ]
[ E ->  · T  , -  ]
[ E ->  · T  , +  ]
[ T ->  · T * F  , )  ]
[ T ->  · T * F  , -  ]
[ T ->  · T * F  , +  ]
[ T ->  · T * F  , *  ]
[ T ->  · T * F  , /  ]
[ T ->  · T * F  , %  ]
[ T ->  · T / F  , )  ]
[ T ->  · T / F  , -  ]
[ T ->  · T / F  , +  ]
[ T ->  · T / F  , *  ]
[ T ->  · T / F  , /  ]
[ T ->  · T / F  , %  ]
[ T ->  · T % F  , )  ]
[ T ->  · T % F  , -  ]
[ T ->  · T % F  , +  ]
[ T ->  · T % F  , *  ]
[ T ->  · T % F  , /  ]
[ T ->  · T % F  , %  ]
[ T ->  · F  , )  ]
[ T ->  · F  , -  ]
[ T ->  · F  , +  ]
[ T ->  · F  , *  ]
[ T ->  · F  , /  ]
[ T ->  · F  , %  ]
[ F ->  · V  , )  ]
[ F ->  · V  , -  ]
[ F ->  · V  , +  ]
[ F ->  · V  , *  ]
[ F ->  · V  , /  ]
[ F ->  · V  , %  ]
[ F ->  · ( E )  , )  ]
[ F ->  · ( E )  , -  ]
[ F ->  · ( E )  , +  ]
[ F ->  · ( E )  , *  ]
[ F ->  · ( E )  , /  ]
[ F ->  · ( E )  , %  ]
[ F ->  · C  , )  ]
[ F ->  · C  , -  ]
[ F ->  · C  , +  ]
[ F ->  · C  , *  ]
[ F ->  · C  , /  ]
[ F ->  · C  , %  ]
[ F ->  · value ( E , E )  , )  ]
[ F ->  · value ( E , E )  , -  ]
[ F ->  · value ( E , E )  , +  ]
[ F ->  · value ( E , E )  , *  ]
[ F ->  · value ( E , E )  , /  ]
[ F ->  · value ( E , E )  , %  ]
[ F ->  · derivative ( E )  , )  ]
[ F ->  · derivative ( E )  , -  ]
[ F ->  · derivative ( E )  , +  ]
[ F ->  · derivative ( E )  , *  ]
[ F ->  · derivative ( E )  , /  ]
[ F ->  · derivative ( E )  , %  ]
[ F ->  · coeff ( E , E )  , )  ]
[ F ->  · coeff ( E , E )  , -  ]
[ F ->  · coeff ( E , E )  , +  ]
[ F ->  · coeff ( E , E )  , *  ]
[ F ->  · coeff ( E , E )  , /  ]
[ F ->  · coeff ( E , E )  , %  ]
[ F ->  · deg ( E )  , )  ]
[ F ->  · deg ( E )  , -  ]
[ F ->  · deg ( E )  , +  ]
[ F ->  · deg ( E )  , *  ]
[ F ->  · deg ( E )  , /  ]
[ F ->  · deg ( E )  , %  ]
}

set 36 = GOTO( set 16 , V ) :
{
[ <listV> ->  ·  , :  ]
[ <listV> ->  · , V <listV>  , :  ]
[ <listV> -> , V  · <listV>  , :  ]
}

set 37 = GOTO( set 17 , : ) :
{
[ <op> -> V <listV> :  · TYPE ;  ,  ]
[ <op> -> V <listV> :  · TYPE ;  , ;  ]
[ <op> -> V <listV> :  · TYPE ;  , V  ]
[ <op> -> V <listV> :  · TYPE ;  , :  ]
[ <op> -> V <listV> :  · TYPE ;  , let  ]
[ <op> -> V <listV> :  · TYPE ;  , if  ]
[ <op> -> V <listV> :  · TYPE ;  , goto  ]
[ <op> -> V <listV> :  · TYPE ;  , load  ]
[ <op> -> V <listV> :  · TYPE ;  , put  ]
[ <op> -> V <listV> :  · TYPE ;  , switch  ]
[ <op> -> V <listV> :  · TYPE ;  , error  ]
[ <op> -> V <listV> :  · TYPE ;  , comment  ]
}

set 38 = GOTO( set 18 , V ) :
{
[ <op> -> V for V  · = E to E <step> <pr> next V  ,  ]
[ <op> -> V for V  · = E to E <step> <pr> next V  , ;  ]
[ <op> -> V for V  · = E to E <step> <pr> next V  , V  ]
[ <op> -> V for V  · = E to E <step> <pr> next V  , :  ]
[ <op> -> V for V  · = E to E <step> <pr> next V  , let  ]
[ <op> -> V for V  · = E to E <step> <pr> next V  , if  ]
[ <op> -> V for V  · = E to E <step> <pr> next V  , goto  ]
[ <op> -> V for V  · = E to E <step> <pr> next V  , load  ]
[ <op> -> V for V  · = E to E <step> <pr> next V  , put  ]
[ <op> -> V for V  · = E to E <step> <pr> next V  , switch  ]
[ <op> -> V for V  · = E to E <step> <pr> next V  , error  ]
[ <op> -> V for V  · = E to E <step> <pr> next V  , comment  ]
}

set 39 = GOTO( set 21 , ( ) :
{
[ E ->  · E - T  , )  ]
[ E ->  · E - T  , -  ]
[ E ->  · E - T  , +  ]
[ E ->  · E + T  , )  ]
[ E ->  · E + T  , -  ]
[ E ->  · E + T  , +  ]
[ E ->  · T  , )  ]
[ E ->  · T  , -  ]
[ E ->  · T  , +  ]
[ T ->  · T * F  , )  ]
[ T ->  · T * F  , -  ]
[ T ->  · T * F  , +  ]
[ T ->  · T * F  , *  ]
[ T ->  · T * F  , /  ]
[ T ->  · T * F  , %  ]
[ T ->  · T / F  , )  ]
[ T ->  · T / F  , -  ]
[ T ->  · T / F  , +  ]
[ T ->  · T / F  , *  ]
[ T ->  · T / F  , /  ]
[ T ->  · T / F  , %  ]
[ T ->  · T % F  , )  ]
[ T ->  · T % F  , -  ]
[ T ->  · T % F  , +  ]
[ T ->  · T % F  , *  ]
[ T ->  · T % F  , /  ]
[ T ->  · T % F  , %  ]
[ T ->  · F  , )  ]
[ T ->  · F  , -  ]
[ T ->  · F  , +  ]
[ T ->  · F  , *  ]
[ T ->  · F  , /  ]
[ T ->  · F  , %  ]
[ F ->  · V  , )  ]
[ F ->  · V  , -  ]
[ F ->  · V  , +  ]
[ F ->  · V  , *  ]
[ F ->  · V  , /  ]
[ F ->  · V  , %  ]
[ F ->  · ( E )  , )  ]
[ F ->  · ( E )  , -  ]
[ F ->  · ( E )  , +  ]
[ F ->  · ( E )  , *  ]
[ F ->  · ( E )  , /  ]
[ F ->  · ( E )  , %  ]
[ F ->  · C  , )  ]
[ F ->  · C  , -  ]
[ F ->  · C  , +  ]
[ F ->  · C  , *  ]
[ F ->  · C  , /  ]
[ F ->  · C  , %  ]
[ F ->  · value ( E , E )  , )  ]
[ F ->  · value ( E , E )  , -  ]
[ F ->  · value ( E , E )  , +  ]
[ F ->  · value ( E , E )  , *  ]
[ F ->  · value ( E , E )  , /  ]
[ F ->  · value ( E , E )  , %  ]
[ F ->  · derivative ( E )  , )  ]
[ F ->  · derivative ( E )  , -  ]
[ F ->  · derivative ( E )  , +  ]
[ F ->  · derivative ( E )  , *  ]
[ F ->  · derivative ( E )  , /  ]
[ F ->  · derivative ( E )  , %  ]
[ F ->  · coeff ( E , E )  , )  ]
[ F ->  · coeff ( E , E )  , -  ]
[ F ->  · coeff ( E , E )  , +  ]
[ F ->  · coeff ( E , E )  , *  ]
[ F ->  · coeff ( E , E )  , /  ]
[ F ->  · coeff ( E , E )  , %  ]
[ F ->  · deg ( E )  , )  ]
[ F ->  · deg ( E )  , -  ]
[ F ->  · deg ( E )  , +  ]
[ F ->  · deg ( E )  , *  ]
[ F ->  · deg ( E )  , /  ]
[ F ->  · deg ( E )  , %  ]
[ F -> (  · E )  , )  ]
[ F -> (  · E )  , -  ]
[ F -> (  · E )  , +  ]
[ F -> (  · E )  , *  ]
[ F -> (  · E )  , /  ]
[ F -> (  · E )  , %  ]
}

set 40 = GOTO( set 21 , C ) :
{
[ F -> C  ·  , )  ]
[ F -> C  ·  , -  ]
[ F -> C  ·  , +  ]
[ F -> C  ·  , *  ]
[ F -> C  ·  , /  ]
[ F -> C  ·  , %  ]
}

set 41 = GOTO( set 21 , E ) :
{
[ E -> E  · - T  , )  ]
[ E -> E  · - T  , -  ]
[ E -> E  · - T  , +  ]
[ E -> E  · + T  , )  ]
[ E -> E  · + T  , -  ]
[ E -> E  · + T  , +  ]
[ F -> ( E  · )  , Rel  ]
[ F -> ( E  · )  , -  ]
[ F -> ( E  · )  , +  ]
[ F -> ( E  · )  , *  ]
[ F -> ( E  · )  , /  ]
[ F -> ( E  · )  , %  ]
}

set 42 = GOTO( set 21 , F ) :
{
[ T -> F  ·  , )  ]
[ T -> F  ·  , -  ]
[ T -> F  ·  , +  ]
[ T -> F  ·  , *  ]
[ T -> F  ·  , /  ]
[ T -> F  ·  , %  ]
}

set 43 = GOTO( set 21 , T ) :
{
[ E -> T  ·  , )  ]
[ E -> T  ·  , -  ]
[ E -> T  ·  , +  ]
[ T -> T  · * F  , )  ]
[ T -> T  · * F  , -  ]
[ T -> T  · * F  , +  ]
[ T -> T  · * F  , *  ]
[ T -> T  · * F  , /  ]
[ T -> T  · * F  , %  ]
[ T -> T  · / F  , )  ]
[ T -> T  · / F  , -  ]
[ T -> T  · / F  , +  ]
[ T -> T  · / F  , *  ]
[ T -> T  · / F  , /  ]
[ T -> T  · / F  , %  ]
[ T -> T  · % F  , )  ]
[ T -> T  · % F  , -  ]
[ T -> T  · % F  , +  ]
[ T -> T  · % F  , *  ]
[ T -> T  · % F  , /  ]
[ T -> T  · % F  , %  ]
}

set 44 = GOTO( set 21 , V ) :
{
[ F -> V  ·  , )  ]
[ F -> V  ·  , -  ]
[ F -> V  ·  , +  ]
[ F -> V  ·  , *  ]
[ F -> V  ·  , /  ]
[ F -> V  ·  , %  ]
}

set 45 = GOTO( set 21 , coeff ) :
{
[ F -> coeff  · ( E , E )  , )  ]
[ F -> coeff  · ( E , E )  , -  ]
[ F -> coeff  · ( E , E )  , +  ]
[ F -> coeff  · ( E , E )  , *  ]
[ F -> coeff  · ( E , E )  , /  ]
[ F -> coeff  · ( E , E )  , %  ]
}

set 46 = GOTO( set 21 , deg ) :
{
[ F -> deg  · ( E )  , )  ]
[ F -> deg  · ( E )  , -  ]
[ F -> deg  · ( E )  , +  ]
[ F -> deg  · ( E )  , *  ]
[ F -> deg  · ( E )  , /  ]
[ F -> deg  · ( E )  , %  ]
}

set 47 = GOTO( set 21 , derivative ) :
{
[ F -> derivative  · ( E )  , )  ]
[ F -> derivative  · ( E )  , -  ]
[ F -> derivative  · ( E )  , +  ]
[ F -> derivative  · ( E )  , *  ]
[ F -> derivative  · ( E )  , /  ]
[ F -> derivative  · ( E )  , %  ]
}

set 48 = GOTO( set 21 , value ) :
{
[ F -> value  · ( E , E )  , )  ]
[ F -> value  · ( E , E )  , -  ]
[ F -> value  · ( E , E )  , +  ]
[ F -> value  · ( E , E )  , *  ]
[ F -> value  · ( E , E )  , /  ]
[ F -> value  · ( E , E )  , %  ]
}

set 49 = GOTO( set 22 , goto ) :
{
[ <op> -> if <test> goto  · V <else> ;  ,  ]
[ <op> -> if <test> goto  · V <else> ;  , ;  ]
[ <op> -> if <test> goto  · V <else> ;  , V  ]
[ <op> -> if <test> goto  · V <else> ;  , :  ]
[ <op> -> if <test> goto  · V <else> ;  , let  ]
[ <op> -> if <test> goto  · V <else> ;  , if  ]
[ <op> -> if <test> goto  · V <else> ;  , goto  ]
[ <op> -> if <test> goto  · V <else> ;  , load  ]
[ <op> -> if <test> goto  · V <else> ;  , put  ]
[ <op> -> if <test> goto  · V <else> ;  , switch  ]
[ <op> -> if <test> goto  · V <else> ;  , error  ]
[ <op> -> if <test> goto  · V <else> ;  , comment  ]
}

set 50 = GOTO( set 24 , + ) :
{
[ E -> E +  · T  , Rel  ]
[ E -> E +  · T  , -  ]
[ E -> E +  · T  , +  ]
[ T ->  · T * F  , Rel  ]
[ T ->  · T * F  , -  ]
[ T ->  · T * F  , +  ]
[ T ->  · T * F  , *  ]
[ T ->  · T * F  , /  ]
[ T ->  · T * F  , %  ]
[ T ->  · T / F  , Rel  ]
[ T ->  · T / F  , -  ]
[ T ->  · T / F  , +  ]
[ T ->  · T / F  , *  ]
[ T ->  · T / F  , /  ]
[ T ->  · T / F  , %  ]
[ T ->  · T % F  , Rel  ]
[ T ->  · T % F  , -  ]
[ T ->  · T % F  , +  ]
[ T ->  · T % F  , *  ]
[ T ->  · T % F  , /  ]
[ T ->  · T % F  , %  ]
[ T ->  · F  , Rel  ]
[ T ->  · F  , -  ]
[ T ->  · F  , +  ]
[ T ->  · F  , *  ]
[ T ->  · F  , /  ]
[ T ->  · F  , %  ]
[ F ->  · V  , Rel  ]
[ F ->  · V  , -  ]
[ F ->  · V  , +  ]
[ F ->  · V  , *  ]
[ F ->  · V  , /  ]
[ F ->  · V  , %  ]
[ F ->  · ( E )  , Rel  ]
[ F ->  · ( E )  , -  ]
[ F ->  · ( E )  , +  ]
[ F ->  · ( E )  , *  ]
[ F ->  · ( E )  , /  ]
[ F ->  · ( E )  , %  ]
[ F ->  · C  , Rel  ]
[ F ->  · C  , -  ]
[ F ->  · C  , +  ]
[ F ->  · C  , *  ]
[ F ->  · C  , /  ]
[ F ->  · C  , %  ]
[ F ->  · value ( E , E )  , Rel  ]
[ F ->  · value ( E , E )  , -  ]
[ F ->  · value ( E , E )  , +  ]
[ F ->  · value ( E , E )  , *  ]
[ F ->  · value ( E , E )  , /  ]
[ F ->  · value ( E , E )  , %  ]
[ F ->  · derivative ( E )  , Rel  ]
[ F ->  · derivative ( E )  , -  ]
[ F ->  · derivative ( E )  , +  ]
[ F ->  · derivative ( E )  , *  ]
[ F ->  · derivative ( E )  , /  ]
[ F ->  · derivative ( E )  , %  ]
[ F ->  · coeff ( E , E )  , Rel  ]
[ F ->  · coeff ( E , E )  , -  ]
[ F ->  · coeff ( E , E )  , +  ]
[ F ->  · coeff ( E , E )  , *  ]
[ F ->  · coeff ( E , E )  , /  ]
[ F ->  · coeff ( E , E )  , %  ]
[ F ->  · deg ( E )  , Rel  ]
[ F ->  · deg ( E )  , -  ]
[ F ->  · deg ( E )  , +  ]
[ F ->  · deg ( E )  , *  ]
[ F ->  · deg ( E )  , /  ]
[ F ->  · deg ( E )  , %  ]
}

set 51 = GOTO( set 24 , - ) :
{
[ E -> E -  · T  , Rel  ]
[ E -> E -  · T  , -  ]
[ E -> E -  · T  , +  ]
[ T ->  · T * F  , Rel  ]
[ T ->  · T * F  , -  ]
[ T ->  · T * F  , +  ]
[ T ->  · T * F  , *  ]
[ T ->  · T * F  , /  ]
[ T ->  · T * F  , %  ]
[ T ->  · T / F  , Rel  ]
[ T ->  · T / F  , -  ]
[ T ->  · T / F  , +  ]
[ T ->  · T / F  , *  ]
[ T ->  · T / F  , /  ]
[ T ->  · T / F  , %  ]
[ T ->  · T % F  , Rel  ]
[ T ->  · T % F  , -  ]
[ T ->  · T % F  , +  ]
[ T ->  · T % F  , *  ]
[ T ->  · T % F  , /  ]
[ T ->  · T % F  , %  ]
[ T ->  · F  , Rel  ]
[ T ->  · F  , -  ]
[ T ->  · F  , +  ]
[ T ->  · F  , *  ]
[ T ->  · F  , /  ]
[ T ->  · F  , %  ]
[ F ->  · V  , Rel  ]
[ F ->  · V  , -  ]
[ F ->  · V  , +  ]
[ F ->  · V  , *  ]
[ F ->  · V  , /  ]
[ F ->  · V  , %  ]
[ F ->  · ( E )  , Rel  ]
[ F ->  · ( E )  , -  ]
[ F ->  · ( E )  , +  ]
[ F ->  · ( E )  , *  ]
[ F ->  · ( E )  , /  ]
[ F ->  · ( E )  , %  ]
[ F ->  · C  , Rel  ]
[ F ->  · C  , -  ]
[ F ->  · C  , +  ]
[ F ->  · C  , *  ]
[ F ->  · C  , /  ]
[ F ->  · C  , %  ]
[ F ->  · value ( E , E )  , Rel  ]
[ F ->  · value ( E , E )  , -  ]
[ F ->  · value ( E , E )  , +  ]
[ F ->  · value ( E , E )  , *  ]
[ F ->  · value ( E , E )  , /  ]
[ F ->  · value ( E , E )  , %  ]
[ F ->  · derivative ( E )  , Rel  ]
[ F ->  · derivative ( E )  , -  ]
[ F ->  · derivative ( E )  , +  ]
[ F ->  · derivative ( E )  , *  ]
[ F ->  · derivative ( E )  , /  ]
[ F ->  · derivative ( E )  , %  ]
[ F ->  · coeff ( E , E )  , Rel  ]
[ F ->  · coeff ( E , E )  , -  ]
[ F ->  · coeff ( E , E )  , +  ]
[ F ->  · coeff ( E , E )  , *  ]
[ F ->  · coeff ( E , E )  , /  ]
[ F ->  · coeff ( E , E )  , %  ]
[ F ->  · deg ( E )  , Rel  ]
[ F ->  · deg ( E )  , -  ]
[ F ->  · deg ( E )  , +  ]
[ F ->  · deg ( E )  , *  ]
[ F ->  · deg ( E )  , /  ]
[ F ->  · deg ( E )  , %  ]
}

set 52 = GOTO( set 24 , Rel ) :
{
[ E ->  · E - T  , goto  ]
[ E ->  · E - T  , -  ]
[ E ->  · E - T  , +  ]
[ E ->  · E + T  , goto  ]
[ E ->  · E + T  , -  ]
[ E ->  · E + T  , +  ]
[ E ->  · T  , goto  ]
[ E ->  · T  , -  ]
[ E ->  · T  , +  ]
[ <test> -> E Rel  · E  , goto  ]
[ T ->  · T * F  , goto  ]
[ T ->  · T * F  , -  ]
[ T ->  · T * F  , +  ]
[ T ->  · T * F  , *  ]
[ T ->  · T * F  , /  ]
[ T ->  · T * F  , %  ]
[ T ->  · T / F  , goto  ]
[ T ->  · T / F  , -  ]
[ T ->  · T / F  , +  ]
[ T ->  · T / F  , *  ]
[ T ->  · T / F  , /  ]
[ T ->  · T / F  , %  ]
[ T ->  · T % F  , goto  ]
[ T ->  · T % F  , -  ]
[ T ->  · T % F  , +  ]
[ T ->  · T % F  , *  ]
[ T ->  · T % F  , /  ]
[ T ->  · T % F  , %  ]
[ T ->  · F  , goto  ]
[ T ->  · F  , -  ]
[ T ->  · F  , +  ]
[ T ->  · F  , *  ]
[ T ->  · F  , /  ]
[ T ->  · F  , %  ]
[ F ->  · V  , goto  ]
[ F ->  · V  , -  ]
[ F ->  · V  , +  ]
[ F ->  · V  , *  ]
[ F ->  · V  , /  ]
[ F ->  · V  , %  ]
[ F ->  · ( E )  , goto  ]
[ F ->  · ( E )  , -  ]
[ F ->  · ( E )  , +  ]
[ F ->  · ( E )  , *  ]
[ F ->  · ( E )  , /  ]
[ F ->  · ( E )  , %  ]
[ F ->  · C  , goto  ]
[ F ->  · C  , -  ]
[ F ->  · C  , +  ]
[ F ->  · C  , *  ]
[ F ->  · C  , /  ]
[ F ->  · C  , %  ]
[ F ->  · value ( E , E )  , goto  ]
[ F ->  · value ( E , E )  , -  ]
[ F ->  · value ( E , E )  , +  ]
[ F ->  · value ( E , E )  , *  ]
[ F ->  · value ( E , E )  , /  ]
[ F ->  · value ( E , E )  , %  ]
[ F ->  · derivative ( E )  , goto  ]
[ F ->  · derivative ( E )  , -  ]
[ F ->  · derivative ( E )  , +  ]
[ F ->  · derivative ( E )  , *  ]
[ F ->  · derivative ( E )  , /  ]
[ F ->  · derivative ( E )  , %  ]
[ F ->  · coeff ( E , E )  , goto  ]
[ F ->  · coeff ( E , E )  , -  ]
[ F ->  · coeff ( E , E )  , +  ]
[ F ->  · coeff ( E , E )  , *  ]
[ F ->  · coeff ( E , E )  , /  ]
[ F ->  · coeff ( E , E )  , %  ]
[ F ->  · deg ( E )  , goto  ]
[ F ->  · deg ( E )  , -  ]
[ F ->  · deg ( E )  , +  ]
[ F ->  · deg ( E )  , *  ]
[ F ->  · deg ( E )  , /  ]
[ F ->  · deg ( E )  , %  ]
}

set 53 = GOTO( set 26 , % ) :
{
[ T -> T %  · F  , Rel  ]
[ T -> T %  · F  , -  ]
[ T -> T %  · F  , +  ]
[ T -> T %  · F  , *  ]
[ T -> T %  · F  , /  ]
[ T -> T %  · F  , %  ]
[ F ->  · V  , Rel  ]
[ F ->  · V  , -  ]
[ F ->  · V  , +  ]
[ F ->  · V  , *  ]
[ F ->  · V  , /  ]
[ F ->  · V  , %  ]
[ F ->  · ( E )  , Rel  ]
[ F ->  · ( E )  , -  ]
[ F ->  · ( E )  , +  ]
[ F ->  · ( E )  , *  ]
[ F ->  · ( E )  , /  ]
[ F ->  · ( E )  , %  ]
[ F ->  · C  , Rel  ]
[ F ->  · C  , -  ]
[ F ->  · C  , +  ]
[ F ->  · C  , *  ]
[ F ->  · C  , /  ]
[ F ->  · C  , %  ]
[ F ->  · value ( E , E )  , Rel  ]
[ F ->  · value ( E , E )  , -  ]
[ F ->  · value ( E , E )  , +  ]
[ F ->  · value ( E , E )  , *  ]
[ F ->  · value ( E , E )  , /  ]
[ F ->  · value ( E , E )  , %  ]
[ F ->  · derivative ( E )  , Rel  ]
[ F ->  · derivative ( E )  , -  ]
[ F ->  · derivative ( E )  , +  ]
[ F ->  · derivative ( E )  , *  ]
[ F ->  · derivative ( E )  , /  ]
[ F ->  · derivative ( E )  , %  ]
[ F ->  · coeff ( E , E )  , Rel  ]
[ F ->  · coeff ( E , E )  , -  ]
[ F ->  · coeff ( E , E )  , +  ]
[ F ->  · coeff ( E , E )  , *  ]
[ F ->  · coeff ( E , E )  , /  ]
[ F ->  · coeff ( E , E )  , %  ]
[ F ->  · deg ( E )  , Rel  ]
[ F ->  · deg ( E )  , -  ]
[ F ->  · deg ( E )  , +  ]
[ F ->  · deg ( E )  , *  ]
[ F ->  · deg ( E )  , /  ]
[ F ->  · deg ( E )  , %  ]
}

set 54 = GOTO( set 26 , * ) :
{
[ T -> T *  · F  , Rel  ]
[ T -> T *  · F  , -  ]
[ T -> T *  · F  , +  ]
[ T -> T *  · F  , *  ]
[ T -> T *  · F  , /  ]
[ T -> T *  · F  , %  ]
[ F ->  · V  , Rel  ]
[ F ->  · V  , -  ]
[ F ->  · V  , +  ]
[ F ->  · V  , *  ]
[ F ->  · V  , /  ]
[ F ->  · V  , %  ]
[ F ->  · ( E )  , Rel  ]
[ F ->  · ( E )  , -  ]
[ F ->  · ( E )  , +  ]
[ F ->  · ( E )  , *  ]
[ F ->  · ( E )  , /  ]
[ F ->  · ( E )  , %  ]
[ F ->  · C  , Rel  ]
[ F ->  · C  , -  ]
[ F ->  · C  , +  ]
[ F ->  · C  , *  ]
[ F ->  · C  , /  ]
[ F ->  · C  , %  ]
[ F ->  · value ( E , E )  , Rel  ]
[ F ->  · value ( E , E )  , -  ]
[ F ->  · value ( E , E )  , +  ]
[ F ->  · value ( E , E )  , *  ]
[ F ->  · value ( E , E )  , /  ]
[ F ->  · value ( E , E )  , %  ]
[ F ->  · derivative ( E )  , Rel  ]
[ F ->  · derivative ( E )  , -  ]
[ F ->  · derivative ( E )  , +  ]
[ F ->  · derivative ( E )  , *  ]
[ F ->  · derivative ( E )  , /  ]
[ F ->  · derivative ( E )  , %  ]
[ F ->  · coeff ( E , E )  , Rel  ]
[ F ->  · coeff ( E , E )  , -  ]
[ F ->  · coeff ( E , E )  , +  ]
[ F ->  · coeff ( E , E )  , *  ]
[ F ->  · coeff ( E , E )  , /  ]
[ F ->  · coeff ( E , E )  , %  ]
[ F ->  · deg ( E )  , Rel  ]
[ F ->  · deg ( E )  , -  ]
[ F ->  · deg ( E )  , +  ]
[ F ->  · deg ( E )  , *  ]
[ F ->  · deg ( E )  , /  ]
[ F ->  · deg ( E )  , %  ]
}

set 55 = GOTO( set 26 , / ) :
{
[ T -> T /  · F  , Rel  ]
[ T -> T /  · F  , -  ]
[ T -> T /  · F  , +  ]
[ T -> T /  · F  , *  ]
[ T -> T /  · F  , /  ]
[ T -> T /  · F  , %  ]
[ F ->  · V  , Rel  ]
[ F ->  · V  , -  ]
[ F ->  · V  , +  ]
[ F ->  · V  , *  ]
[ F ->  · V  , /  ]
[ F ->  · V  , %  ]
[ F ->  · ( E )  , Rel  ]
[ F ->  · ( E )  , -  ]
[ F ->  · ( E )  , +  ]
[ F ->  · ( E )  , *  ]
[ F ->  · ( E )  , /  ]
[ F ->  · ( E )  , %  ]
[ F ->  · C  , Rel  ]
[ F ->  · C  , -  ]
[ F ->  · C  , +  ]
[ F ->  · C  , *  ]
[ F ->  · C  , /  ]
[ F ->  · C  , %  ]
[ F ->  · value ( E , E )  , Rel  ]
[ F ->  · value ( E , E )  , -  ]
[ F ->  · value ( E , E )  , +  ]
[ F ->  · value ( E , E )  , *  ]
[ F ->  · value ( E , E )  , /  ]
[ F ->  · value ( E , E )  , %  ]
[ F ->  · derivative ( E )  , Rel  ]
[ F ->  · derivative ( E )  , -  ]
[ F ->  · derivative ( E )  , +  ]
[ F ->  · derivative ( E )  , *  ]
[ F ->  · derivative ( E )  , /  ]
[ F ->  · derivative ( E )  , %  ]
[ F ->  · coeff ( E , E )  , Rel  ]
[ F ->  · coeff ( E , E )  , -  ]
[ F ->  · coeff ( E , E )  , +  ]
[ F ->  · coeff ( E , E )  , *  ]
[ F ->  · coeff ( E , E )  , /  ]
[ F ->  · coeff ( E , E )  , %  ]
[ F ->  · deg ( E )  , Rel  ]
[ F ->  · deg ( E )  , -  ]
[ F ->  · deg ( E )  , +  ]
[ F ->  · deg ( E )  , *  ]
[ F ->  · deg ( E )  , /  ]
[ F ->  · deg ( E )  , %  ]
}

set 56 = GOTO( set 28 , ( ) :
{
[ E ->  · E - T  , ,  ]
[ E ->  · E - T  , -  ]
[ E ->  · E - T  , +  ]
[ E ->  · E + T  , ,  ]
[ E ->  · E + T  , -  ]
[ E ->  · E + T  , +  ]
[ E ->  · T  , ,  ]
[ E ->  · T  , -  ]
[ E ->  · T  , +  ]
[ T ->  · T * F  , ,  ]
[ T ->  · T * F  , -  ]
[ T ->  · T * F  , +  ]
[ T ->  · T * F  , *  ]
[ T ->  · T * F  , /  ]
[ T ->  · T * F  , %  ]
[ T ->  · T / F  , ,  ]
[ T ->  · T / F  , -  ]
[ T ->  · T / F  , +  ]
[ T ->  · T / F  , *  ]
[ T ->  · T / F  , /  ]
[ T ->  · T / F  , %  ]
[ T ->  · T % F  , ,  ]
[ T ->  · T % F  , -  ]
[ T ->  · T % F  , +  ]
[ T ->  · T % F  , *  ]
[ T ->  · T % F  , /  ]
[ T ->  · T % F  , %  ]
[ T ->  · F  , ,  ]
[ T ->  · F  , -  ]
[ T ->  · F  , +  ]
[ T ->  · F  , *  ]
[ T ->  · F  , /  ]
[ T ->  · F  , %  ]
[ F ->  · V  , ,  ]
[ F ->  · V  , -  ]
[ F ->  · V  , +  ]
[ F ->  · V  , *  ]
[ F ->  · V  , /  ]
[ F ->  · V  , %  ]
[ F ->  · ( E )  , ,  ]
[ F ->  · ( E )  , -  ]
[ F ->  · ( E )  , +  ]
[ F ->  · ( E )  , *  ]
[ F ->  · ( E )  , /  ]
[ F ->  · ( E )  , %  ]
[ F ->  · C  , ,  ]
[ F ->  · C  , -  ]
[ F ->  · C  , +  ]
[ F ->  · C  , *  ]
[ F ->  · C  , /  ]
[ F ->  · C  , %  ]
[ F ->  · value ( E , E )  , ,  ]
[ F ->  · value ( E , E )  , -  ]
[ F ->  · value ( E , E )  , +  ]
[ F ->  · value ( E , E )  , *  ]
[ F ->  · value ( E , E )  , /  ]
[ F ->  · value ( E , E )  , %  ]
[ F ->  · derivative ( E )  , ,  ]
[ F ->  · derivative ( E )  , -  ]
[ F ->  · derivative ( E )  , +  ]
[ F ->  · derivative ( E )  , *  ]
[ F ->  · derivative ( E )  , /  ]
[ F ->  · derivative ( E )  , %  ]
[ F ->  · coeff ( E , E )  , ,  ]
[ F ->  · coeff ( E , E )  , -  ]
[ F ->  · coeff ( E , E )  , +  ]
[ F ->  · coeff ( E , E )  , *  ]
[ F ->  · coeff ( E , E )  , /  ]
[ F ->  · coeff ( E , E )  , %  ]
[ F ->  · deg ( E )  , ,  ]
[ F ->  · deg ( E )  , -  ]
[ F ->  · deg ( E )  , +  ]
[ F ->  · deg ( E )  , *  ]
[ F ->  · deg ( E )  , /  ]
[ F ->  · deg ( E )  , %  ]
[ F -> coeff (  · E , E )  , Rel  ]
[ F -> coeff (  · E , E )  , -  ]
[ F -> coeff (  · E , E )  , +  ]
[ F -> coeff (  · E , E )  , *  ]
[ F -> coeff (  · E , E )  , /  ]
[ F -> coeff (  · E , E )  , %  ]
}

set 57 = GOTO( set 29 , ( ) :
{
[ E ->  · E - T  , )  ]
[ E ->  · E - T  , -  ]
[ E ->  · E - T  , +  ]
[ E ->  · E + T  , )  ]
[ E ->  · E + T  , -  ]
[ E ->  · E + T  , +  ]
[ E ->  · T  , )  ]
[ E ->  · T  , -  ]
[ E ->  · T  , +  ]
[ T ->  · T * F  , )  ]
[ T ->  · T * F  , -  ]
[ T ->  · T * F  , +  ]
[ T ->  · T * F  , *  ]
[ T ->  · T * F  , /  ]
[ T ->  · T * F  , %  ]
[ T ->  · T / F  , )  ]
[ T ->  · T / F  , -  ]
[ T ->  · T / F  , +  ]
[ T ->  · T / F  , *  ]
[ T ->  · T / F  , /  ]
[ T ->  · T / F  , %  ]
[ T ->  · T % F  , )  ]
[ T ->  · T % F  , -  ]
[ T ->  · T % F  , +  ]
[ T ->  · T % F  , *  ]
[ T ->  · T % F  , /  ]
[ T ->  · T % F  , %  ]
[ T ->  · F  , )  ]
[ T ->  · F  , -  ]
[ T ->  · F  , +  ]
[ T ->  · F  , *  ]
[ T ->  · F  , /  ]
[ T ->  · F  , %  ]
[ F ->  · V  , )  ]
[ F ->  · V  , -  ]
[ F ->  · V  , +  ]
[ F ->  · V  , *  ]
[ F ->  · V  , /  ]
[ F ->  · V  , %  ]
[ F ->  · ( E )  , )  ]
[ F ->  · ( E )  , -  ]
[ F ->  · ( E )  , +  ]
[ F ->  · ( E )  , *  ]
[ F ->  · ( E )  , /  ]
[ F ->  · ( E )  , %  ]
[ F ->  · C  , )  ]
[ F ->  · C  , -  ]
[ F ->  · C  , +  ]
[ F ->  · C  , *  ]
[ F ->  · C  , /  ]
[ F ->  · C  , %  ]
[ F ->  · value ( E , E )  , )  ]
[ F ->  · value ( E , E )  , -  ]
[ F ->  · value ( E , E )  , +  ]
[ F ->  · value ( E , E )  , *  ]
[ F ->  · value ( E , E )  , /  ]
[ F ->  · value ( E , E )  , %  ]
[ F ->  · derivative ( E )  , )  ]
[ F ->  · derivative ( E )  , -  ]
[ F ->  · derivative ( E )  , +  ]
[ F ->  · derivative ( E )  , *  ]
[ F ->  · derivative ( E )  , /  ]
[ F ->  · derivative ( E )  , %  ]
[ F ->  · coeff ( E , E )  , )  ]
[ F ->  · coeff ( E , E )  , -  ]
[ F ->  · coeff ( E , E )  , +  ]
[ F ->  · coeff ( E , E )  , *  ]
[ F ->  · coeff ( E , E )  , /  ]
[ F ->  · coeff ( E , E )  , %  ]
[ F ->  · deg ( E )  , )  ]
[ F ->  · deg ( E )  , -  ]
[ F ->  · deg ( E )  , +  ]
[ F ->  · deg ( E )  , *  ]
[ F ->  · deg ( E )  , /  ]
[ F ->  · deg ( E )  , %  ]
[ F -> deg (  · E )  , Rel  ]
[ F -> deg (  · E )  , -  ]
[ F -> deg (  · E )  , +  ]
[ F -> deg (  · E )  , *  ]
[ F -> deg (  · E )  , /  ]
[ F -> deg (  · E )  , %  ]
}

set 58 = GOTO( set 30 , ( ) :
{
[ E ->  · E - T  , )  ]
[ E ->  · E - T  , -  ]
[ E ->  · E - T  , +  ]
[ E ->  · E + T  , )  ]
[ E ->  · E + T  , -  ]
[ E ->  · E + T  , +  ]
[ E ->  · T  , )  ]
[ E ->  · T  , -  ]
[ E ->  · T  , +  ]
[ T ->  · T * F  , )  ]
[ T ->  · T * F  , -  ]
[ T ->  · T * F  , +  ]
[ T ->  · T * F  , *  ]
[ T ->  · T * F  , /  ]
[ T ->  · T * F  , %  ]
[ T ->  · T / F  , )  ]
[ T ->  · T / F  , -  ]
[ T ->  · T / F  , +  ]
[ T ->  · T / F  , *  ]
[ T ->  · T / F  , /  ]
[ T ->  · T / F  , %  ]
[ T ->  · T % F  , )  ]
[ T ->  · T % F  , -  ]
[ T ->  · T % F  , +  ]
[ T ->  · T % F  , *  ]
[ T ->  · T % F  , /  ]
[ T ->  · T % F  , %  ]
[ T ->  · F  , )  ]
[ T ->  · F  , -  ]
[ T ->  · F  , +  ]
[ T ->  · F  , *  ]
[ T ->  · F  , /  ]
[ T ->  · F  , %  ]
[ F ->  · V  , )  ]
[ F ->  · V  , -  ]
[ F ->  · V  , +  ]
[ F ->  · V  , *  ]
[ F ->  · V  , /  ]
[ F ->  · V  , %  ]
[ F ->  · ( E )  , )  ]
[ F ->  · ( E )  , -  ]
[ F ->  · ( E )  , +  ]
[ F ->  · ( E )  , *  ]
[ F ->  · ( E )  , /  ]
[ F ->  · ( E )  , %  ]
[ F ->  · C  , )  ]
[ F ->  · C  , -  ]
[ F ->  · C  , +  ]
[ F ->  · C  , *  ]
[ F ->  · C  , /  ]
[ F ->  · C  , %  ]
[ F ->  · value ( E , E )  , )  ]
[ F ->  · value ( E , E )  , -  ]
[ F ->  · value ( E , E )  , +  ]
[ F ->  · value ( E , E )  , *  ]
[ F ->  · value ( E , E )  , /  ]
[ F ->  · value ( E , E )  , %  ]
[ F ->  · derivative ( E )  , )  ]
[ F ->  · derivative ( E )  , -  ]
[ F ->  · derivative ( E )  , +  ]
[ F ->  · derivative ( E )  , *  ]
[ F ->  · derivative ( E )  , /  ]
[ F ->  · derivative ( E )  , %  ]
[ F ->  · coeff ( E , E )  , )  ]
[ F ->  · coeff ( E , E )  , -  ]
[ F ->  · coeff ( E , E )  , +  ]
[ F ->  · coeff ( E , E )  , *  ]
[ F ->  · coeff ( E , E )  , /  ]
[ F ->  · coeff ( E , E )  , %  ]
[ F ->  · deg ( E )  , )  ]
[ F ->  · deg ( E )  , -  ]
[ F ->  · deg ( E )  , +  ]
[ F ->  · deg ( E )  , *  ]
[ F ->  · deg ( E )  , /  ]
[ F ->  · deg ( E )  , %  ]
[ F -> derivative (  · E )  , Rel  ]
[ F -> derivative (  · E )  , -  ]
[ F -> derivative (  · E )  , +  ]
[ F -> derivative (  · E )  , *  ]
[ F -> derivative (  · E )  , /  ]
[ F -> derivative (  · E )  , %  ]
}

set 59 = GOTO( set 31 , ( ) :
{
[ E ->  · E - T  , ,  ]
[ E ->  · E - T  , -  ]
[ E ->  · E - T  , +  ]
[ E ->  · E + T  , ,  ]
[ E ->  · E + T  , -  ]
[ E ->  · E + T  , +  ]
[ E ->  · T  , ,  ]
[ E ->  · T  , -  ]
[ E ->  · T  , +  ]
[ T ->  · T * F  , ,  ]
[ T ->  · T * F  , -  ]
[ T ->  · T * F  , +  ]
[ T ->  · T * F  , *  ]
[ T ->  · T * F  , /  ]
[ T ->  · T * F  , %  ]
[ T ->  · T / F  , ,  ]
[ T ->  · T / F  , -  ]
[ T ->  · T / F  , +  ]
[ T ->  · T / F  , *  ]
[ T ->  · T / F  , /  ]
[ T ->  · T / F  , %  ]
[ T ->  · T % F  , ,  ]
[ T ->  · T % F  , -  ]
[ T ->  · T % F  , +  ]
[ T ->  · T % F  , *  ]
[ T ->  · T % F  , /  ]
[ T ->  · T % F  , %  ]
[ T ->  · F  , ,  ]
[ T ->  · F  , -  ]
[ T ->  · F  , +  ]
[ T ->  · F  , *  ]
[ T ->  · F  , /  ]
[ T ->  · F  , %  ]
[ F ->  · V  , ,  ]
[ F ->  · V  , -  ]
[ F ->  · V  , +  ]
[ F ->  · V  , *  ]
[ F ->  · V  , /  ]
[ F ->  · V  , %  ]
[ F ->  · ( E )  , ,  ]
[ F ->  · ( E )  , -  ]
[ F ->  · ( E )  , +  ]
[ F ->  · ( E )  , *  ]
[ F ->  · ( E )  , /  ]
[ F ->  · ( E )  , %  ]
[ F ->  · C  , ,  ]
[ F ->  · C  , -  ]
[ F ->  · C  , +  ]
[ F ->  · C  , *  ]
[ F ->  · C  , /  ]
[ F ->  · C  , %  ]
[ F ->  · value ( E , E )  , ,  ]
[ F ->  · value ( E , E )  , -  ]
[ F ->  · value ( E , E )  , +  ]
[ F ->  · value ( E , E )  , *  ]
[ F ->  · value ( E , E )  , /  ]
[ F ->  · value ( E , E )  , %  ]
[ F ->  · derivative ( E )  , ,  ]
[ F ->  · derivative ( E )  , -  ]
[ F ->  · derivative ( E )  , +  ]
[ F ->  · derivative ( E )  , *  ]
[ F ->  · derivative ( E )  , /  ]
[ F ->  · derivative ( E )  , %  ]
[ F ->  · coeff ( E , E )  , ,  ]
[ F ->  · coeff ( E , E )  , -  ]
[ F ->  · coeff ( E , E )  , +  ]
[ F ->  · coeff ( E , E )  , *  ]
[ F ->  · coeff ( E , E )  , /  ]
[ F ->  · coeff ( E , E )  , %  ]
[ F ->  · deg ( E )  , ,  ]
[ F ->  · deg ( E )  , -  ]
[ F ->  · deg ( E )  , +  ]
[ F ->  · deg ( E )  , *  ]
[ F ->  · deg ( E )  , /  ]
[ F ->  · deg ( E )  , %  ]
[ F -> value (  · E , E )  , Rel  ]
[ F -> value (  · E , E )  , -  ]
[ F -> value (  · E , E )  , +  ]
[ F -> value (  · E , E )  , *  ]
[ F -> value (  · E , E )  , /  ]
[ F -> value (  · E , E )  , %  ]
}

set 60 = GOTO( set 32 , <listA> ) :
{
[ <op> -> let V <listA>  ·  ,  ]
[ <op> -> let V <listA>  ·  , ;  ]
[ <op> -> let V <listA>  ·  , V  ]
[ <op> -> let V <listA>  ·  , :  ]
[ <op> -> let V <listA>  ·  , let  ]
[ <op> -> let V <listA>  ·  , if  ]
[ <op> -> let V <listA>  ·  , goto  ]
[ <op> -> let V <listA>  ·  , load  ]
[ <op> -> let V <listA>  ·  , put  ]
[ <op> -> let V <listA>  ·  , switch  ]
[ <op> -> let V <listA>  ·  , error  ]
[ <op> -> let V <listA>  ·  , comment  ]
}

set 61 = GOTO( set 32 , = ) :
{
[ <listA> -> =  · V <listA>  ,  ]
[ <listA> -> =  · V <listA>  , ;  ]
[ <listA> -> =  · V <listA>  , V  ]
[ <listA> -> =  · V <listA>  , :  ]
[ <listA> -> =  · V <listA>  , let  ]
[ <listA> -> =  · V <listA>  , if  ]
[ <listA> -> =  · V <listA>  , goto  ]
[ <listA> -> =  · V <listA>  , load  ]
[ <listA> -> =  · V <listA>  , put  ]
[ <listA> -> =  · V <listA>  , switch  ]
[ <listA> -> =  · V <listA>  , error  ]
[ <listA> -> =  · V <listA>  , comment  ]
[ <listA> -> =  · E ;  ,  ]
[ <listA> -> =  · E ;  , ;  ]
[ <listA> -> =  · E ;  , V  ]
[ <listA> -> =  · E ;  , :  ]
[ <listA> -> =  · E ;  , let  ]
[ <listA> -> =  · E ;  , if  ]
[ <listA> -> =  · E ;  , goto  ]
[ <listA> -> =  · E ;  , load  ]
[ <listA> -> =  · E ;  , put  ]
[ <listA> -> =  · E ;  , switch  ]
[ <listA> -> =  · E ;  , error  ]
[ <listA> -> =  · E ;  , comment  ]
[ E ->  · E - T  , ;  ]
[ E ->  · E - T  , -  ]
[ E ->  · E - T  , +  ]
[ E ->  · E + T  , ;  ]
[ E ->  · E + T  , -  ]
[ E ->  · E + T  , +  ]
[ E ->  · T  , ;  ]
[ E ->  · T  , -  ]
[ E ->  · T  , +  ]
[ T ->  · T * F  , ;  ]
[ T ->  · T * F  , -  ]
[ T ->  · T * F  , +  ]
[ T ->  · T * F  , *  ]
[ T ->  · T * F  , /  ]
[ T ->  · T * F  , %  ]
[ T ->  · T / F  , ;  ]
[ T ->  · T / F  , -  ]
[ T ->  · T / F  , +  ]
[ T ->  · T / F  , *  ]
[ T ->  · T / F  , /  ]
[ T ->  · T / F  , %  ]
[ T ->  · T % F  , ;  ]
[ T ->  · T % F  , -  ]
[ T ->  · T % F  , +  ]
[ T ->  · T % F  , *  ]
[ T ->  · T % F  , /  ]
[ T ->  · T % F  , %  ]
[ T ->  · F  , ;  ]
[ T ->  · F  , -  ]
[ T ->  · F  , +  ]
[ T ->  · F  , *  ]
[ T ->  · F  , /  ]
[ T ->  · F  , %  ]
[ F ->  · V  , ;  ]
[ F ->  · V  , -  ]
[ F ->  · V  , +  ]
[ F ->  · V  , *  ]
[ F ->  · V  , /  ]
[ F ->  · V  , %  ]
[ F ->  · ( E )  , ;  ]
[ F ->  · ( E )  , -  ]
[ F ->  · ( E )  , +  ]
[ F ->  · ( E )  , *  ]
[ F ->  · ( E )  , /  ]
[ F ->  · ( E )  , %  ]
[ F ->  · C  , ;  ]
[ F ->  · C  , -  ]
[ F ->  · C  , +  ]
[ F ->  · C  , *  ]
[ F ->  · C  , /  ]
[ F ->  · C  , %  ]
[ F ->  · value ( E , E )  , ;  ]
[ F ->  · value ( E , E )  , -  ]
[ F ->  · value ( E , E )  , +  ]
[ F ->  · value ( E , E )  , *  ]
[ F ->  · value ( E , E )  , /  ]
[ F ->  · value ( E , E )  , %  ]
[ F ->  · derivative ( E )  , ;  ]
[ F ->  · derivative ( E )  , -  ]
[ F ->  · derivative ( E )  , +  ]
[ F ->  · derivative ( E )  , *  ]
[ F ->  · derivative ( E )  , /  ]
[ F ->  · derivative ( E )  , %  ]
[ F ->  · coeff ( E , E )  , ;  ]
[ F ->  · coeff ( E , E )  , -  ]
[ F ->  · coeff ( E , E )  , +  ]
[ F ->  · coeff ( E , E )  , *  ]
[ F ->  · coeff ( E , E )  , /  ]
[ F ->  · coeff ( E , E )  , %  ]
[ F ->  · deg ( E )  , ;  ]
[ F ->  · deg ( E )  , -  ]
[ F ->  · deg ( E )  , +  ]
[ F ->  · deg ( E )  , *  ]
[ F ->  · deg ( E )  , /  ]
[ F ->  · deg ( E )  , %  ]
}

set 62 = GOTO( set 33 , V ) :
{
[ <op> -> load ( V  · <listV> ) ;  ,  ]
[ <op> -> load ( V  · <listV> ) ;  , ;  ]
[ <op> -> load ( V  · <listV> ) ;  , V  ]
[ <op> -> load ( V  · <listV> ) ;  , :  ]
[ <op> -> load ( V  · <listV> ) ;  , let  ]
[ <op> -> load ( V  · <listV> ) ;  , if  ]
[ <op> -> load ( V  · <listV> ) ;  , goto  ]
[ <op> -> load ( V  · <listV> ) ;  , load  ]
[ <op> -> load ( V  · <listV> ) ;  , put  ]
[ <op> -> load ( V  · <listV> ) ;  , switch  ]
[ <op> -> load ( V  · <listV> ) ;  , error  ]
[ <op> -> load ( V  · <listV> ) ;  , comment  ]
[ <listV> ->  ·  , )  ]
[ <listV> ->  · , V <listV>  , )  ]
}

set 63 = GOTO( set 34 , ( ) :
{
[ E ->  · E - T  , )  ]
[ E ->  · E - T  , -  ]
[ E ->  · E - T  , +  ]
[ E ->  · E + T  , )  ]
[ E ->  · E + T  , -  ]
[ E ->  · E + T  , +  ]
[ E ->  · T  , )  ]
[ E ->  · T  , -  ]
[ E ->  · T  , +  ]
[ T ->  · T * F  , )  ]
[ T ->  · T * F  , -  ]
[ T ->  · T * F  , +  ]
[ T ->  · T * F  , *  ]
[ T ->  · T * F  , /  ]
[ T ->  · T * F  , %  ]
[ T ->  · T / F  , )  ]
[ T ->  · T / F  , -  ]
[ T ->  · T / F  , +  ]
[ T ->  · T / F  , *  ]
[ T ->  · T / F  , /  ]
[ T ->  · T / F  , %  ]
[ T ->  · T % F  , )  ]
[ T ->  · T % F  , -  ]
[ T ->  · T % F  , +  ]
[ T ->  · T % F  , *  ]
[ T ->  · T % F  , /  ]
[ T ->  · T % F  , %  ]
[ T ->  · F  , )  ]
[ T ->  · F  , -  ]
[ T ->  · F  , +  ]
[ T ->  · F  , *  ]
[ T ->  · F  , /  ]
[ T ->  · F  , %  ]
[ F ->  · V  , )  ]
[ F ->  · V  , -  ]
[ F ->  · V  , +  ]
[ F ->  · V  , *  ]
[ F ->  · V  , /  ]
[ F ->  · V  , %  ]
[ F ->  · ( E )  , )  ]
[ F ->  · ( E )  , -  ]
[ F ->  · ( E )  , +  ]
[ F ->  · ( E )  , *  ]
[ F ->  · ( E )  , /  ]
[ F ->  · ( E )  , %  ]
[ F ->  · C  , )  ]
[ F ->  · C  , -  ]
[ F ->  · C  , +  ]
[ F ->  · C  , *  ]
[ F ->  · C  , /  ]
[ F ->  · C  , %  ]
[ F ->  · value ( E , E )  , )  ]
[ F ->  · value ( E , E )  , -  ]
[ F ->  · value ( E , E )  , +  ]
[ F ->  · value ( E , E )  , *  ]
[ F ->  · value ( E , E )  , /  ]
[ F ->  · value ( E , E )  , %  ]
[ F ->  · derivative ( E )  , )  ]
[ F ->  · derivative ( E )  , -  ]
[ F ->  · derivative ( E )  , +  ]
[ F ->  · derivative ( E )  , *  ]
[ F ->  · derivative ( E )  , /  ]
[ F ->  · derivative ( E )  , %  ]
[ F ->  · coeff ( E , E )  , )  ]
[ F ->  · coeff ( E , E )  , -  ]
[ F ->  · coeff ( E , E )  , +  ]
[ F ->  · coeff ( E , E )  , *  ]
[ F ->  · coeff ( E , E )  , /  ]
[ F ->  · coeff ( E , E )  , %  ]
[ F ->  · deg ( E )  , )  ]
[ F ->  · deg ( E )  , -  ]
[ F ->  · deg ( E )  , +  ]
[ F ->  · deg ( E )  , *  ]
[ F ->  · deg ( E )  , /  ]
[ F ->  · deg ( E )  , %  ]
[ F -> (  · E )  , ,  ]
[ F -> (  · E )  , )  ]
[ F -> (  · E )  , -  ]
[ F -> (  · E )  , +  ]
[ F -> (  · E )  , *  ]
[ F -> (  · E )  , /  ]
[ F -> (  · E )  , %  ]
}

set 64 = GOTO( set 34 , C ) :
{
[ F -> C  ·  , ,  ]
[ F -> C  ·  , )  ]
[ F -> C  ·  , -  ]
[ F -> C  ·  , +  ]
[ F -> C  ·  , *  ]
[ F -> C  ·  , /  ]
[ F -> C  ·  , %  ]
}

set 65 = GOTO( set 34 , E ) :
{
[ <op> -> put ( E  · <listE> ) ;  ,  ]
[ <op> -> put ( E  · <listE> ) ;  , ;  ]
[ <op> -> put ( E  · <listE> ) ;  , V  ]
[ <op> -> put ( E  · <listE> ) ;  , :  ]
[ <op> -> put ( E  · <listE> ) ;  , let  ]
[ <op> -> put ( E  · <listE> ) ;  , if  ]
[ <op> -> put ( E  · <listE> ) ;  , goto  ]
[ <op> -> put ( E  · <listE> ) ;  , load  ]
[ <op> -> put ( E  · <listE> ) ;  , put  ]
[ <op> -> put ( E  · <listE> ) ;  , switch  ]
[ <op> -> put ( E  · <listE> ) ;  , error  ]
[ <op> -> put ( E  · <listE> ) ;  , comment  ]
[ E -> E  · - T  , ,  ]
[ E -> E  · - T  , )  ]
[ E -> E  · - T  , -  ]
[ E -> E  · - T  , +  ]
[ E -> E  · + T  , ,  ]
[ E -> E  · + T  , )  ]
[ E -> E  · + T  , -  ]
[ E -> E  · + T  , +  ]
[ <listE> ->  ·  , )  ]
[ <listE> ->  · , E <listE>  , )  ]
}

set 66 = GOTO( set 34 , F ) :
{
[ T -> F  ·  , ,  ]
[ T -> F  ·  , )  ]
[ T -> F  ·  , -  ]
[ T -> F  ·  , +  ]
[ T -> F  ·  , *  ]
[ T -> F  ·  , /  ]
[ T -> F  ·  , %  ]
}

set 67 = GOTO( set 34 , T ) :
{
[ E -> T  ·  , ,  ]
[ E -> T  ·  , )  ]
[ E -> T  ·  , -  ]
[ E -> T  ·  , +  ]
[ T -> T  · * F  , ,  ]
[ T -> T  · * F  , )  ]
[ T -> T  · * F  , -  ]
[ T -> T  · * F  , +  ]
[ T -> T  · * F  , *  ]
[ T -> T  · * F  , /  ]
[ T -> T  · * F  , %  ]
[ T -> T  · / F  , ,  ]
[ T -> T  · / F  , )  ]
[ T -> T  · / F  , -  ]
[ T -> T  · / F  , +  ]
[ T -> T  · / F  , *  ]
[ T -> T  · / F  , /  ]
[ T -> T  · / F  , %  ]
[ T -> T  · % F  , ,  ]
[ T -> T  · % F  , )  ]
[ T -> T  · % F  , -  ]
[ T -> T  · % F  , +  ]
[ T -> T  · % F  , *  ]
[ T -> T  · % F  , /  ]
[ T -> T  · % F  , %  ]
}

set 68 = GOTO( set 34 , V ) :
{
[ F -> V  ·  , ,  ]
[ F -> V  ·  , )  ]
[ F -> V  ·  , -  ]
[ F -> V  ·  , +  ]
[ F -> V  ·  , *  ]
[ F -> V  ·  , /  ]
[ F -> V  ·  , %  ]
}

set 69 = GOTO( set 34 , coeff ) :
{
[ F -> coeff  · ( E , E )  , ,  ]
[ F -> coeff  · ( E , E )  , )  ]
[ F -> coeff  · ( E , E )  , -  ]
[ F -> coeff  · ( E , E )  , +  ]
[ F -> coeff  · ( E , E )  , *  ]
[ F -> coeff  · ( E , E )  , /  ]
[ F -> coeff  · ( E , E )  , %  ]
}

set 70 = GOTO( set 34 , deg ) :
{
[ F -> deg  · ( E )  , ,  ]
[ F -> deg  · ( E )  , )  ]
[ F -> deg  · ( E )  , -  ]
[ F -> deg  · ( E )  , +  ]
[ F -> deg  · ( E )  , *  ]
[ F -> deg  · ( E )  , /  ]
[ F -> deg  · ( E )  , %  ]
}

set 71 = GOTO( set 34 , derivative ) :
{
[ F -> derivative  · ( E )  , ,  ]
[ F -> derivative  · ( E )  , )  ]
[ F -> derivative  · ( E )  , -  ]
[ F -> derivative  · ( E )  , +  ]
[ F -> derivative  · ( E )  , *  ]
[ F -> derivative  · ( E )  , /  ]
[ F -> derivative  · ( E )  , %  ]
}

set 72 = GOTO( set 34 , value ) :
{
[ F -> value  · ( E , E )  , ,  ]
[ F -> value  · ( E , E )  , )  ]
[ F -> value  · ( E , E )  , -  ]
[ F -> value  · ( E , E )  , +  ]
[ F -> value  · ( E , E )  , *  ]
[ F -> value  · ( E , E )  , /  ]
[ F -> value  · ( E , E )  , %  ]
}

set 73 = GOTO( set 35 , E ) :
{
[ <op> -> switch ( E  · ) <switch_body> end switch ;  ,  ]
[ <op> -> switch ( E  · ) <switch_body> end switch ;  , ;  ]
[ <op> -> switch ( E  · ) <switch_body> end switch ;  , V  ]
[ <op> -> switch ( E  · ) <switch_body> end switch ;  , :  ]
[ <op> -> switch ( E  · ) <switch_body> end switch ;  , let  ]
[ <op> -> switch ( E  · ) <switch_body> end switch ;  , if  ]
[ <op> -> switch ( E  · ) <switch_body> end switch ;  , goto  ]
[ <op> -> switch ( E  · ) <switch_body> end switch ;  , load  ]
[ <op> -> switch ( E  · ) <switch_body> end switch ;  , put  ]
[ <op> -> switch ( E  · ) <switch_body> end switch ;  , switch  ]
[ <op> -> switch ( E  · ) <switch_body> end switch ;  , error  ]
[ <op> -> switch ( E  · ) <switch_body> end switch ;  , comment  ]
[ E -> E  · - T  , )  ]
[ E -> E  · - T  , -  ]
[ E -> E  · - T  , +  ]
[ E -> E  · + T  , )  ]
[ E -> E  · + T  , -  ]
[ E -> E  · + T  , +  ]
}

set 74 = GOTO( set 36 , <listV> ) :
{
[ <listV> -> , V <listV>  ·  , :  ]
}

set 75 = GOTO( set 37 , TYPE ) :
{
[ <op> -> V <listV> : TYPE  · ;  ,  ]
[ <op> -> V <listV> : TYPE  · ;  , ;  ]
[ <op> -> V <listV> : TYPE  · ;  , V  ]
[ <op> -> V <listV> : TYPE  · ;  , :  ]
[ <op> -> V <listV> : TYPE  · ;  , let  ]
[ <op> -> V <listV> : TYPE  · ;  , if  ]
[ <op> -> V <listV> : TYPE  · ;  , goto  ]
[ <op> -> V <listV> : TYPE  · ;  , load  ]
[ <op> -> V <listV> : TYPE  · ;  , put  ]
[ <op> -> V <listV> : TYPE  · ;  , switch  ]
[ <op> -> V <listV> : TYPE  · ;  , error  ]
[ <op> -> V <listV> : TYPE  · ;  , comment  ]
}

set 76 = GOTO( set 38 , = ) :
{
[ <op> -> V for V =  · E to E <step> <pr> next V  ,  ]
[ <op> -> V for V =  · E to E <step> <pr> next V  , ;  ]
[ <op> -> V for V =  · E to E <step> <pr> next V  , V  ]
[ <op> -> V for V =  · E to E <step> <pr> next V  , :  ]
[ <op> -> V for V =  · E to E <step> <pr> next V  , let  ]
[ <op> -> V for V =  · E to E <step> <pr> next V  , if  ]
[ <op> -> V for V =  · E to E <step> <pr> next V  , goto  ]
[ <op> -> V for V =  · E to E <step> <pr> next V  , load  ]
[ <op> -> V for V =  · E to E <step> <pr> next V  , put  ]
[ <op> -> V for V =  · E to E <step> <pr> next V  , switch  ]
[ <op> -> V for V =  · E to E <step> <pr> next V  , error  ]
[ <op> -> V for V =  · E to E <step> <pr> next V  , comment  ]
[ E ->  · E - T  , to  ]
[ E ->  · E - T  , -  ]
[ E ->  · E - T  , +  ]
[ E ->  · E + T  , to  ]
[ E ->  · E + T  , -  ]
[ E ->  · E + T  , +  ]
[ E ->  · T  , to  ]
[ E ->  · T  , -  ]
[ E ->  · T  , +  ]
[ T ->  · T * F  , to  ]
[ T ->  · T * F  , -  ]
[ T ->  · T * F  , +  ]
[ T ->  · T * F  , *  ]
[ T ->  · T * F  , /  ]
[ T ->  · T * F  , %  ]
[ T ->  · T / F  , to  ]
[ T ->  · T / F  , -  ]
[ T ->  · T / F  , +  ]
[ T ->  · T / F  , *  ]
[ T ->  · T / F  , /  ]
[ T ->  · T / F  , %  ]
[ T ->  · T % F  , to  ]
[ T ->  · T % F  , -  ]
[ T ->  · T % F  , +  ]
[ T ->  · T % F  , *  ]
[ T ->  · T % F  , /  ]
[ T ->  · T % F  , %  ]
[ T ->  · F  , to  ]
[ T ->  · F  , -  ]
[ T ->  · F  , +  ]
[ T ->  · F  , *  ]
[ T ->  · F  , /  ]
[ T ->  · F  , %  ]
[ F ->  · V  , to  ]
[ F ->  · V  , -  ]
[ F ->  · V  , +  ]
[ F ->  · V  , *  ]
[ F ->  · V  , /  ]
[ F ->  · V  , %  ]
[ F ->  · ( E )  , to  ]
[ F ->  · ( E )  , -  ]
[ F ->  · ( E )  , +  ]
[ F ->  · ( E )  , *  ]
[ F ->  · ( E )  , /  ]
[ F ->  · ( E )  , %  ]
[ F ->  · C  , to  ]
[ F ->  · C  , -  ]
[ F ->  · C  , +  ]
[ F ->  · C  , *  ]
[ F ->  · C  , /  ]
[ F ->  · C  , %  ]
[ F ->  · value ( E , E )  , to  ]
[ F ->  · value ( E , E )  , -  ]
[ F ->  · value ( E , E )  , +  ]
[ F ->  · value ( E , E )  , *  ]
[ F ->  · value ( E , E )  , /  ]
[ F ->  · value ( E , E )  , %  ]
[ F ->  · derivative ( E )  , to  ]
[ F ->  · derivative ( E )  , -  ]
[ F ->  · derivative ( E )  , +  ]
[ F ->  · derivative ( E )  , *  ]
[ F ->  · derivative ( E )  , /  ]
[ F ->  · derivative ( E )  , %  ]
[ F ->  · coeff ( E , E )  , to  ]
[ F ->  · coeff ( E , E )  , -  ]
[ F ->  · coeff ( E , E )  , +  ]
[ F ->  · coeff ( E , E )  , *  ]
[ F ->  · coeff ( E , E )  , /  ]
[ F ->  · coeff ( E , E )  , %  ]
[ F ->  · deg ( E )  , to  ]
[ F ->  · deg ( E )  , -  ]
[ F ->  · deg ( E )  , +  ]
[ F ->  · deg ( E )  , *  ]
[ F ->  · deg ( E )  , /  ]
[ F ->  · deg ( E )  , %  ]
}

set 77 = GOTO( set 39 , E ) :
{
[ E -> E  · - T  , )  ]
[ E -> E  · - T  , -  ]
[ E -> E  · - T  , +  ]
[ E -> E  · + T  , )  ]
[ E -> E  · + T  , -  ]
[ E -> E  · + T  , +  ]
[ F -> ( E  · )  , )  ]
[ F -> ( E  · )  , -  ]
[ F -> ( E  · )  , +  ]
[ F -> ( E  · )  , *  ]
[ F -> ( E  · )  , /  ]
[ F -> ( E  · )  , %  ]
}

set 78 = GOTO( set 41 , ) ) :
{
[ F -> ( E )  ·  , Rel  ]
[ F -> ( E )  ·  , -  ]
[ F -> ( E )  ·  , +  ]
[ F -> ( E )  ·  , *  ]
[ F -> ( E )  ·  , /  ]
[ F -> ( E )  ·  , %  ]
}

set 79 = GOTO( set 41 , + ) :
{
[ E -> E +  · T  , )  ]
[ E -> E +  · T  , -  ]
[ E -> E +  · T  , +  ]
[ T ->  · T * F  , )  ]
[ T ->  · T * F  , -  ]
[ T ->  · T * F  , +  ]
[ T ->  · T * F  , *  ]
[ T ->  · T * F  , /  ]
[ T ->  · T * F  , %  ]
[ T ->  · T / F  , )  ]
[ T ->  · T / F  , -  ]
[ T ->  · T / F  , +  ]
[ T ->  · T / F  , *  ]
[ T ->  · T / F  , /  ]
[ T ->  · T / F  , %  ]
[ T ->  · T % F  , )  ]
[ T ->  · T % F  , -  ]
[ T ->  · T % F  , +  ]
[ T ->  · T % F  , *  ]
[ T ->  · T % F  , /  ]
[ T ->  · T % F  , %  ]
[ T ->  · F  , )  ]
[ T ->  · F  , -  ]
[ T ->  · F  , +  ]
[ T ->  · F  , *  ]
[ T ->  · F  , /  ]
[ T ->  · F  , %  ]
[ F ->  · V  , )  ]
[ F ->  · V  , -  ]
[ F ->  · V  , +  ]
[ F ->  · V  , *  ]
[ F ->  · V  , /  ]
[ F ->  · V  , %  ]
[ F ->  · ( E )  , )  ]
[ F ->  · ( E )  , -  ]
[ F ->  · ( E )  , +  ]
[ F ->  · ( E )  , *  ]
[ F ->  · ( E )  , /  ]
[ F ->  · ( E )  , %  ]
[ F ->  · C  , )  ]
[ F ->  · C  , -  ]
[ F ->  · C  , +  ]
[ F ->  · C  , *  ]
[ F ->  · C  , /  ]
[ F ->  · C  , %  ]
[ F ->  · value ( E , E )  , )  ]
[ F ->  · value ( E , E )  , -  ]
[ F ->  · value ( E , E )  , +  ]
[ F ->  · value ( E , E )  , *  ]
[ F ->  · value ( E , E )  , /  ]
[ F ->  · value ( E , E )  , %  ]
[ F ->  · derivative ( E )  , )  ]
[ F ->  · derivative ( E )  , -  ]
[ F ->  · derivative ( E )  , +  ]
[ F ->  · derivative ( E )  , *  ]
[ F ->  · derivative ( E )  , /  ]
[ F ->  · derivative ( E )  , %  ]
[ F ->  · coeff ( E , E )  , )  ]
[ F ->  · coeff ( E , E )  , -  ]
[ F ->  · coeff ( E , E )  , +  ]
[ F ->  · coeff ( E , E )  , *  ]
[ F ->  · coeff ( E , E )  , /  ]
[ F ->  · coeff ( E , E )  , %  ]
[ F ->  · deg ( E )  , )  ]
[ F ->  · deg ( E )  , -  ]
[ F ->  · deg ( E )  , +  ]
[ F ->  · deg ( E )  , *  ]
[ F ->  · deg ( E )  , /  ]
[ F ->  · deg ( E )  , %  ]
}

set 80 = GOTO( set 41 , - ) :
{
[ E -> E -  · T  , )  ]
[ E -> E -  · T  , -  ]
[ E -> E -  · T  , +  ]
[ T ->  · T * F  , )  ]
[ T ->  · T * F  , -  ]
[ T ->  · T * F  , +  ]
[ T ->  · T * F  , *  ]
[ T ->  · T * F  , /  ]
[ T ->  · T * F  , %  ]
[ T ->  · T / F  , )  ]
[ T ->  · T / F  , -  ]
[ T ->  · T / F  , +  ]
[ T ->  · T / F  , *  ]
[ T ->  · T / F  , /  ]
[ T ->  · T / F  , %  ]
[ T ->  · T % F  , )  ]
[ T ->  · T % F  , -  ]
[ T ->  · T % F  , +  ]
[ T ->  · T % F  , *  ]
[ T ->  · T % F  , /  ]
[ T ->  · T % F  , %  ]
[ T ->  · F  , )  ]
[ T ->  · F  , -  ]
[ T ->  · F  , +  ]
[ T ->  · F  , *  ]
[ T ->  · F  , /  ]
[ T ->  · F  , %  ]
[ F ->  · V  , )  ]
[ F ->  · V  , -  ]
[ F ->  · V  , +  ]
[ F ->  · V  , *  ]
[ F ->  · V  , /  ]
[ F ->  · V  , %  ]
[ F ->  · ( E )  , )  ]
[ F ->  · ( E )  , -  ]
[ F ->  · ( E )  , +  ]
[ F ->  · ( E )  , *  ]
[ F ->  · ( E )  , /  ]
[ F ->  · ( E )  , %  ]
[ F ->  · C  , )  ]
[ F ->  · C  , -  ]
[ F ->  · C  , +  ]
[ F ->  · C  , *  ]
[ F ->  · C  , /  ]
[ F ->  · C  , %  ]
[ F ->  · value ( E , E )  , )  ]
[ F ->  · value ( E , E )  , -  ]
[ F ->  · value ( E , E )  , +  ]
[ F ->  · value ( E , E )  , *  ]
[ F ->  · value ( E , E )  , /  ]
[ F ->  · value ( E , E )  , %  ]
[ F ->  · derivative ( E )  , )  ]
[ F ->  · derivative ( E )  , -  ]
[ F ->  · derivative ( E )  , +  ]
[ F ->  · derivative ( E )  , *  ]
[ F ->  · derivative ( E )  , /  ]
[ F ->  · derivative ( E )  , %  ]
[ F ->  · coeff ( E , E )  , )  ]
[ F ->  · coeff ( E , E )  , -  ]
[ F ->  · coeff ( E , E )  , +  ]
[ F ->  · coeff ( E , E )  , *  ]
[ F ->  · coeff ( E , E )  , /  ]
[ F ->  · coeff ( E , E )  , %  ]
[ F ->  · deg ( E )  , )  ]
[ F ->  · deg ( E )  , -  ]
[ F ->  · deg ( E )  , +  ]
[ F ->  · deg ( E )  , *  ]
[ F ->  · deg ( E )  , /  ]
[ F ->  · deg ( E )  , %  ]
}

set 81 = GOTO( set 43 , % ) :
{
[ T -> T %  · F  , )  ]
[ T -> T %  · F  , -  ]
[ T -> T %  · F  , +  ]
[ T -> T %  · F  , *  ]
[ T -> T %  · F  , /  ]
[ T -> T %  · F  , %  ]
[ F ->  · V  , )  ]
[ F ->  · V  , -  ]
[ F ->  · V  , +  ]
[ F ->  · V  , *  ]
[ F ->  · V  , /  ]
[ F ->  · V  , %  ]
[ F ->  · ( E )  , )  ]
[ F ->  · ( E )  , -  ]
[ F ->  · ( E )  , +  ]
[ F ->  · ( E )  , *  ]
[ F ->  · ( E )  , /  ]
[ F ->  · ( E )  , %  ]
[ F ->  · C  , )  ]
[ F ->  · C  , -  ]
[ F ->  · C  , +  ]
[ F ->  · C  , *  ]
[ F ->  · C  , /  ]
[ F ->  · C  , %  ]
[ F ->  · value ( E , E )  , )  ]
[ F ->  · value ( E , E )  , -  ]
[ F ->  · value ( E , E )  , +  ]
[ F ->  · value ( E , E )  , *  ]
[ F ->  · value ( E , E )  , /  ]
[ F ->  · value ( E , E )  , %  ]
[ F ->  · derivative ( E )  , )  ]
[ F ->  · derivative ( E )  , -  ]
[ F ->  · derivative ( E )  , +  ]
[ F ->  · derivative ( E )  , *  ]
[ F ->  · derivative ( E )  , /  ]
[ F ->  · derivative ( E )  , %  ]
[ F ->  · coeff ( E , E )  , )  ]
[ F ->  · coeff ( E , E )  , -  ]
[ F ->  · coeff ( E , E )  , +  ]
[ F ->  · coeff ( E , E )  , *  ]
[ F ->  · coeff ( E , E )  , /  ]
[ F ->  · coeff ( E , E )  , %  ]
[ F ->  · deg ( E )  , )  ]
[ F ->  · deg ( E )  , -  ]
[ F ->  · deg ( E )  , +  ]
[ F ->  · deg ( E )  , *  ]
[ F ->  · deg ( E )  , /  ]
[ F ->  · deg ( E )  , %  ]
}

set 82 = GOTO( set 43 , * ) :
{
[ T -> T *  · F  , )  ]
[ T -> T *  · F  , -  ]
[ T -> T *  · F  , +  ]
[ T -> T *  · F  , *  ]
[ T -> T *  · F  , /  ]
[ T -> T *  · F  , %  ]
[ F ->  · V  , )  ]
[ F ->  · V  , -  ]
[ F ->  · V  , +  ]
[ F ->  · V  , *  ]
[ F ->  · V  , /  ]
[ F ->  · V  , %  ]
[ F ->  · ( E )  , )  ]
[ F ->  · ( E )  , -  ]
[ F ->  · ( E )  , +  ]
[ F ->  · ( E )  , *  ]
[ F ->  · ( E )  , /  ]
[ F ->  · ( E )  , %  ]
[ F ->  · C  , )  ]
[ F ->  · C  , -  ]
[ F ->  · C  , +  ]
[ F ->  · C  , *  ]
[ F ->  · C  , /  ]
[ F ->  · C  , %  ]
[ F ->  · value ( E , E )  , )  ]
[ F ->  · value ( E , E )  , -  ]
[ F ->  · value ( E , E )  , +  ]
[ F ->  · value ( E , E )  , *  ]
[ F ->  · value ( E , E )  , /  ]
[ F ->  · value ( E , E )  , %  ]
[ F ->  · derivative ( E )  , )  ]
[ F ->  · derivative ( E )  , -  ]
[ F ->  · derivative ( E )  , +  ]
[ F ->  · derivative ( E )  , *  ]
[ F ->  · derivative ( E )  , /  ]
[ F ->  · derivative ( E )  , %  ]
[ F ->  · coeff ( E , E )  , )  ]
[ F ->  · coeff ( E , E )  , -  ]
[ F ->  · coeff ( E , E )  , +  ]
[ F ->  · coeff ( E , E )  , *  ]
[ F ->  · coeff ( E , E )  , /  ]
[ F ->  · coeff ( E , E )  , %  ]
[ F ->  · deg ( E )  , )  ]
[ F ->  · deg ( E )  , -  ]
[ F ->  · deg ( E )  , +  ]
[ F ->  · deg ( E )  , *  ]
[ F ->  · deg ( E )  , /  ]
[ F ->  · deg ( E )  , %  ]
}

set 83 = GOTO( set 43 , / ) :
{
[ T -> T /  · F  , )  ]
[ T -> T /  · F  , -  ]
[ T -> T /  · F  , +  ]
[ T -> T /  · F  , *  ]
[ T -> T /  · F  , /  ]
[ T -> T /  · F  , %  ]
[ F ->  · V  , )  ]
[ F ->  · V  , -  ]
[ F ->  · V  , +  ]
[ F ->  · V  , *  ]
[ F ->  · V  , /  ]
[ F ->  · V  , %  ]
[ F ->  · ( E )  , )  ]
[ F ->  · ( E )  , -  ]
[ F ->  · ( E )  , +  ]
[ F ->  · ( E )  , *  ]
[ F ->  · ( E )  , /  ]
[ F ->  · ( E )  , %  ]
[ F ->  · C  , )  ]
[ F ->  · C  , -  ]
[ F ->  · C  , +  ]
[ F ->  · C  , *  ]
[ F ->  · C  , /  ]
[ F ->  · C  , %  ]
[ F ->  · value ( E , E )  , )  ]
[ F ->  · value ( E , E )  , -  ]
[ F ->  · value ( E , E )  , +  ]
[ F ->  · value ( E , E )  , *  ]
[ F ->  · value ( E , E )  , /  ]
[ F ->  · value ( E , E )  , %  ]
[ F ->  · derivative ( E )  , )  ]
[ F ->  · derivative ( E )  , -  ]
[ F ->  · derivative ( E )  , +  ]
[ F ->  · derivative ( E )  , *  ]
[ F ->  · derivative ( E )  , /  ]
[ F ->  · derivative ( E )  , %  ]
[ F ->  · coeff ( E , E )  , )  ]
[ F ->  · coeff ( E , E )  , -  ]
[ F ->  · coeff ( E , E )  , +  ]
[ F ->  · coeff ( E , E )  , *  ]
[ F ->  · coeff ( E , E )  , /  ]
[ F ->  · coeff ( E , E )  , %  ]
[ F ->  · deg ( E )  , )  ]
[ F ->  · deg ( E )  , -  ]
[ F ->  · deg ( E )  , +  ]
[ F ->  · deg ( E )  , *  ]
[ F ->  · deg ( E )  , /  ]
[ F ->  · deg ( E )  , %  ]
}

set 84 = GOTO( set 45 , ( ) :
{
[ E ->  · E - T  , ,  ]
[ E ->  · E - T  , -  ]
[ E ->  · E - T  , +  ]
[ E ->  · E + T  , ,  ]
[ E ->  · E + T  , -  ]
[ E ->  · E + T  , +  ]
[ E ->  · T  , ,  ]
[ E ->  · T  , -  ]
[ E ->  · T  , +  ]
[ T ->  · T * F  , ,  ]
[ T ->  · T * F  , -  ]
[ T ->  · T * F  , +  ]
[ T ->  · T * F  , *  ]
[ T ->  · T * F  , /  ]
[ T ->  · T * F  , %  ]
[ T ->  · T / F  , ,  ]
[ T ->  · T / F  , -  ]
[ T ->  · T / F  , +  ]
[ T ->  · T / F  , *  ]
[ T ->  · T / F  , /  ]
[ T ->  · T / F  , %  ]
[ T ->  · T % F  , ,  ]
[ T ->  · T % F  , -  ]
[ T ->  · T % F  , +  ]
[ T ->  · T % F  , *  ]
[ T ->  · T % F  , /  ]
[ T ->  · T % F  , %  ]
[ T ->  · F  , ,  ]
[ T ->  · F  , -  ]
[ T ->  · F  , +  ]
[ T ->  · F  , *  ]
[ T ->  · F  , /  ]
[ T ->  · F  , %  ]
[ F ->  · V  , ,  ]
[ F ->  · V  , -  ]
[ F ->  · V  , +  ]
[ F ->  · V  , *  ]
[ F ->  · V  , /  ]
[ F ->  · V  , %  ]
[ F ->  · ( E )  , ,  ]
[ F ->  · ( E )  , -  ]
[ F ->  · ( E )  , +  ]
[ F ->  · ( E )  , *  ]
[ F ->  · ( E )  , /  ]
[ F ->  · ( E )  , %  ]
[ F ->  · C  , ,  ]
[ F ->  · C  , -  ]
[ F ->  · C  , +  ]
[ F ->  · C  , *  ]
[ F ->  · C  , /  ]
[ F ->  · C  , %  ]
[ F ->  · value ( E , E )  , ,  ]
[ F ->  · value ( E , E )  , -  ]
[ F ->  · value ( E , E )  , +  ]
[ F ->  · value ( E , E )  , *  ]
[ F ->  · value ( E , E )  , /  ]
[ F ->  · value ( E , E )  , %  ]
[ F ->  · derivative ( E )  , ,  ]
[ F ->  · derivative ( E )  , -  ]
[ F ->  · derivative ( E )  , +  ]
[ F ->  · derivative ( E )  , *  ]
[ F ->  · derivative ( E )  , /  ]
[ F ->  · derivative ( E )  , %  ]
[ F ->  · coeff ( E , E )  , ,  ]
[ F ->  · coeff ( E , E )  , -  ]
[ F ->  · coeff ( E , E )  , +  ]
[ F ->  · coeff ( E , E )  , *  ]
[ F ->  · coeff ( E , E )  , /  ]
[ F ->  · coeff ( E , E )  , %  ]
[ F ->  · deg ( E )  , ,  ]
[ F ->  · deg ( E )  , -  ]
[ F ->  · deg ( E )  , +  ]
[ F ->  · deg ( E )  , *  ]
[ F ->  · deg ( E )  , /  ]
[ F ->  · deg ( E )  , %  ]
[ F -> coeff (  · E , E )  , )  ]
[ F -> coeff (  · E , E )  , -  ]
[ F -> coeff (  · E , E )  , +  ]
[ F -> coeff (  · E , E )  , *  ]
[ F -> coeff (  · E , E )  , /  ]
[ F -> coeff (  · E , E )  , %  ]
}

set 85 = GOTO( set 46 , ( ) :
{
[ E ->  · E - T  , )  ]
[ E ->  · E - T  , -  ]
[ E ->  · E - T  , +  ]
[ E ->  · E + T  , )  ]
[ E ->  · E + T  , -  ]
[ E ->  · E + T  , +  ]
[ E ->  · T  , )  ]
[ E ->  · T  , -  ]
[ E ->  · T  , +  ]
[ T ->  · T * F  , )  ]
[ T ->  · T * F  , -  ]
[ T ->  · T * F  , +  ]
[ T ->  · T * F  , *  ]
[ T ->  · T * F  , /  ]
[ T ->  · T * F  , %  ]
[ T ->  · T / F  , )  ]
[ T ->  · T / F  , -  ]
[ T ->  · T / F  , +  ]
[ T ->  · T / F  , *  ]
[ T ->  · T / F  , /  ]
[ T ->  · T / F  , %  ]
[ T ->  · T % F  , )  ]
[ T ->  · T % F  , -  ]
[ T ->  · T % F  , +  ]
[ T ->  · T % F  , *  ]
[ T ->  · T % F  , /  ]
[ T ->  · T % F  , %  ]
[ T ->  · F  , )  ]
[ T ->  · F  , -  ]
[ T ->  · F  , +  ]
[ T ->  · F  , *  ]
[ T ->  · F  , /  ]
[ T ->  · F  , %  ]
[ F ->  · V  , )  ]
[ F ->  · V  , -  ]
[ F ->  · V  , +  ]
[ F ->  · V  , *  ]
[ F ->  · V  , /  ]
[ F ->  · V  , %  ]
[ F ->  · ( E )  , )  ]
[ F ->  · ( E )  , -  ]
[ F ->  · ( E )  , +  ]
[ F ->  · ( E )  , *  ]
[ F ->  · ( E )  , /  ]
[ F ->  · ( E )  , %  ]
[ F ->  · C  , )  ]
[ F ->  · C  , -  ]
[ F ->  · C  , +  ]
[ F ->  · C  , *  ]
[ F ->  · C  , /  ]
[ F ->  · C  , %  ]
[ F ->  · value ( E , E )  , )  ]
[ F ->  · value ( E , E )  , -  ]
[ F ->  · value ( E , E )  , +  ]
[ F ->  · value ( E , E )  , *  ]
[ F ->  · value ( E , E )  , /  ]
[ F ->  · value ( E , E )  , %  ]
[ F ->  · derivative ( E )  , )  ]
[ F ->  · derivative ( E )  , -  ]
[ F ->  · derivative ( E )  , +  ]
[ F ->  · derivative ( E )  , *  ]
[ F ->  · derivative ( E )  , /  ]
[ F ->  · derivative ( E )  , %  ]
[ F ->  · coeff ( E , E )  , )  ]
[ F ->  · coeff ( E , E )  , -  ]
[ F ->  · coeff ( E , E )  , +  ]
[ F ->  · coeff ( E , E )  , *  ]
[ F ->  · coeff ( E , E )  , /  ]
[ F ->  · coeff ( E , E )  , %  ]
[ F ->  · deg ( E )  , )  ]
[ F ->  · deg ( E )  , -  ]
[ F ->  · deg ( E )  , +  ]
[ F ->  · deg ( E )  , *  ]
[ F ->  · deg ( E )  , /  ]
[ F ->  · deg ( E )  , %  ]
[ F -> deg (  · E )  , )  ]
[ F -> deg (  · E )  , -  ]
[ F -> deg (  · E )  , +  ]
[ F -> deg (  · E )  , *  ]
[ F -> deg (  · E )  , /  ]
[ F -> deg (  · E )  , %  ]
}

set 86 = GOTO( set 47 , ( ) :
{
[ E ->  · E - T  , )  ]
[ E ->  · E - T  , -  ]
[ E ->  · E - T  , +  ]
[ E ->  · E + T  , )  ]
[ E ->  · E + T  , -  ]
[ E ->  · E + T  , +  ]
[ E ->  · T  , )  ]
[ E ->  · T  , -  ]
[ E ->  · T  , +  ]
[ T ->  · T * F  , )  ]
[ T ->  · T * F  , -  ]
[ T ->  · T * F  , +  ]
[ T ->  · T * F  , *  ]
[ T ->  · T * F  , /  ]
[ T ->  · T * F  , %  ]
[ T ->  · T / F  , )  ]
[ T ->  · T / F  , -  ]
[ T ->  · T / F  , +  ]
[ T ->  · T / F  , *  ]
[ T ->  · T / F  , /  ]
[ T ->  · T / F  , %  ]
[ T ->  · T % F  , )  ]
[ T ->  · T % F  , -  ]
[ T ->  · T % F  , +  ]
[ T ->  · T % F  , *  ]
[ T ->  · T % F  , /  ]
[ T ->  · T % F  , %  ]
[ T ->  · F  , )  ]
[ T ->  · F  , -  ]
[ T ->  · F  , +  ]
[ T ->  · F  , *  ]
[ T ->  · F  , /  ]
[ T ->  · F  , %  ]
[ F ->  · V  , )  ]
[ F ->  · V  , -  ]
[ F ->  · V  , +  ]
[ F ->  · V  , *  ]
[ F ->  · V  , /  ]
[ F ->  · V  , %  ]
[ F ->  · ( E )  , )  ]
[ F ->  · ( E )  , -  ]
[ F ->  · ( E )  , +  ]
[ F ->  · ( E )  , *  ]
[ F ->  · ( E )  , /  ]
[ F ->  · ( E )  , %  ]
[ F ->  · C  , )  ]
[ F ->  · C  , -  ]
[ F ->  · C  , +  ]
[ F ->  · C  , *  ]
[ F ->  · C  , /  ]
[ F ->  · C  , %  ]
[ F ->  · value ( E , E )  , )  ]
[ F ->  · value ( E , E )  , -  ]
[ F ->  · value ( E , E )  , +  ]
[ F ->  · value ( E , E )  , *  ]
[ F ->  · value ( E , E )  , /  ]
[ F ->  · value ( E , E )  , %  ]
[ F ->  · derivative ( E )  , )  ]
[ F ->  · derivative ( E )  , -  ]
[ F ->  · derivative ( E )  , +  ]
[ F ->  · derivative ( E )  , *  ]
[ F ->  · derivative ( E )  , /  ]
[ F ->  · derivative ( E )  , %  ]
[ F ->  · coeff ( E , E )  , )  ]
[ F ->  · coeff ( E , E )  , -  ]
[ F ->  · coeff ( E , E )  , +  ]
[ F ->  · coeff ( E , E )  , *  ]
[ F ->  · coeff ( E , E )  , /  ]
[ F ->  · coeff ( E , E )  , %  ]
[ F ->  · deg ( E )  , )  ]
[ F ->  · deg ( E )  , -  ]
[ F ->  · deg ( E )  , +  ]
[ F ->  · deg ( E )  , *  ]
[ F ->  · deg ( E )  , /  ]
[ F ->  · deg ( E )  , %  ]
[ F -> derivative (  · E )  , )  ]
[ F -> derivative (  · E )  , -  ]
[ F -> derivative (  · E )  , +  ]
[ F -> derivative (  · E )  , *  ]
[ F -> derivative (  · E )  , /  ]
[ F -> derivative (  · E )  , %  ]
}

set 87 = GOTO( set 48 , ( ) :
{
[ E ->  · E - T  , ,  ]
[ E ->  · E - T  , -  ]
[ E ->  · E - T  , +  ]
[ E ->  · E + T  , ,  ]
[ E ->  · E + T  , -  ]
[ E ->  · E + T  , +  ]
[ E ->  · T  , ,  ]
[ E ->  · T  , -  ]
[ E ->  · T  , +  ]
[ T ->  · T * F  , ,  ]
[ T ->  · T * F  , -  ]
[ T ->  · T * F  , +  ]
[ T ->  · T * F  , *  ]
[ T ->  · T * F  , /  ]
[ T ->  · T * F  , %  ]
[ T ->  · T / F  , ,  ]
[ T ->  · T / F  , -  ]
[ T ->  · T / F  , +  ]
[ T ->  · T / F  , *  ]
[ T ->  · T / F  , /  ]
[ T ->  · T / F  , %  ]
[ T ->  · T % F  , ,  ]
[ T ->  · T % F  , -  ]
[ T ->  · T % F  , +  ]
[ T ->  · T % F  , *  ]
[ T ->  · T % F  , /  ]
[ T ->  · T % F  , %  ]
[ T ->  · F  , ,  ]
[ T ->  · F  , -  ]
[ T ->  · F  , +  ]
[ T ->  · F  , *  ]
[ T ->  · F  , /  ]
[ T ->  · F  , %  ]
[ F ->  · V  , ,  ]
[ F ->  · V  , -  ]
[ F ->  · V  , +  ]
[ F ->  · V  , *  ]
[ F ->  · V  , /  ]
[ F ->  · V  , %  ]
[ F ->  · ( E )  , ,  ]
[ F ->  · ( E )  , -  ]
[ F ->  · ( E )  , +  ]
[ F ->  · ( E )  , *  ]
[ F ->  · ( E )  , /  ]
[ F ->  · ( E )  , %  ]
[ F ->  · C  , ,  ]
[ F ->  · C  , -  ]
[ F ->  · C  , +  ]
[ F ->  · C  , *  ]
[ F ->  · C  , /  ]
[ F ->  · C  , %  ]
[ F ->  · value ( E , E )  , ,  ]
[ F ->  · value ( E , E )  , -  ]
[ F ->  · value ( E , E )  , +  ]
[ F ->  · value ( E , E )  , *  ]
[ F ->  · value ( E , E )  , /  ]
[ F ->  · value ( E , E )  , %  ]
[ F ->  · derivative ( E )  , ,  ]
[ F ->  · derivative ( E )  , -  ]
[ F ->  · derivative ( E )  , +  ]
[ F ->  · derivative ( E )  , *  ]
[ F ->  · derivative ( E )  , /  ]
[ F ->  · derivative ( E )  , %  ]
[ F ->  · coeff ( E , E )  , ,  ]
[ F ->  · coeff ( E , E )  , -  ]
[ F ->  · coeff ( E , E )  , +  ]
[ F ->  · coeff ( E , E )  , *  ]
[ F ->  · coeff ( E , E )  , /  ]
[ F ->  · coeff ( E , E )  , %  ]
[ F ->  · deg ( E )  , ,  ]
[ F ->  · deg ( E )  , -  ]
[ F ->  · deg ( E )  , +  ]
[ F ->  · deg ( E )  , *  ]
[ F ->  · deg ( E )  , /  ]
[ F ->  · deg ( E )  , %  ]
[ F -> value (  · E , E )  , )  ]
[ F -> value (  · E , E )  , -  ]
[ F -> value (  · E , E )  , +  ]
[ F -> value (  · E , E )  , *  ]
[ F -> value (  · E , E )  , /  ]
[ F -> value (  · E , E )  , %  ]
}

set 88 = GOTO( set 49 , V ) :
{
[ <op> -> if <test> goto V  · <else> ;  ,  ]
[ <op> -> if <test> goto V  · <else> ;  , ;  ]
[ <op> -> if <test> goto V  · <else> ;  , V  ]
[ <op> -> if <test> goto V  · <else> ;  , :  ]
[ <op> -> if <test> goto V  · <else> ;  , let  ]
[ <op> -> if <test> goto V  · <else> ;  , if  ]
[ <op> -> if <test> goto V  · <else> ;  , goto  ]
[ <op> -> if <test> goto V  · <else> ;  , load  ]
[ <op> -> if <test> goto V  · <else> ;  , put  ]
[ <op> -> if <test> goto V  · <else> ;  , switch  ]
[ <op> -> if <test> goto V  · <else> ;  , error  ]
[ <op> -> if <test> goto V  · <else> ;  , comment  ]
[ <else> ->  ·  , ;  ]
[ <else> ->  · else goto V  , ;  ]
}

set 89 = GOTO( set 50 , T ) :
{
[ E -> E + T  ·  , Rel  ]
[ E -> E + T  ·  , -  ]
[ E -> E + T  ·  , +  ]
[ T -> T  · * F  , Rel  ]
[ T -> T  · * F  , -  ]
[ T -> T  · * F  , +  ]
[ T -> T  · * F  , *  ]
[ T -> T  · * F  , /  ]
[ T -> T  · * F  , %  ]
[ T -> T  · / F  , Rel  ]
[ T -> T  · / F  , -  ]
[ T -> T  · / F  , +  ]
[ T -> T  · / F  , *  ]
[ T -> T  · / F  , /  ]
[ T -> T  · / F  , %  ]
[ T -> T  · % F  , Rel  ]
[ T -> T  · % F  , -  ]
[ T -> T  · % F  , +  ]
[ T -> T  · % F  , *  ]
[ T -> T  · % F  , /  ]
[ T -> T  · % F  , %  ]
}

set 90 = GOTO( set 51 , T ) :
{
[ E -> E - T  ·  , Rel  ]
[ E -> E - T  ·  , -  ]
[ E -> E - T  ·  , +  ]
[ T -> T  · * F  , Rel  ]
[ T -> T  · * F  , -  ]
[ T -> T  · * F  , +  ]
[ T -> T  · * F  , *  ]
[ T -> T  · * F  , /  ]
[ T -> T  · * F  , %  ]
[ T -> T  · / F  , Rel  ]
[ T -> T  · / F  , -  ]
[ T -> T  · / F  , +  ]
[ T -> T  · / F  , *  ]
[ T -> T  · / F  , /  ]
[ T -> T  · / F  , %  ]
[ T -> T  · % F  , Rel  ]
[ T -> T  · % F  , -  ]
[ T -> T  · % F  , +  ]
[ T -> T  · % F  , *  ]
[ T -> T  · % F  , /  ]
[ T -> T  · % F  , %  ]
}

set 91 = GOTO( set 52 , ( ) :
{
[ E ->  · E - T  , )  ]
[ E ->  · E - T  , -  ]
[ E ->  · E - T  , +  ]
[ E ->  · E + T  , )  ]
[ E ->  · E + T  , -  ]
[ E ->  · E + T  , +  ]
[ E ->  · T  , )  ]
[ E ->  · T  , -  ]
[ E ->  · T  , +  ]
[ T ->  · T * F  , )  ]
[ T ->  · T * F  , -  ]
[ T ->  · T * F  , +  ]
[ T ->  · T * F  , *  ]
[ T ->  · T * F  , /  ]
[ T ->  · T * F  , %  ]
[ T ->  · T / F  , )  ]
[ T ->  · T / F  , -  ]
[ T ->  · T / F  , +  ]
[ T ->  · T / F  , *  ]
[ T ->  · T / F  , /  ]
[ T ->  · T / F  , %  ]
[ T ->  · T % F  , )  ]
[ T ->  · T % F  , -  ]
[ T ->  · T % F  , +  ]
[ T ->  · T % F  , *  ]
[ T ->  · T % F  , /  ]
[ T ->  · T % F  , %  ]
[ T ->  · F  , )  ]
[ T ->  · F  , -  ]
[ T ->  · F  , +  ]
[ T ->  · F  , *  ]
[ T ->  · F  , /  ]
[ T ->  · F  , %  ]
[ F ->  · V  , )  ]
[ F ->  · V  , -  ]
[ F ->  · V  , +  ]
[ F ->  · V  , *  ]
[ F ->  · V  , /  ]
[ F ->  · V  , %  ]
[ F ->  · ( E )  , )  ]
[ F ->  · ( E )  , -  ]
[ F ->  · ( E )  , +  ]
[ F ->  · ( E )  , *  ]
[ F ->  · ( E )  , /  ]
[ F ->  · ( E )  , %  ]
[ F ->  · C  , )  ]
[ F ->  · C  , -  ]
[ F ->  · C  , +  ]
[ F ->  · C  , *  ]
[ F ->  · C  , /  ]
[ F ->  · C  , %  ]
[ F ->  · value ( E , E )  , )  ]
[ F ->  · value ( E , E )  , -  ]
[ F ->  · value ( E , E )  , +  ]
[ F ->  · value ( E , E )  , *  ]
[ F ->  · value ( E , E )  , /  ]
[ F ->  · value ( E , E )  , %  ]
[ F ->  · derivative ( E )  , )  ]
[ F ->  · derivative ( E )  , -  ]
[ F ->  · derivative ( E )  , +  ]
[ F ->  · derivative ( E )  , *  ]
[ F ->  · derivative ( E )  , /  ]
[ F ->  · derivative ( E )  , %  ]
[ F ->  · coeff ( E , E )  , )  ]
[ F ->  · coeff ( E , E )  , -  ]
[ F ->  · coeff ( E , E )  , +  ]
[ F ->  · coeff ( E , E )  , *  ]
[ F ->  · coeff ( E , E )  , /  ]
[ F ->  · coeff ( E , E )  , %  ]
[ F ->  · deg ( E )  , )  ]
[ F ->  · deg ( E )  , -  ]
[ F ->  · deg ( E )  , +  ]
[ F ->  · deg ( E )  , *  ]
[ F ->  · deg ( E )  , /  ]
[ F ->  · deg ( E )  , %  ]
[ F -> (  · E )  , goto  ]
[ F -> (  · E )  , -  ]
[ F -> (  · E )  , +  ]
[ F -> (  · E )  , *  ]
[ F -> (  · E )  , /  ]
[ F -> (  · E )  , %  ]
}

set 92 = GOTO( set 52 , C ) :
{
[ F -> C  ·  , goto  ]
[ F -> C  ·  , -  ]
[ F -> C  ·  , +  ]
[ F -> C  ·  , *  ]
[ F -> C  ·  , /  ]
[ F -> C  ·  , %  ]
}

set 93 = GOTO( set 52 , E ) :
{
[ E -> E  · - T  , goto  ]
[ E -> E  · - T  , -  ]
[ E -> E  · - T  , +  ]
[ E -> E  · + T  , goto  ]
[ E -> E  · + T  , -  ]
[ E -> E  · + T  , +  ]
[ <test> -> E Rel E  ·  , goto  ]
}

set 94 = GOTO( set 52 , F ) :
{
[ T -> F  ·  , goto  ]
[ T -> F  ·  , -  ]
[ T -> F  ·  , +  ]
[ T -> F  ·  , *  ]
[ T -> F  ·  , /  ]
[ T -> F  ·  , %  ]
}

set 95 = GOTO( set 52 , T ) :
{
[ E -> T  ·  , goto  ]
[ E -> T  ·  , -  ]
[ E -> T  ·  , +  ]
[ T -> T  · * F  , goto  ]
[ T -> T  · * F  , -  ]
[ T -> T  · * F  , +  ]
[ T -> T  · * F  , *  ]
[ T -> T  · * F  , /  ]
[ T -> T  · * F  , %  ]
[ T -> T  · / F  , goto  ]
[ T -> T  · / F  , -  ]
[ T -> T  · / F  , +  ]
[ T -> T  · / F  , *  ]
[ T -> T  · / F  , /  ]
[ T -> T  · / F  , %  ]
[ T -> T  · % F  , goto  ]
[ T -> T  · % F  , -  ]
[ T -> T  · % F  , +  ]
[ T -> T  · % F  , *  ]
[ T -> T  · % F  , /  ]
[ T -> T  · % F  , %  ]
}

set 96 = GOTO( set 52 , V ) :
{
[ F -> V  ·  , goto  ]
[ F -> V  ·  , -  ]
[ F -> V  ·  , +  ]
[ F -> V  ·  , *  ]
[ F -> V  ·  , /  ]
[ F -> V  ·  , %  ]
}

set 97 = GOTO( set 52 , coeff ) :
{
[ F -> coeff  · ( E , E )  , goto  ]
[ F -> coeff  · ( E , E )  , -  ]
[ F -> coeff  · ( E , E )  , +  ]
[ F -> coeff  · ( E , E )  , *  ]
[ F -> coeff  · ( E , E )  , /  ]
[ F -> coeff  · ( E , E )  , %  ]
}

set 98 = GOTO( set 52 , deg ) :
{
[ F -> deg  · ( E )  , goto  ]
[ F -> deg  · ( E )  , -  ]
[ F -> deg  · ( E )  , +  ]
[ F -> deg  · ( E )  , *  ]
[ F -> deg  · ( E )  , /  ]
[ F -> deg  · ( E )  , %  ]
}

set 99 = GOTO( set 52 , derivative ) :
{
[ F -> derivative  · ( E )  , goto  ]
[ F -> derivative  · ( E )  , -  ]
[ F -> derivative  · ( E )  , +  ]
[ F -> derivative  · ( E )  , *  ]
[ F -> derivative  · ( E )  , /  ]
[ F -> derivative  · ( E )  , %  ]
}

set 100 = GOTO( set 52 , value ) :
{
[ F -> value  · ( E , E )  , goto  ]
[ F -> value  · ( E , E )  , -  ]
[ F -> value  · ( E , E )  , +  ]
[ F -> value  · ( E , E )  , *  ]
[ F -> value  · ( E , E )  , /  ]
[ F -> value  · ( E , E )  , %  ]
}

set 101 = GOTO( set 53 , F ) :
{
[ T -> T % F  ·  , Rel  ]
[ T -> T % F  ·  , -  ]
[ T -> T % F  ·  , +  ]
[ T -> T % F  ·  , *  ]
[ T -> T % F  ·  , /  ]
[ T -> T % F  ·  , %  ]
}

set 102 = GOTO( set 54 , F ) :
{
[ T -> T * F  ·  , Rel  ]
[ T -> T * F  ·  , -  ]
[ T -> T * F  ·  , +  ]
[ T -> T * F  ·  , *  ]
[ T -> T * F  ·  , /  ]
[ T -> T * F  ·  , %  ]
}

set 103 = GOTO( set 55 , F ) :
{
[ T -> T / F  ·  , Rel  ]
[ T -> T / F  ·  , -  ]
[ T -> T / F  ·  , +  ]
[ T -> T / F  ·  , *  ]
[ T -> T / F  ·  , /  ]
[ T -> T / F  ·  , %  ]
}

set 104 = GOTO( set 56 , ( ) :
{
[ E ->  · E - T  , )  ]
[ E ->  · E - T  , -  ]
[ E ->  · E - T  , +  ]
[ E ->  · E + T  , )  ]
[ E ->  · E + T  , -  ]
[ E ->  · E + T  , +  ]
[ E ->  · T  , )  ]
[ E ->  · T  , -  ]
[ E ->  · T  , +  ]
[ T ->  · T * F  , )  ]
[ T ->  · T * F  , -  ]
[ T ->  · T * F  , +  ]
[ T ->  · T * F  , *  ]
[ T ->  · T * F  , /  ]
[ T ->  · T * F  , %  ]
[ T ->  · T / F  , )  ]
[ T ->  · T / F  , -  ]
[ T ->  · T / F  , +  ]
[ T ->  · T / F  , *  ]
[ T ->  · T / F  , /  ]
[ T ->  · T / F  , %  ]
[ T ->  · T % F  , )  ]
[ T ->  · T % F  , -  ]
[ T ->  · T % F  , +  ]
[ T ->  · T % F  , *  ]
[ T ->  · T % F  , /  ]
[ T ->  · T % F  , %  ]
[ T ->  · F  , )  ]
[ T ->  · F  , -  ]
[ T ->  · F  , +  ]
[ T ->  · F  , *  ]
[ T ->  · F  , /  ]
[ T ->  · F  , %  ]
[ F ->  · V  , )  ]
[ F ->  · V  , -  ]
[ F ->  · V  , +  ]
[ F ->  · V  , *  ]
[ F ->  · V  , /  ]
[ F ->  · V  , %  ]
[ F ->  · ( E )  , )  ]
[ F ->  · ( E )  , -  ]
[ F ->  · ( E )  , +  ]
[ F ->  · ( E )  , *  ]
[ F ->  · ( E )  , /  ]
[ F ->  · ( E )  , %  ]
[ F ->  · C  , )  ]
[ F ->  · C  , -  ]
[ F ->  · C  , +  ]
[ F ->  · C  , *  ]
[ F ->  · C  , /  ]
[ F ->  · C  , %  ]
[ F ->  · value ( E , E )  , )  ]
[ F ->  · value ( E , E )  , -  ]
[ F ->  · value ( E , E )  , +  ]
[ F ->  · value ( E , E )  , *  ]
[ F ->  · value ( E , E )  , /  ]
[ F ->  · value ( E , E )  , %  ]
[ F ->  · derivative ( E )  , )  ]
[ F ->  · derivative ( E )  , -  ]
[ F ->  · derivative ( E )  , +  ]
[ F ->  · derivative ( E )  , *  ]
[ F ->  · derivative ( E )  , /  ]
[ F ->  · derivative ( E )  , %  ]
[ F ->  · coeff ( E , E )  , )  ]
[ F ->  · coeff ( E , E )  , -  ]
[ F ->  · coeff ( E , E )  , +  ]
[ F ->  · coeff ( E , E )  , *  ]
[ F ->  · coeff ( E , E )  , /  ]
[ F ->  · coeff ( E , E )  , %  ]
[ F ->  · deg ( E )  , )  ]
[ F ->  · deg ( E )  , -  ]
[ F ->  · deg ( E )  , +  ]
[ F ->  · deg ( E )  , *  ]
[ F ->  · deg ( E )  , /  ]
[ F ->  · deg ( E )  , %  ]
[ F -> (  · E )  , ,  ]
[ F -> (  · E )  , -  ]
[ F -> (  · E )  , +  ]
[ F -> (  · E )  , *  ]
[ F -> (  · E )  , /  ]
[ F -> (  · E )  , %  ]
}

set 105 = GOTO( set 56 , C ) :
{
[ F -> C  ·  , ,  ]
[ F -> C  ·  , -  ]
[ F -> C  ·  , +  ]
[ F -> C  ·  , *  ]
[ F -> C  ·  , /  ]
[ F -> C  ·  , %  ]
}

set 106 = GOTO( set 56 , E ) :
{
[ E -> E  · - T  , ,  ]
[ E -> E  · - T  , -  ]
[ E -> E  · - T  , +  ]
[ E -> E  · + T  , ,  ]
[ E -> E  · + T  , -  ]
[ E -> E  · + T  , +  ]
[ F -> coeff ( E  · , E )  , Rel  ]
[ F -> coeff ( E  · , E )  , -  ]
[ F -> coeff ( E  · , E )  , +  ]
[ F -> coeff ( E  · , E )  , *  ]
[ F -> coeff ( E  · , E )  , /  ]
[ F -> coeff ( E  · , E )  , %  ]
}

set 107 = GOTO( set 56 , F ) :
{
[ T -> F  ·  , ,  ]
[ T -> F  ·  , -  ]
[ T -> F  ·  , +  ]
[ T -> F  ·  , *  ]
[ T -> F  ·  , /  ]
[ T -> F  ·  , %  ]
}

set 108 = GOTO( set 56 , T ) :
{
[ E -> T  ·  , ,  ]
[ E -> T  ·  , -  ]
[ E -> T  ·  , +  ]
[ T -> T  · * F  , ,  ]
[ T -> T  · * F  , -  ]
[ T -> T  · * F  , +  ]
[ T -> T  · * F  , *  ]
[ T -> T  · * F  , /  ]
[ T -> T  · * F  , %  ]
[ T -> T  · / F  , ,  ]
[ T -> T  · / F  , -  ]
[ T -> T  · / F  , +  ]
[ T -> T  · / F  , *  ]
[ T -> T  · / F  , /  ]
[ T -> T  · / F  , %  ]
[ T -> T  · % F  , ,  ]
[ T -> T  · % F  , -  ]
[ T -> T  · % F  , +  ]
[ T -> T  · % F  , *  ]
[ T -> T  · % F  , /  ]
[ T -> T  · % F  , %  ]
}

set 109 = GOTO( set 56 , V ) :
{
[ F -> V  ·  , ,  ]
[ F -> V  ·  , -  ]
[ F -> V  ·  , +  ]
[ F -> V  ·  , *  ]
[ F -> V  ·  , /  ]
[ F -> V  ·  , %  ]
}

set 110 = GOTO( set 56 , coeff ) :
{
[ F -> coeff  · ( E , E )  , ,  ]
[ F -> coeff  · ( E , E )  , -  ]
[ F -> coeff  · ( E , E )  , +  ]
[ F -> coeff  · ( E , E )  , *  ]
[ F -> coeff  · ( E , E )  , /  ]
[ F -> coeff  · ( E , E )  , %  ]
}

set 111 = GOTO( set 56 , deg ) :
{
[ F -> deg  · ( E )  , ,  ]
[ F -> deg  · ( E )  , -  ]
[ F -> deg  · ( E )  , +  ]
[ F -> deg  · ( E )  , *  ]
[ F -> deg  · ( E )  , /  ]
[ F -> deg  · ( E )  , %  ]
}

set 112 = GOTO( set 56 , derivative ) :
{
[ F -> derivative  · ( E )  , ,  ]
[ F -> derivative  · ( E )  , -  ]
[ F -> derivative  · ( E )  , +  ]
[ F -> derivative  · ( E )  , *  ]
[ F -> derivative  · ( E )  , /  ]
[ F -> derivative  · ( E )  , %  ]
}

set 113 = GOTO( set 56 , value ) :
{
[ F -> value  · ( E , E )  , ,  ]
[ F -> value  · ( E , E )  , -  ]
[ F -> value  · ( E , E )  , +  ]
[ F -> value  · ( E , E )  , *  ]
[ F -> value  · ( E , E )  , /  ]
[ F -> value  · ( E , E )  , %  ]
}

set 114 = GOTO( set 57 , E ) :
{
[ E -> E  · - T  , )  ]
[ E -> E  · - T  , -  ]
[ E -> E  · - T  , +  ]
[ E -> E  · + T  , )  ]
[ E -> E  · + T  , -  ]
[ E -> E  · + T  , +  ]
[ F -> deg ( E  · )  , Rel  ]
[ F -> deg ( E  · )  , -  ]
[ F -> deg ( E  · )  , +  ]
[ F -> deg ( E  · )  , *  ]
[ F -> deg ( E  · )  , /  ]
[ F -> deg ( E  · )  , %  ]
}

set 115 = GOTO( set 58 , E ) :
{
[ E -> E  · - T  , )  ]
[ E -> E  · - T  , -  ]
[ E -> E  · - T  , +  ]
[ E -> E  · + T  , )  ]
[ E -> E  · + T  , -  ]
[ E -> E  · + T  , +  ]
[ F -> derivative ( E  · )  , Rel  ]
[ F -> derivative ( E  · )  , -  ]
[ F -> derivative ( E  · )  , +  ]
[ F -> derivative ( E  · )  , *  ]
[ F -> derivative ( E  · )  , /  ]
[ F -> derivative ( E  · )  , %  ]
}

set 116 = GOTO( set 59 , E ) :
{
[ E -> E  · - T  , ,  ]
[ E -> E  · - T  , -  ]
[ E -> E  · - T  , +  ]
[ E -> E  · + T  , ,  ]
[ E -> E  · + T  , -  ]
[ E -> E  · + T  , +  ]
[ F -> value ( E  · , E )  , Rel  ]
[ F -> value ( E  · , E )  , -  ]
[ F -> value ( E  · , E )  , +  ]
[ F -> value ( E  · , E )  , *  ]
[ F -> value ( E  · , E )  , /  ]
[ F -> value ( E  · , E )  , %  ]
}

set 117 = GOTO( set 61 , ( ) :
{
[ E ->  · E - T  , )  ]
[ E ->  · E - T  , -  ]
[ E ->  · E - T  , +  ]
[ E ->  · E + T  , )  ]
[ E ->  · E + T  , -  ]
[ E ->  · E + T  , +  ]
[ E ->  · T  , )  ]
[ E ->  · T  , -  ]
[ E ->  · T  , +  ]
[ T ->  · T * F  , )  ]
[ T ->  · T * F  , -  ]
[ T ->  · T * F  , +  ]
[ T ->  · T * F  , *  ]
[ T ->  · T * F  , /  ]
[ T ->  · T * F  , %  ]
[ T ->  · T / F  , )  ]
[ T ->  · T / F  , -  ]
[ T ->  · T / F  , +  ]
[ T ->  · T / F  , *  ]
[ T ->  · T / F  , /  ]
[ T ->  · T / F  , %  ]
[ T ->  · T % F  , )  ]
[ T ->  · T % F  , -  ]
[ T ->  · T % F  , +  ]
[ T ->  · T % F  , *  ]
[ T ->  · T % F  , /  ]
[ T ->  · T % F  , %  ]
[ T ->  · F  , )  ]
[ T ->  · F  , -  ]
[ T ->  · F  , +  ]
[ T ->  · F  , *  ]
[ T ->  · F  , /  ]
[ T ->  · F  , %  ]
[ F ->  · V  , )  ]
[ F ->  · V  , -  ]
[ F ->  · V  , +  ]
[ F ->  · V  , *  ]
[ F ->  · V  , /  ]
[ F ->  · V  , %  ]
[ F ->  · ( E )  , )  ]
[ F ->  · ( E )  , -  ]
[ F ->  · ( E )  , +  ]
[ F ->  · ( E )  , *  ]
[ F ->  · ( E )  , /  ]
[ F ->  · ( E )  , %  ]
[ F ->  · C  , )  ]
[ F ->  · C  , -  ]
[ F ->  · C  , +  ]
[ F ->  · C  , *  ]
[ F ->  · C  , /  ]
[ F ->  · C  , %  ]
[ F ->  · value ( E , E )  , )  ]
[ F ->  · value ( E , E )  , -  ]
[ F ->  · value ( E , E )  , +  ]
[ F ->  · value ( E , E )  , *  ]
[ F ->  · value ( E , E )  , /  ]
[ F ->  · value ( E , E )  , %  ]
[ F ->  · derivative ( E )  , )  ]
[ F ->  · derivative ( E )  , -  ]
[ F ->  · derivative ( E )  , +  ]
[ F ->  · derivative ( E )  , *  ]
[ F ->  · derivative ( E )  , /  ]
[ F ->  · derivative ( E )  , %  ]
[ F ->  · coeff ( E , E )  , )  ]
[ F ->  · coeff ( E , E )  , -  ]
[ F ->  · coeff ( E , E )  , +  ]
[ F ->  · coeff ( E , E )  , *  ]
[ F ->  · coeff ( E , E )  , /  ]
[ F ->  · coeff ( E , E )  , %  ]
[ F ->  · deg ( E )  , )  ]
[ F ->  · deg ( E )  , -  ]
[ F ->  · deg ( E )  , +  ]
[ F ->  · deg ( E )  , *  ]
[ F ->  · deg ( E )  , /  ]
[ F ->  · deg ( E )  , %  ]
[ F -> (  · E )  , ;  ]
[ F -> (  · E )  , -  ]
[ F -> (  · E )  , +  ]
[ F -> (  · E )  , *  ]
[ F -> (  · E )  , /  ]
[ F -> (  · E )  , %  ]
}

set 118 = GOTO( set 61 , C ) :
{
[ F -> C  ·  , ;  ]
[ F -> C  ·  , -  ]
[ F -> C  ·  , +  ]
[ F -> C  ·  , *  ]
[ F -> C  ·  , /  ]
[ F -> C  ·  , %  ]
}

set 119 = GOTO( set 61 , E ) :
{
[ <listA> -> = E  · ;  ,  ]
[ <listA> -> = E  · ;  , ;  ]
[ <listA> -> = E  · ;  , V  ]
[ <listA> -> = E  · ;  , :  ]
[ <listA> -> = E  · ;  , let  ]
[ <listA> -> = E  · ;  , if  ]
[ <listA> -> = E  · ;  , goto  ]
[ <listA> -> = E  · ;  , load  ]
[ <listA> -> = E  · ;  , put  ]
[ <listA> -> = E  · ;  , switch  ]
[ <listA> -> = E  · ;  , error  ]
[ <listA> -> = E  · ;  , comment  ]
[ E -> E  · - T  , ;  ]
[ E -> E  · - T  , -  ]
[ E -> E  · - T  , +  ]
[ E -> E  · + T  , ;  ]
[ E -> E  · + T  , -  ]
[ E -> E  · + T  , +  ]
}

set 120 = GOTO( set 61 , F ) :
{
[ T -> F  ·  , ;  ]
[ T -> F  ·  , -  ]
[ T -> F  ·  , +  ]
[ T -> F  ·  , *  ]
[ T -> F  ·  , /  ]
[ T -> F  ·  , %  ]
}

set 121 = GOTO( set 61 , T ) :
{
[ E -> T  ·  , ;  ]
[ E -> T  ·  , -  ]
[ E -> T  ·  , +  ]
[ T -> T  · * F  , ;  ]
[ T -> T  · * F  , -  ]
[ T -> T  · * F  , +  ]
[ T -> T  · * F  , *  ]
[ T -> T  · * F  , /  ]
[ T -> T  · * F  , %  ]
[ T -> T  · / F  , ;  ]
[ T -> T  · / F  , -  ]
[ T -> T  · / F  , +  ]
[ T -> T  · / F  , *  ]
[ T -> T  · / F  , /  ]
[ T -> T  · / F  , %  ]
[ T -> T  · % F  , ;  ]
[ T -> T  · % F  , -  ]
[ T -> T  · % F  , +  ]
[ T -> T  · % F  , *  ]
[ T -> T  · % F  , /  ]
[ T -> T  · % F  , %  ]
}

set 122 = GOTO( set 61 , V ) :
{
[ <listA> ->  · = V <listA>  ,  ]
[ <listA> ->  · = V <listA>  , ;  ]
[ <listA> ->  · = V <listA>  , V  ]
[ <listA> ->  · = V <listA>  , :  ]
[ <listA> ->  · = V <listA>  , let  ]
[ <listA> ->  · = V <listA>  , if  ]
[ <listA> ->  · = V <listA>  , goto  ]
[ <listA> ->  · = V <listA>  , load  ]
[ <listA> ->  · = V <listA>  , put  ]
[ <listA> ->  · = V <listA>  , switch  ]
[ <listA> ->  · = V <listA>  , error  ]
[ <listA> ->  · = V <listA>  , comment  ]
[ <listA> ->  · = E ;  ,  ]
[ <listA> ->  · = E ;  , ;  ]
[ <listA> ->  · = E ;  , V  ]
[ <listA> ->  · = E ;  , :  ]
[ <listA> ->  · = E ;  , let  ]
[ <listA> ->  · = E ;  , if  ]
[ <listA> ->  · = E ;  , goto  ]
[ <listA> ->  · = E ;  , load  ]
[ <listA> ->  · = E ;  , put  ]
[ <listA> ->  · = E ;  , switch  ]
[ <listA> ->  · = E ;  , error  ]
[ <listA> ->  · = E ;  , comment  ]
[ <listA> -> = V  · <listA>  ,  ]
[ <listA> -> = V  · <listA>  , ;  ]
[ <listA> -> = V  · <listA>  , V  ]
[ <listA> -> = V  · <listA>  , :  ]
[ <listA> -> = V  · <listA>  , let  ]
[ <listA> -> = V  · <listA>  , if  ]
[ <listA> -> = V  · <listA>  , goto  ]
[ <listA> -> = V  · <listA>  , load  ]
[ <listA> -> = V  · <listA>  , put  ]
[ <listA> -> = V  · <listA>  , switch  ]
[ <listA> -> = V  · <listA>  , error  ]
[ <listA> -> = V  · <listA>  , comment  ]
[ F -> V  ·  , ;  ]
[ F -> V  ·  , -  ]
[ F -> V  ·  , +  ]
[ F -> V  ·  , *  ]
[ F -> V  ·  , /  ]
[ F -> V  ·  , %  ]
}

set 123 = GOTO( set 61 , coeff ) :
{
[ F -> coeff  · ( E , E )  , ;  ]
[ F -> coeff  · ( E , E )  , -  ]
[ F -> coeff  · ( E , E )  , +  ]
[ F -> coeff  · ( E , E )  , *  ]
[ F -> coeff  · ( E , E )  , /  ]
[ F -> coeff  · ( E , E )  , %  ]
}

set 124 = GOTO( set 61 , deg ) :
{
[ F -> deg  · ( E )  , ;  ]
[ F -> deg  · ( E )  , -  ]
[ F -> deg  · ( E )  , +  ]
[ F -> deg  · ( E )  , *  ]
[ F -> deg  · ( E )  , /  ]
[ F -> deg  · ( E )  , %  ]
}

set 125 = GOTO( set 61 , derivative ) :
{
[ F -> derivative  · ( E )  , ;  ]
[ F -> derivative  · ( E )  , -  ]
[ F -> derivative  · ( E )  , +  ]
[ F -> derivative  · ( E )  , *  ]
[ F -> derivative  · ( E )  , /  ]
[ F -> derivative  · ( E )  , %  ]
}

set 126 = GOTO( set 61 , value ) :
{
[ F -> value  · ( E , E )  , ;  ]
[ F -> value  · ( E , E )  , -  ]
[ F -> value  · ( E , E )  , +  ]
[ F -> value  · ( E , E )  , *  ]
[ F -> value  · ( E , E )  , /  ]
[ F -> value  · ( E , E )  , %  ]
}

set 127 = GOTO( set 62 , , ) :
{
[ <listV> -> ,  · V <listV>  , )  ]
}

set 128 = GOTO( set 62 , <listV> ) :
{
[ <op> -> load ( V <listV>  · ) ;  ,  ]
[ <op> -> load ( V <listV>  · ) ;  , ;  ]
[ <op> -> load ( V <listV>  · ) ;  , V  ]
[ <op> -> load ( V <listV>  · ) ;  , :  ]
[ <op> -> load ( V <listV>  · ) ;  , let  ]
[ <op> -> load ( V <listV>  · ) ;  , if  ]
[ <op> -> load ( V <listV>  · ) ;  , goto  ]
[ <op> -> load ( V <listV>  · ) ;  , load  ]
[ <op> -> load ( V <listV>  · ) ;  , put  ]
[ <op> -> load ( V <listV>  · ) ;  , switch  ]
[ <op> -> load ( V <listV>  · ) ;  , error  ]
[ <op> -> load ( V <listV>  · ) ;  , comment  ]
}

set 129 = GOTO( set 63 , E ) :
{
[ E -> E  · - T  , )  ]
[ E -> E  · - T  , -  ]
[ E -> E  · - T  , +  ]
[ E -> E  · + T  , )  ]
[ E -> E  · + T  , -  ]
[ E -> E  · + T  , +  ]
[ F -> ( E  · )  , ,  ]
[ F -> ( E  · )  , )  ]
[ F -> ( E  · )  , -  ]
[ F -> ( E  · )  , +  ]
[ F -> ( E  · )  , *  ]
[ F -> ( E  · )  , /  ]
[ F -> ( E  · )  , %  ]
}

set 130 = GOTO( set 65 , + ) :
{
[ E -> E +  · T  , ,  ]
[ E -> E +  · T  , )  ]
[ E -> E +  · T  , -  ]
[ E -> E +  · T  , +  ]
[ T ->  · T * F  , ,  ]
[ T ->  · T * F  , )  ]
[ T ->  · T * F  , -  ]
[ T ->  · T * F  , +  ]
[ T ->  · T * F  , *  ]
[ T ->  · T * F  , /  ]
[ T ->  · T * F  , %  ]
[ T ->  · T / F  , ,  ]
[ T ->  · T / F  , )  ]
[ T ->  · T / F  , -  ]
[ T ->  · T / F  , +  ]
[ T ->  · T / F  , *  ]
[ T ->  · T / F  , /  ]
[ T ->  · T / F  , %  ]
[ T ->  · T % F  , ,  ]
[ T ->  · T % F  , )  ]
[ T ->  · T % F  , -  ]
[ T ->  · T % F  , +  ]
[ T ->  · T % F  , *  ]
[ T ->  · T % F  , /  ]
[ T ->  · T % F  , %  ]
[ T ->  · F  , ,  ]
[ T ->  · F  , )  ]
[ T ->  · F  , -  ]
[ T ->  · F  , +  ]
[ T ->  · F  , *  ]
[ T ->  · F  , /  ]
[ T ->  · F  , %  ]
[ F ->  · V  , ,  ]
[ F ->  · V  , )  ]
[ F ->  · V  , -  ]
[ F ->  · V  , +  ]
[ F ->  · V  , *  ]
[ F ->  · V  , /  ]
[ F ->  · V  , %  ]
[ F ->  · ( E )  , ,  ]
[ F ->  · ( E )  , )  ]
[ F ->  · ( E )  , -  ]
[ F ->  · ( E )  , +  ]
[ F ->  · ( E )  , *  ]
[ F ->  · ( E )  , /  ]
[ F ->  · ( E )  , %  ]
[ F ->  · C  , ,  ]
[ F ->  · C  , )  ]
[ F ->  · C  , -  ]
[ F ->  · C  , +  ]
[ F ->  · C  , *  ]
[ F ->  · C  , /  ]
[ F ->  · C  , %  ]
[ F ->  · value ( E , E )  , ,  ]
[ F ->  · value ( E , E )  , )  ]
[ F ->  · value ( E , E )  , -  ]
[ F ->  · value ( E , E )  , +  ]
[ F ->  · value ( E , E )  , *  ]
[ F ->  · value ( E , E )  , /  ]
[ F ->  · value ( E , E )  , %  ]
[ F ->  · derivative ( E )  , ,  ]
[ F ->  · derivative ( E )  , )  ]
[ F ->  · derivative ( E )  , -  ]
[ F ->  · derivative ( E )  , +  ]
[ F ->  · derivative ( E )  , *  ]
[ F ->  · derivative ( E )  , /  ]
[ F ->  · derivative ( E )  , %  ]
[ F ->  · coeff ( E , E )  , ,  ]
[ F ->  · coeff ( E , E )  , )  ]
[ F ->  · coeff ( E , E )  , -  ]
[ F ->  · coeff ( E , E )  , +  ]
[ F ->  · coeff ( E , E )  , *  ]
[ F ->  · coeff ( E , E )  , /  ]
[ F ->  · coeff ( E , E )  , %  ]
[ F ->  · deg ( E )  , ,  ]
[ F ->  · deg ( E )  , )  ]
[ F ->  · deg ( E )  , -  ]
[ F ->  · deg ( E )  , +  ]
[ F ->  · deg ( E )  , *  ]
[ F ->  · deg ( E )  , /  ]
[ F ->  · deg ( E )  , %  ]
}

set 131 = GOTO( set 65 , , ) :
{
[ E ->  · E - T  , ,  ]
[ E ->  · E - T  , )  ]
[ E ->  · E - T  , -  ]
[ E ->  · E - T  , +  ]
[ E ->  · E + T  , ,  ]
[ E ->  · E + T  , )  ]
[ E ->  · E + T  , -  ]
[ E ->  · E + T  , +  ]
[ E ->  · T  , ,  ]
[ E ->  · T  , )  ]
[ E ->  · T  , -  ]
[ E ->  · T  , +  ]
[ <listE> -> ,  · E <listE>  , )  ]
[ T ->  · T * F  , ,  ]
[ T ->  · T * F  , )  ]
[ T ->  · T * F  , -  ]
[ T ->  · T * F  , +  ]
[ T ->  · T * F  , *  ]
[ T ->  · T * F  , /  ]
[ T ->  · T * F  , %  ]
[ T ->  · T / F  , ,  ]
[ T ->  · T / F  , )  ]
[ T ->  · T / F  , -  ]
[ T ->  · T / F  , +  ]
[ T ->  · T / F  , *  ]
[ T ->  · T / F  , /  ]
[ T ->  · T / F  , %  ]
[ T ->  · T % F  , ,  ]
[ T ->  · T % F  , )  ]
[ T ->  · T % F  , -  ]
[ T ->  · T % F  , +  ]
[ T ->  · T % F  , *  ]
[ T ->  · T % F  , /  ]
[ T ->  · T % F  , %  ]
[ T ->  · F  , ,  ]
[ T ->  · F  , )  ]
[ T ->  · F  , -  ]
[ T ->  · F  , +  ]
[ T ->  · F  , *  ]
[ T ->  · F  , /  ]
[ T ->  · F  , %  ]
[ F ->  · V  , ,  ]
[ F ->  · V  , )  ]
[ F ->  · V  , -  ]
[ F ->  · V  , +  ]
[ F ->  · V  , *  ]
[ F ->  · V  , /  ]
[ F ->  · V  , %  ]
[ F ->  · ( E )  , ,  ]
[ F ->  · ( E )  , )  ]
[ F ->  · ( E )  , -  ]
[ F ->  · ( E )  , +  ]
[ F ->  · ( E )  , *  ]
[ F ->  · ( E )  , /  ]
[ F ->  · ( E )  , %  ]
[ F ->  · C  , ,  ]
[ F ->  · C  , )  ]
[ F ->  · C  , -  ]
[ F ->  · C  , +  ]
[ F ->  · C  , *  ]
[ F ->  · C  , /  ]
[ F ->  · C  , %  ]
[ F ->  · value ( E , E )  , ,  ]
[ F ->  · value ( E , E )  , )  ]
[ F ->  · value ( E , E )  , -  ]
[ F ->  · value ( E , E )  , +  ]
[ F ->  · value ( E , E )  , *  ]
[ F ->  · value ( E , E )  , /  ]
[ F ->  · value ( E , E )  , %  ]
[ F ->  · derivative ( E )  , ,  ]
[ F ->  · derivative ( E )  , )  ]
[ F ->  · derivative ( E )  , -  ]
[ F ->  · derivative ( E )  , +  ]
[ F ->  · derivative ( E )  , *  ]
[ F ->  · derivative ( E )  , /  ]
[ F ->  · derivative ( E )  , %  ]
[ F ->  · coeff ( E , E )  , ,  ]
[ F ->  · coeff ( E , E )  , )  ]
[ F ->  · coeff ( E , E )  , -  ]
[ F ->  · coeff ( E , E )  , +  ]
[ F ->  · coeff ( E , E )  , *  ]
[ F ->  · coeff ( E , E )  , /  ]
[ F ->  · coeff ( E , E )  , %  ]
[ F ->  · deg ( E )  , ,  ]
[ F ->  · deg ( E )  , )  ]
[ F ->  · deg ( E )  , -  ]
[ F ->  · deg ( E )  , +  ]
[ F ->  · deg ( E )  , *  ]
[ F ->  · deg ( E )  , /  ]
[ F ->  · deg ( E )  , %  ]
}

set 132 = GOTO( set 65 , - ) :
{
[ E -> E -  · T  , ,  ]
[ E -> E -  · T  , )  ]
[ E -> E -  · T  , -  ]
[ E -> E -  · T  , +  ]
[ T ->  · T * F  , ,  ]
[ T ->  · T * F  , )  ]
[ T ->  · T * F  , -  ]
[ T ->  · T * F  , +  ]
[ T ->  · T * F  , *  ]
[ T ->  · T * F  , /  ]
[ T ->  · T * F  , %  ]
[ T ->  · T / F  , ,  ]
[ T ->  · T / F  , )  ]
[ T ->  · T / F  , -  ]
[ T ->  · T / F  , +  ]
[ T ->  · T / F  , *  ]
[ T ->  · T / F  , /  ]
[ T ->  · T / F  , %  ]
[ T ->  · T % F  , ,  ]
[ T ->  · T % F  , )  ]
[ T ->  · T % F  , -  ]
[ T ->  · T % F  , +  ]
[ T ->  · T % F  , *  ]
[ T ->  · T % F  , /  ]
[ T ->  · T % F  , %  ]
[ T ->  · F  , ,  ]
[ T ->  · F  , )  ]
[ T ->  · F  , -  ]
[ T ->  · F  , +  ]
[ T ->  · F  , *  ]
[ T ->  · F  , /  ]
[ T ->  · F  , %  ]
[ F ->  · V  , ,  ]
[ F ->  · V  , )  ]
[ F ->  · V  , -  ]
[ F ->  · V  , +  ]
[ F ->  · V  , *  ]
[ F ->  · V  , /  ]
[ F ->  · V  , %  ]
[ F ->  · ( E )  , ,  ]
[ F ->  · ( E )  , )  ]
[ F ->  · ( E )  , -  ]
[ F ->  · ( E )  , +  ]
[ F ->  · ( E )  , *  ]
[ F ->  · ( E )  , /  ]
[ F ->  · ( E )  , %  ]
[ F ->  · C  , ,  ]
[ F ->  · C  , )  ]
[ F ->  · C  , -  ]
[ F ->  · C  , +  ]
[ F ->  · C  , *  ]
[ F ->  · C  , /  ]
[ F ->  · C  , %  ]
[ F ->  · value ( E , E )  , ,  ]
[ F ->  · value ( E , E )  , )  ]
[ F ->  · value ( E , E )  , -  ]
[ F ->  · value ( E , E )  , +  ]
[ F ->  · value ( E , E )  , *  ]
[ F ->  · value ( E , E )  , /  ]
[ F ->  · value ( E , E )  , %  ]
[ F ->  · derivative ( E )  , ,  ]
[ F ->  · derivative ( E )  , )  ]
[ F ->  · derivative ( E )  , -  ]
[ F ->  · derivative ( E )  , +  ]
[ F ->  · derivative ( E )  , *  ]
[ F ->  · derivative ( E )  , /  ]
[ F ->  · derivative ( E )  , %  ]
[ F ->  · coeff ( E , E )  , ,  ]
[ F ->  · coeff ( E , E )  , )  ]
[ F ->  · coeff ( E , E )  , -  ]
[ F ->  · coeff ( E , E )  , +  ]
[ F ->  · coeff ( E , E )  , *  ]
[ F ->  · coeff ( E , E )  , /  ]
[ F ->  · coeff ( E , E )  , %  ]
[ F ->  · deg ( E )  , ,  ]
[ F ->  · deg ( E )  , )  ]
[ F ->  · deg ( E )  , -  ]
[ F ->  · deg ( E )  , +  ]
[ F ->  · deg ( E )  , *  ]
[ F ->  · deg ( E )  , /  ]
[ F ->  · deg ( E )  , %  ]
}

set 133 = GOTO( set 65 , <listE> ) :
{
[ <op> -> put ( E <listE>  · ) ;  ,  ]
[ <op> -> put ( E <listE>  · ) ;  , ;  ]
[ <op> -> put ( E <listE>  · ) ;  , V  ]
[ <op> -> put ( E <listE>  · ) ;  , :  ]
[ <op> -> put ( E <listE>  · ) ;  , let  ]
[ <op> -> put ( E <listE>  · ) ;  , if  ]
[ <op> -> put ( E <listE>  · ) ;  , goto  ]
[ <op> -> put ( E <listE>  · ) ;  , load  ]
[ <op> -> put ( E <listE>  · ) ;  , put  ]
[ <op> -> put ( E <listE>  · ) ;  , switch  ]
[ <op> -> put ( E <listE>  · ) ;  , error  ]
[ <op> -> put ( E <listE>  · ) ;  , comment  ]
}

set 134 = GOTO( set 67 , % ) :
{
[ T -> T %  · F  , ,  ]
[ T -> T %  · F  , )  ]
[ T -> T %  · F  , -  ]
[ T -> T %  · F  , +  ]
[ T -> T %  · F  , *  ]
[ T -> T %  · F  , /  ]
[ T -> T %  · F  , %  ]
[ F ->  · V  , ,  ]
[ F ->  · V  , )  ]
[ F ->  · V  , -  ]
[ F ->  · V  , +  ]
[ F ->  · V  , *  ]
[ F ->  · V  , /  ]
[ F ->  · V  , %  ]
[ F ->  · ( E )  , ,  ]
[ F ->  · ( E )  , )  ]
[ F ->  · ( E )  , -  ]
[ F ->  · ( E )  , +  ]
[ F ->  · ( E )  , *  ]
[ F ->  · ( E )  , /  ]
[ F ->  · ( E )  , %  ]
[ F ->  · C  , ,  ]
[ F ->  · C  , )  ]
[ F ->  · C  , -  ]
[ F ->  · C  , +  ]
[ F ->  · C  , *  ]
[ F ->  · C  , /  ]
[ F ->  · C  , %  ]
[ F ->  · value ( E , E )  , ,  ]
[ F ->  · value ( E , E )  , )  ]
[ F ->  · value ( E , E )  , -  ]
[ F ->  · value ( E , E )  , +  ]
[ F ->  · value ( E , E )  , *  ]
[ F ->  · value ( E , E )  , /  ]
[ F ->  · value ( E , E )  , %  ]
[ F ->  · derivative ( E )  , ,  ]
[ F ->  · derivative ( E )  , )  ]
[ F ->  · derivative ( E )  , -  ]
[ F ->  · derivative ( E )  , +  ]
[ F ->  · derivative ( E )  , *  ]
[ F ->  · derivative ( E )  , /  ]
[ F ->  · derivative ( E )  , %  ]
[ F ->  · coeff ( E , E )  , ,  ]
[ F ->  · coeff ( E , E )  , )  ]
[ F ->  · coeff ( E , E )  , -  ]
[ F ->  · coeff ( E , E )  , +  ]
[ F ->  · coeff ( E , E )  , *  ]
[ F ->  · coeff ( E , E )  , /  ]
[ F ->  · coeff ( E , E )  , %  ]
[ F ->  · deg ( E )  , ,  ]
[ F ->  · deg ( E )  , )  ]
[ F ->  · deg ( E )  , -  ]
[ F ->  · deg ( E )  , +  ]
[ F ->  · deg ( E )  , *  ]
[ F ->  · deg ( E )  , /  ]
[ F ->  · deg ( E )  , %  ]
}

set 135 = GOTO( set 67 , * ) :
{
[ T -> T *  · F  , ,  ]
[ T -> T *  · F  , )  ]
[ T -> T *  · F  , -  ]
[ T -> T *  · F  , +  ]
[ T -> T *  · F  , *  ]
[ T -> T *  · F  , /  ]
[ T -> T *  · F  , %  ]
[ F ->  · V  , ,  ]
[ F ->  · V  , )  ]
[ F ->  · V  , -  ]
[ F ->  · V  , +  ]
[ F ->  · V  , *  ]
[ F ->  · V  , /  ]
[ F ->  · V  , %  ]
[ F ->  · ( E )  , ,  ]
[ F ->  · ( E )  , )  ]
[ F ->  · ( E )  , -  ]
[ F ->  · ( E )  , +  ]
[ F ->  · ( E )  , *  ]
[ F ->  · ( E )  , /  ]
[ F ->  · ( E )  , %  ]
[ F ->  · C  , ,  ]
[ F ->  · C  , )  ]
[ F ->  · C  , -  ]
[ F ->  · C  , +  ]
[ F ->  · C  , *  ]
[ F ->  · C  , /  ]
[ F ->  · C  , %  ]
[ F ->  · value ( E , E )  , ,  ]
[ F ->  · value ( E , E )  , )  ]
[ F ->  · value ( E , E )  , -  ]
[ F ->  · value ( E , E )  , +  ]
[ F ->  · value ( E , E )  , *  ]
[ F ->  · value ( E , E )  , /  ]
[ F ->  · value ( E , E )  , %  ]
[ F ->  · derivative ( E )  , ,  ]
[ F ->  · derivative ( E )  , )  ]
[ F ->  · derivative ( E )  , -  ]
[ F ->  · derivative ( E )  , +  ]
[ F ->  · derivative ( E )  , *  ]
[ F ->  · derivative ( E )  , /  ]
[ F ->  · derivative ( E )  , %  ]
[ F ->  · coeff ( E , E )  , ,  ]
[ F ->  · coeff ( E , E )  , )  ]
[ F ->  · coeff ( E , E )  , -  ]
[ F ->  · coeff ( E , E )  , +  ]
[ F ->  · coeff ( E , E )  , *  ]
[ F ->  · coeff ( E , E )  , /  ]
[ F ->  · coeff ( E , E )  , %  ]
[ F ->  · deg ( E )  , ,  ]
[ F ->  · deg ( E )  , )  ]
[ F ->  · deg ( E )  , -  ]
[ F ->  · deg ( E )  , +  ]
[ F ->  · deg ( E )  , *  ]
[ F ->  · deg ( E )  , /  ]
[ F ->  · deg ( E )  , %  ]
}

set 136 = GOTO( set 67 , / ) :
{
[ T -> T /  · F  , ,  ]
[ T -> T /  · F  , )  ]
[ T -> T /  · F  , -  ]
[ T -> T /  · F  , +  ]
[ T -> T /  · F  , *  ]
[ T -> T /  · F  , /  ]
[ T -> T /  · F  , %  ]
[ F ->  · V  , ,  ]
[ F ->  · V  , )  ]
[ F ->  · V  , -  ]
[ F ->  · V  , +  ]
[ F ->  · V  , *  ]
[ F ->  · V  , /  ]
[ F ->  · V  , %  ]
[ F ->  · ( E )  , ,  ]
[ F ->  · ( E )  , )  ]
[ F ->  · ( E )  , -  ]
[ F ->  · ( E )  , +  ]
[ F ->  · ( E )  , *  ]
[ F ->  · ( E )  , /  ]
[ F ->  · ( E )  , %  ]
[ F ->  · C  , ,  ]
[ F ->  · C  , )  ]
[ F ->  · C  , -  ]
[ F ->  · C  , +  ]
[ F ->  · C  , *  ]
[ F ->  · C  , /  ]
[ F ->  · C  , %  ]
[ F ->  · value ( E , E )  , ,  ]
[ F ->  · value ( E , E )  , )  ]
[ F ->  · value ( E , E )  , -  ]
[ F ->  · value ( E , E )  , +  ]
[ F ->  · value ( E , E )  , *  ]
[ F ->  · value ( E , E )  , /  ]
[ F ->  · value ( E , E )  , %  ]
[ F ->  · derivative ( E )  , ,  ]
[ F ->  · derivative ( E )  , )  ]
[ F ->  · derivative ( E )  , -  ]
[ F ->  · derivative ( E )  , +  ]
[ F ->  · derivative ( E )  , *  ]
[ F ->  · derivative ( E )  , /  ]
[ F ->  · derivative ( E )  , %  ]
[ F ->  · coeff ( E , E )  , ,  ]
[ F ->  · coeff ( E , E )  , )  ]
[ F ->  · coeff ( E , E )  , -  ]
[ F ->  · coeff ( E , E )  , +  ]
[ F ->  · coeff ( E , E )  , *  ]
[ F ->  · coeff ( E , E )  , /  ]
[ F ->  · coeff ( E , E )  , %  ]
[ F ->  · deg ( E )  , ,  ]
[ F ->  · deg ( E )  , )  ]
[ F ->  · deg ( E )  , -  ]
[ F ->  · deg ( E )  , +  ]
[ F ->  · deg ( E )  , *  ]
[ F ->  · deg ( E )  , /  ]
[ F ->  · deg ( E )  , %  ]
}

set 137 = GOTO( set 69 , ( ) :
{
[ E ->  · E - T  , ,  ]
[ E ->  · E - T  , -  ]
[ E ->  · E - T  , +  ]
[ E ->  · E + T  , ,  ]
[ E ->  · E + T  , -  ]
[ E ->  · E + T  , +  ]
[ E ->  · T  , ,  ]
[ E ->  · T  , -  ]
[ E ->  · T  , +  ]
[ T ->  · T * F  , ,  ]
[ T ->  · T * F  , -  ]
[ T ->  · T * F  , +  ]
[ T ->  · T * F  , *  ]
[ T ->  · T * F  , /  ]
[ T ->  · T * F  , %  ]
[ T ->  · T / F  , ,  ]
[ T ->  · T / F  , -  ]
[ T ->  · T / F  , +  ]
[ T ->  · T / F  , *  ]
[ T ->  · T / F  , /  ]
[ T ->  · T / F  , %  ]
[ T ->  · T % F  , ,  ]
[ T ->  · T % F  , -  ]
[ T ->  · T % F  , +  ]
[ T ->  · T % F  , *  ]
[ T ->  · T % F  , /  ]
[ T ->  · T % F  , %  ]
[ T ->  · F  , ,  ]
[ T ->  · F  , -  ]
[ T ->  · F  , +  ]
[ T ->  · F  , *  ]
[ T ->  · F  , /  ]
[ T ->  · F  , %  ]
[ F ->  · V  , ,  ]
[ F ->  · V  , -  ]
[ F ->  · V  , +  ]
[ F ->  · V  , *  ]
[ F ->  · V  , /  ]
[ F ->  · V  , %  ]
[ F ->  · ( E )  , ,  ]
[ F ->  · ( E )  , -  ]
[ F ->  · ( E )  , +  ]
[ F ->  · ( E )  , *  ]
[ F ->  · ( E )  , /  ]
[ F ->  · ( E )  , %  ]
[ F ->  · C  , ,  ]
[ F ->  · C  , -  ]
[ F ->  · C  , +  ]
[ F ->  · C  , *  ]
[ F ->  · C  , /  ]
[ F ->  · C  , %  ]
[ F ->  · value ( E , E )  , ,  ]
[ F ->  · value ( E , E )  , -  ]
[ F ->  · value ( E , E )  , +  ]
[ F ->  · value ( E , E )  , *  ]
[ F ->  · value ( E , E )  , /  ]
[ F ->  · value ( E , E )  , %  ]
[ F ->  · derivative ( E )  , ,  ]
[ F ->  · derivative ( E )  , -  ]
[ F ->  · derivative ( E )  , +  ]
[ F ->  · derivative ( E )  , *  ]
[ F ->  · derivative ( E )  , /  ]
[ F ->  · derivative ( E )  , %  ]
[ F ->  · coeff ( E , E )  , ,  ]
[ F ->  · coeff ( E , E )  , -  ]
[ F ->  · coeff ( E , E )  , +  ]
[ F ->  · coeff ( E , E )  , *  ]
[ F ->  · coeff ( E , E )  , /  ]
[ F ->  · coeff ( E , E )  , %  ]
[ F ->  · deg ( E )  , ,  ]
[ F ->  · deg ( E )  , -  ]
[ F ->  · deg ( E )  , +  ]
[ F ->  · deg ( E )  , *  ]
[ F ->  · deg ( E )  , /  ]
[ F ->  · deg ( E )  , %  ]
[ F -> coeff (  · E , E )  , ,  ]
[ F -> coeff (  · E , E )  , )  ]
[ F -> coeff (  · E , E )  , -  ]
[ F -> coeff (  · E , E )  , +  ]
[ F -> coeff (  · E , E )  , *  ]
[ F -> coeff (  · E , E )  , /  ]
[ F -> coeff (  · E , E )  , %  ]
}

set 138 = GOTO( set 70 , ( ) :
{
[ E ->  · E - T  , )  ]
[ E ->  · E - T  , -  ]
[ E ->  · E - T  , +  ]
[ E ->  · E + T  , )  ]
[ E ->  · E + T  , -  ]
[ E ->  · E + T  , +  ]
[ E ->  · T  , )  ]
[ E ->  · T  , -  ]
[ E ->  · T  , +  ]
[ T ->  · T * F  , )  ]
[ T ->  · T * F  , -  ]
[ T ->  · T * F  , +  ]
[ T ->  · T * F  , *  ]
[ T ->  · T * F  , /  ]
[ T ->  · T * F  , %  ]
[ T ->  · T / F  , )  ]
[ T ->  · T / F  , -  ]
[ T ->  · T / F  , +  ]
[ T ->  · T / F  , *  ]
[ T ->  · T / F  , /  ]
[ T ->  · T / F  , %  ]
[ T ->  · T % F  , )  ]
[ T ->  · T % F  , -  ]
[ T ->  · T % F  , +  ]
[ T ->  · T % F  , *  ]
[ T ->  · T % F  , /  ]
[ T ->  · T % F  , %  ]
[ T ->  · F  , )  ]
[ T ->  · F  , -  ]
[ T ->  · F  , +  ]
[ T ->  · F  , *  ]
[ T ->  · F  , /  ]
[ T ->  · F  , %  ]
[ F ->  · V  , )  ]
[ F ->  · V  , -  ]
[ F ->  · V  , +  ]
[ F ->  · V  , *  ]
[ F ->  · V  , /  ]
[ F ->  · V  , %  ]
[ F ->  · ( E )  , )  ]
[ F ->  · ( E )  , -  ]
[ F ->  · ( E )  , +  ]
[ F ->  · ( E )  , *  ]
[ F ->  · ( E )  , /  ]
[ F ->  · ( E )  , %  ]
[ F ->  · C  , )  ]
[ F ->  · C  , -  ]
[ F ->  · C  , +  ]
[ F ->  · C  , *  ]
[ F ->  · C  , /  ]
[ F ->  · C  , %  ]
[ F ->  · value ( E , E )  , )  ]
[ F ->  · value ( E , E )  , -  ]
[ F ->  · value ( E , E )  , +  ]
[ F ->  · value ( E , E )  , *  ]
[ F ->  · value ( E , E )  , /  ]
[ F ->  · value ( E , E )  , %  ]
[ F ->  · derivative ( E )  , )  ]
[ F ->  · derivative ( E )  , -  ]
[ F ->  · derivative ( E )  , +  ]
[ F ->  · derivative ( E )  , *  ]
[ F ->  · derivative ( E )  , /  ]
[ F ->  · derivative ( E )  , %  ]
[ F ->  · coeff ( E , E )  , )  ]
[ F ->  · coeff ( E , E )  , -  ]
[ F ->  · coeff ( E , E )  , +  ]
[ F ->  · coeff ( E , E )  , *  ]
[ F ->  · coeff ( E , E )  , /  ]
[ F ->  · coeff ( E , E )  , %  ]
[ F ->  · deg ( E )  , )  ]
[ F ->  · deg ( E )  , -  ]
[ F ->  · deg ( E )  , +  ]
[ F ->  · deg ( E )  , *  ]
[ F ->  · deg ( E )  , /  ]
[ F ->  · deg ( E )  , %  ]
[ F -> deg (  · E )  , ,  ]
[ F -> deg (  · E )  , )  ]
[ F -> deg (  · E )  , -  ]
[ F -> deg (  · E )  , +  ]
[ F -> deg (  · E )  , *  ]
[ F -> deg (  · E )  , /  ]
[ F -> deg (  · E )  , %  ]
}

set 139 = GOTO( set 71 , ( ) :
{
[ E ->  · E - T  , )  ]
[ E ->  · E - T  , -  ]
[ E ->  · E - T  , +  ]
[ E ->  · E + T  , )  ]
[ E ->  · E + T  , -  ]
[ E ->  · E + T  , +  ]
[ E ->  · T  , )  ]
[ E ->  · T  , -  ]
[ E ->  · T  , +  ]
[ T ->  · T * F  , )  ]
[ T ->  · T * F  , -  ]
[ T ->  · T * F  , +  ]
[ T ->  · T * F  , *  ]
[ T ->  · T * F  , /  ]
[ T ->  · T * F  , %  ]
[ T ->  · T / F  , )  ]
[ T ->  · T / F  , -  ]
[ T ->  · T / F  , +  ]
[ T ->  · T / F  , *  ]
[ T ->  · T / F  , /  ]
[ T ->  · T / F  , %  ]
[ T ->  · T % F  , )  ]
[ T ->  · T % F  , -  ]
[ T ->  · T % F  , +  ]
[ T ->  · T % F  , *  ]
[ T ->  · T % F  , /  ]
[ T ->  · T % F  , %  ]
[ T ->  · F  , )  ]
[ T ->  · F  , -  ]
[ T ->  · F  , +  ]
[ T ->  · F  , *  ]
[ T ->  · F  , /  ]
[ T ->  · F  , %  ]
[ F ->  · V  , )  ]
[ F ->  · V  , -  ]
[ F ->  · V  , +  ]
[ F ->  · V  , *  ]
[ F ->  · V  , /  ]
[ F ->  · V  , %  ]
[ F ->  · ( E )  , )  ]
[ F ->  · ( E )  , -  ]
[ F ->  · ( E )  , +  ]
[ F ->  · ( E )  , *  ]
[ F ->  · ( E )  , /  ]
[ F ->  · ( E )  , %  ]
[ F ->  · C  , )  ]
[ F ->  · C  , -  ]
[ F ->  · C  , +  ]
[ F ->  · C  , *  ]
[ F ->  · C  , /  ]
[ F ->  · C  , %  ]
[ F ->  · value ( E , E )  , )  ]
[ F ->  · value ( E , E )  , -  ]
[ F ->  · value ( E , E )  , +  ]
[ F ->  · value ( E , E )  , *  ]
[ F ->  · value ( E , E )  , /  ]
[ F ->  · value ( E , E )  , %  ]
[ F ->  · derivative ( E )  , )  ]
[ F ->  · derivative ( E )  , -  ]
[ F ->  · derivative ( E )  , +  ]
[ F ->  · derivative ( E )  , *  ]
[ F ->  · derivative ( E )  , /  ]
[ F ->  · derivative ( E )  , %  ]
[ F ->  · coeff ( E , E )  , )  ]
[ F ->  · coeff ( E , E )  , -  ]
[ F ->  · coeff ( E , E )  , +  ]
[ F ->  · coeff ( E , E )  , *  ]
[ F ->  · coeff ( E , E )  , /  ]
[ F ->  · coeff ( E , E )  , %  ]
[ F ->  · deg ( E )  , )  ]
[ F ->  · deg ( E )  , -  ]
[ F ->  · deg ( E )  , +  ]
[ F ->  · deg ( E )  , *  ]
[ F ->  · deg ( E )  , /  ]
[ F ->  · deg ( E )  , %  ]
[ F -> derivative (  · E )  , ,  ]
[ F -> derivative (  · E )  , )  ]
[ F -> derivative (  · E )  , -  ]
[ F -> derivative (  · E )  , +  ]
[ F -> derivative (  · E )  , *  ]
[ F -> derivative (  · E )  , /  ]
[ F -> derivative (  · E )  , %  ]
}

set 140 = GOTO( set 72 , ( ) :
{
[ E ->  · E - T  , ,  ]
[ E ->  · E - T  , -  ]
[ E ->  · E - T  , +  ]
[ E ->  · E + T  , ,  ]
[ E ->  · E + T  , -  ]
[ E ->  · E + T  , +  ]
[ E ->  · T  , ,  ]
[ E ->  · T  , -  ]
[ E ->  · T  , +  ]
[ T ->  · T * F  , ,  ]
[ T ->  · T * F  , -  ]
[ T ->  · T * F  , +  ]
[ T ->  · T * F  , *  ]
[ T ->  · T * F  , /  ]
[ T ->  · T * F  , %  ]
[ T ->  · T / F  , ,  ]
[ T ->  · T / F  , -  ]
[ T ->  · T / F  , +  ]
[ T ->  · T / F  , *  ]
[ T ->  · T / F  , /  ]
[ T ->  · T / F  , %  ]
[ T ->  · T % F  , ,  ]
[ T ->  · T % F  , -  ]
[ T ->  · T % F  , +  ]
[ T ->  · T % F  , *  ]
[ T ->  · T % F  , /  ]
[ T ->  · T % F  , %  ]
[ T ->  · F  , ,  ]
[ T ->  · F  , -  ]
[ T ->  · F  , +  ]
[ T ->  · F  , *  ]
[ T ->  · F  , /  ]
[ T ->  · F  , %  ]
[ F ->  · V  , ,  ]
[ F ->  · V  , -  ]
[ F ->  · V  , +  ]
[ F ->  · V  , *  ]
[ F ->  · V  , /  ]
[ F ->  · V  , %  ]
[ F ->  · ( E )  , ,  ]
[ F ->  · ( E )  , -  ]
[ F ->  · ( E )  , +  ]
[ F ->  · ( E )  , *  ]
[ F ->  · ( E )  , /  ]
[ F ->  · ( E )  , %  ]
[ F ->  · C  , ,  ]
[ F ->  · C  , -  ]
[ F ->  · C  , +  ]
[ F ->  · C  , *  ]
[ F ->  · C  , /  ]
[ F ->  · C  , %  ]
[ F ->  · value ( E , E )  , ,  ]
[ F ->  · value ( E , E )  , -  ]
[ F ->  · value ( E , E )  , +  ]
[ F ->  · value ( E , E )  , *  ]
[ F ->  · value ( E , E )  , /  ]
[ F ->  · value ( E , E )  , %  ]
[ F ->  · derivative ( E )  , ,  ]
[ F ->  · derivative ( E )  , -  ]
[ F ->  · derivative ( E )  , +  ]
[ F ->  · derivative ( E )  , *  ]
[ F ->  · derivative ( E )  , /  ]
[ F ->  · derivative ( E )  , %  ]
[ F ->  · coeff ( E , E )  , ,  ]
[ F ->  · coeff ( E , E )  , -  ]
[ F ->  · coeff ( E , E )  , +  ]
[ F ->  · coeff ( E , E )  , *  ]
[ F ->  · coeff ( E , E )  , /  ]
[ F ->  · coeff ( E , E )  , %  ]
[ F ->  · deg ( E )  , ,  ]
[ F ->  · deg ( E )  , -  ]
[ F ->  · deg ( E )  , +  ]
[ F ->  · deg ( E )  , *  ]
[ F ->  · deg ( E )  , /  ]
[ F ->  · deg ( E )  , %  ]
[ F -> value (  · E , E )  , ,  ]
[ F -> value (  · E , E )  , )  ]
[ F -> value (  · E , E )  , -  ]
[ F -> value (  · E , E )  , +  ]
[ F -> value (  · E , E )  , *  ]
[ F -> value (  · E , E )  , /  ]
[ F -> value (  · E , E )  , %  ]
}

set 141 = GOTO( set 73 , ) ) :
{
[ <op> -> switch ( E )  · <switch_body> end switch ;  ,  ]
[ <op> -> switch ( E )  · <switch_body> end switch ;  , ;  ]
[ <op> -> switch ( E )  · <switch_body> end switch ;  , V  ]
[ <op> -> switch ( E )  · <switch_body> end switch ;  , :  ]
[ <op> -> switch ( E )  · <switch_body> end switch ;  , let  ]
[ <op> -> switch ( E )  · <switch_body> end switch ;  , if  ]
[ <op> -> switch ( E )  · <switch_body> end switch ;  , goto  ]
[ <op> -> switch ( E )  · <switch_body> end switch ;  , load  ]
[ <op> -> switch ( E )  · <switch_body> end switch ;  , put  ]
[ <op> -> switch ( E )  · <switch_body> end switch ;  , switch  ]
[ <op> -> switch ( E )  · <switch_body> end switch ;  , error  ]
[ <op> -> switch ( E )  · <switch_body> end switch ;  , comment  ]
[ <switch_body> ->  · <list_case> <default>  , end  ]
[ <list_case> ->  ·  , end  ]
[ <list_case> ->  ·  , default  ]
[ <list_case> ->  · case C : <pr> <break> <list_case>  , end  ]
[ <list_case> ->  · case C : <pr> <break> <list_case>  , default  ]
}

set 142 = GOTO( set 75 , ; ) :
{
[ <op> -> V <listV> : TYPE ;  ·  ,  ]
[ <op> -> V <listV> : TYPE ;  ·  , ;  ]
[ <op> -> V <listV> : TYPE ;  ·  , V  ]
[ <op> -> V <listV> : TYPE ;  ·  , :  ]
[ <op> -> V <listV> : TYPE ;  ·  , let  ]
[ <op> -> V <listV> : TYPE ;  ·  , if  ]
[ <op> -> V <listV> : TYPE ;  ·  , goto  ]
[ <op> -> V <listV> : TYPE ;  ·  , load  ]
[ <op> -> V <listV> : TYPE ;  ·  , put  ]
[ <op> -> V <listV> : TYPE ;  ·  , switch  ]
[ <op> -> V <listV> : TYPE ;  ·  , error  ]
[ <op> -> V <listV> : TYPE ;  ·  , comment  ]
}

set 143 = GOTO( set 76 , ( ) :
{
[ E ->  · E - T  , )  ]
[ E ->  · E - T  , -  ]
[ E ->  · E - T  , +  ]
[ E ->  · E + T  , )  ]
[ E ->  · E + T  , -  ]
[ E ->  · E + T  , +  ]
[ E ->  · T  , )  ]
[ E ->  · T  , -  ]
[ E ->  · T  , +  ]
[ T ->  · T * F  , )  ]
[ T ->  · T * F  , -  ]
[ T ->  · T * F  , +  ]
[ T ->  · T * F  , *  ]
[ T ->  · T * F  , /  ]
[ T ->  · T * F  , %  ]
[ T ->  · T / F  , )  ]
[ T ->  · T / F  , -  ]
[ T ->  · T / F  , +  ]
[ T ->  · T / F  , *  ]
[ T ->  · T / F  , /  ]
[ T ->  · T / F  , %  ]
[ T ->  · T % F  , )  ]
[ T ->  · T % F  , -  ]
[ T ->  · T % F  , +  ]
[ T ->  · T % F  , *  ]
[ T ->  · T % F  , /  ]
[ T ->  · T % F  , %  ]
[ T ->  · F  , )  ]
[ T ->  · F  , -  ]
[ T ->  · F  , +  ]
[ T ->  · F  , *  ]
[ T ->  · F  , /  ]
[ T ->  · F  , %  ]
[ F ->  · V  , )  ]
[ F ->  · V  , -  ]
[ F ->  · V  , +  ]
[ F ->  · V  , *  ]
[ F ->  · V  , /  ]
[ F ->  · V  , %  ]
[ F ->  · ( E )  , )  ]
[ F ->  · ( E )  , -  ]
[ F ->  · ( E )  , +  ]
[ F ->  · ( E )  , *  ]
[ F ->  · ( E )  , /  ]
[ F ->  · ( E )  , %  ]
[ F ->  · C  , )  ]
[ F ->  · C  , -  ]
[ F ->  · C  , +  ]
[ F ->  · C  , *  ]
[ F ->  · C  , /  ]
[ F ->  · C  , %  ]
[ F ->  · value ( E , E )  , )  ]
[ F ->  · value ( E , E )  , -  ]
[ F ->  · value ( E , E )  , +  ]
[ F ->  · value ( E , E )  , *  ]
[ F ->  · value ( E , E )  , /  ]
[ F ->  · value ( E , E )  , %  ]
[ F ->  · derivative ( E )  , )  ]
[ F ->  · derivative ( E )  , -  ]
[ F ->  · derivative ( E )  , +  ]
[ F ->  · derivative ( E )  , *  ]
[ F ->  · derivative ( E )  , /  ]
[ F ->  · derivative ( E )  , %  ]
[ F ->  · coeff ( E , E )  , )  ]
[ F ->  · coeff ( E , E )  , -  ]
[ F ->  · coeff ( E , E )  , +  ]
[ F ->  · coeff ( E , E )  , *  ]
[ F ->  · coeff ( E , E )  , /  ]
[ F ->  · coeff ( E , E )  , %  ]
[ F ->  · deg ( E )  , )  ]
[ F ->  · deg ( E )  , -  ]
[ F ->  · deg ( E )  , +  ]
[ F ->  · deg ( E )  , *  ]
[ F ->  · deg ( E )  , /  ]
[ F ->  · deg ( E )  , %  ]
[ F -> (  · E )  , to  ]
[ F -> (  · E )  , -  ]
[ F -> (  · E )  , +  ]
[ F -> (  · E )  , *  ]
[ F -> (  · E )  , /  ]
[ F -> (  · E )  , %  ]
}

set 144 = GOTO( set 76 , C ) :
{
[ F -> C  ·  , to  ]
[ F -> C  ·  , -  ]
[ F -> C  ·  , +  ]
[ F -> C  ·  , *  ]
[ F -> C  ·  , /  ]
[ F -> C  ·  , %  ]
}

set 145 = GOTO( set 76 , E ) :
{
[ <op> -> V for V = E  · to E <step> <pr> next V  ,  ]
[ <op> -> V for V = E  · to E <step> <pr> next V  , ;  ]
[ <op> -> V for V = E  · to E <step> <pr> next V  , V  ]
[ <op> -> V for V = E  · to E <step> <pr> next V  , :  ]
[ <op> -> V for V = E  · to E <step> <pr> next V  , let  ]
[ <op> -> V for V = E  · to E <step> <pr> next V  , if  ]
[ <op> -> V for V = E  · to E <step> <pr> next V  , goto  ]
[ <op> -> V for V = E  · to E <step> <pr> next V  , load  ]
[ <op> -> V for V = E  · to E <step> <pr> next V  , put  ]
[ <op> -> V for V = E  · to E <step> <pr> next V  , switch  ]
[ <op> -> V for V = E  · to E <step> <pr> next V  , error  ]
[ <op> -> V for V = E  · to E <step> <pr> next V  , comment  ]
[ E -> E  · - T  , to  ]
[ E -> E  · - T  , -  ]
[ E -> E  · - T  , +  ]
[ E -> E  · + T  , to  ]
[ E -> E  · + T  , -  ]
[ E -> E  · + T  , +  ]
}

set 146 = GOTO( set 76 , F ) :
{
[ T -> F  ·  , to  ]
[ T -> F  ·  , -  ]
[ T -> F  ·  , +  ]
[ T -> F  ·  , *  ]
[ T -> F  ·  , /  ]
[ T -> F  ·  , %  ]
}

set 147 = GOTO( set 76 , T ) :
{
[ E -> T  ·  , to  ]
[ E -> T  ·  , -  ]
[ E -> T  ·  , +  ]
[ T -> T  · * F  , to  ]
[ T -> T  · * F  , -  ]
[ T -> T  · * F  , +  ]
[ T -> T  · * F  , *  ]
[ T -> T  · * F  , /  ]
[ T -> T  · * F  , %  ]
[ T -> T  · / F  , to  ]
[ T -> T  · / F  , -  ]
[ T -> T  · / F  , +  ]
[ T -> T  · / F  , *  ]
[ T -> T  · / F  , /  ]
[ T -> T  · / F  , %  ]
[ T -> T  · % F  , to  ]
[ T -> T  · % F  , -  ]
[ T -> T  · % F  , +  ]
[ T -> T  · % F  , *  ]
[ T -> T  · % F  , /  ]
[ T -> T  · % F  , %  ]
}

set 148 = GOTO( set 76 , V ) :
{
[ F -> V  ·  , to  ]
[ F -> V  ·  , -  ]
[ F -> V  ·  , +  ]
[ F -> V  ·  , *  ]
[ F -> V  ·  , /  ]
[ F -> V  ·  , %  ]
}

set 149 = GOTO( set 76 , coeff ) :
{
[ F -> coeff  · ( E , E )  , to  ]
[ F -> coeff  · ( E , E )  , -  ]
[ F -> coeff  · ( E , E )  , +  ]
[ F -> coeff  · ( E , E )  , *  ]
[ F -> coeff  · ( E , E )  , /  ]
[ F -> coeff  · ( E , E )  , %  ]
}

set 150 = GOTO( set 76 , deg ) :
{
[ F -> deg  · ( E )  , to  ]
[ F -> deg  · ( E )  , -  ]
[ F -> deg  · ( E )  , +  ]
[ F -> deg  · ( E )  , *  ]
[ F -> deg  · ( E )  , /  ]
[ F -> deg  · ( E )  , %  ]
}

set 151 = GOTO( set 76 , derivative ) :
{
[ F -> derivative  · ( E )  , to  ]
[ F -> derivative  · ( E )  , -  ]
[ F -> derivative  · ( E )  , +  ]
[ F -> derivative  · ( E )  , *  ]
[ F -> derivative  · ( E )  , /  ]
[ F -> derivative  · ( E )  , %  ]
}

set 152 = GOTO( set 76 , value ) :
{
[ F -> value  · ( E , E )  , to  ]
[ F -> value  · ( E , E )  , -  ]
[ F -> value  · ( E , E )  , +  ]
[ F -> value  · ( E , E )  , *  ]
[ F -> value  · ( E , E )  , /  ]
[ F -> value  · ( E , E )  , %  ]
}

set 153 = GOTO( set 77 , ) ) :
{
[ F -> ( E )  ·  , )  ]
[ F -> ( E )  ·  , -  ]
[ F -> ( E )  ·  , +  ]
[ F -> ( E )  ·  , *  ]
[ F -> ( E )  ·  , /  ]
[ F -> ( E )  ·  , %  ]
}

set 154 = GOTO( set 79 , T ) :
{
[ E -> E + T  ·  , )  ]
[ E -> E + T  ·  , -  ]
[ E -> E + T  ·  , +  ]
[ T -> T  · * F  , )  ]
[ T -> T  · * F  , -  ]
[ T -> T  · * F  , +  ]
[ T -> T  · * F  , *  ]
[ T -> T  · * F  , /  ]
[ T -> T  · * F  , %  ]
[ T -> T  · / F  , )  ]
[ T -> T  · / F  , -  ]
[ T -> T  · / F  , +  ]
[ T -> T  · / F  , *  ]
[ T -> T  · / F  , /  ]
[ T -> T  · / F  , %  ]
[ T -> T  · % F  , )  ]
[ T -> T  · % F  , -  ]
[ T -> T  · % F  , +  ]
[ T -> T  · % F  , *  ]
[ T -> T  · % F  , /  ]
[ T -> T  · % F  , %  ]
}

set 155 = GOTO( set 80 , T ) :
{
[ E -> E - T  ·  , )  ]
[ E -> E - T  ·  , -  ]
[ E -> E - T  ·  , +  ]
[ T -> T  · * F  , )  ]
[ T -> T  · * F  , -  ]
[ T -> T  · * F  , +  ]
[ T -> T  · * F  , *  ]
[ T -> T  · * F  , /  ]
[ T -> T  · * F  , %  ]
[ T -> T  · / F  , )  ]
[ T -> T  · / F  , -  ]
[ T -> T  · / F  , +  ]
[ T -> T  · / F  , *  ]
[ T -> T  · / F  , /  ]
[ T -> T  · / F  , %  ]
[ T -> T  · % F  , )  ]
[ T -> T  · % F  , -  ]
[ T -> T  · % F  , +  ]
[ T -> T  · % F  , *  ]
[ T -> T  · % F  , /  ]
[ T -> T  · % F  , %  ]
}

set 156 = GOTO( set 81 , F ) :
{
[ T -> T % F  ·  , )  ]
[ T -> T % F  ·  , -  ]
[ T -> T % F  ·  , +  ]
[ T -> T % F  ·  , *  ]
[ T -> T % F  ·  , /  ]
[ T -> T % F  ·  , %  ]
}

set 157 = GOTO( set 82 , F ) :
{
[ T -> T * F  ·  , )  ]
[ T -> T * F  ·  , -  ]
[ T -> T * F  ·  , +  ]
[ T -> T * F  ·  , *  ]
[ T -> T * F  ·  , /  ]
[ T -> T * F  ·  , %  ]
}

set 158 = GOTO( set 83 , F ) :
{
[ T -> T / F  ·  , )  ]
[ T -> T / F  ·  , -  ]
[ T -> T / F  ·  , +  ]
[ T -> T / F  ·  , *  ]
[ T -> T / F  ·  , /  ]
[ T -> T / F  ·  , %  ]
}

set 159 = GOTO( set 84 , E ) :
{
[ E -> E  · - T  , ,  ]
[ E -> E  · - T  , -  ]
[ E -> E  · - T  , +  ]
[ E -> E  · + T  , ,  ]
[ E -> E  · + T  , -  ]
[ E -> E  · + T  , +  ]
[ F -> coeff ( E  · , E )  , )  ]
[ F -> coeff ( E  · , E )  , -  ]
[ F -> coeff ( E  · , E )  , +  ]
[ F -> coeff ( E  · , E )  , *  ]
[ F -> coeff ( E  · , E )  , /  ]
[ F -> coeff ( E  · , E )  , %  ]
}

set 160 = GOTO( set 85 , E ) :
{
[ E -> E  · - T  , )  ]
[ E -> E  · - T  , -  ]
[ E -> E  · - T  , +  ]
[ E -> E  · + T  , )  ]
[ E -> E  · + T  , -  ]
[ E -> E  · + T  , +  ]
[ F -> deg ( E  · )  , )  ]
[ F -> deg ( E  · )  , -  ]
[ F -> deg ( E  · )  , +  ]
[ F -> deg ( E  · )  , *  ]
[ F -> deg ( E  · )  , /  ]
[ F -> deg ( E  · )  , %  ]
}

set 161 = GOTO( set 86 , E ) :
{
[ E -> E  · - T  , )  ]
[ E -> E  · - T  , -  ]
[ E -> E  · - T  , +  ]
[ E -> E  · + T  , )  ]
[ E -> E  · + T  , -  ]
[ E -> E  · + T  , +  ]
[ F -> derivative ( E  · )  , )  ]
[ F -> derivative ( E  · )  , -  ]
[ F -> derivative ( E  · )  , +  ]
[ F -> derivative ( E  · )  , *  ]
[ F -> derivative ( E  · )  , /  ]
[ F -> derivative ( E  · )  , %  ]
}

set 162 = GOTO( set 87 , E ) :
{
[ E -> E  · - T  , ,  ]
[ E -> E  · - T  , -  ]
[ E -> E  · - T  , +  ]
[ E -> E  · + T  , ,  ]
[ E -> E  · + T  , -  ]
[ E -> E  · + T  , +  ]
[ F -> value ( E  · , E )  , )  ]
[ F -> value ( E  · , E )  , -  ]
[ F -> value ( E  · , E )  , +  ]
[ F -> value ( E  · , E )  , *  ]
[ F -> value ( E  · , E )  , /  ]
[ F -> value ( E  · , E )  , %  ]
}

set 163 = GOTO( set 88 , <else> ) :
{
[ <op> -> if <test> goto V <else>  · ;  ,  ]
[ <op> -> if <test> goto V <else>  · ;  , ;  ]
[ <op> -> if <test> goto V <else>  · ;  , V  ]
[ <op> -> if <test> goto V <else>  · ;  , :  ]
[ <op> -> if <test> goto V <else>  · ;  , let  ]
[ <op> -> if <test> goto V <else>  · ;  , if  ]
[ <op> -> if <test> goto V <else>  · ;  , goto  ]
[ <op> -> if <test> goto V <else>  · ;  , load  ]
[ <op> -> if <test> goto V <else>  · ;  , put  ]
[ <op> -> if <test> goto V <else>  · ;  , switch  ]
[ <op> -> if <test> goto V <else>  · ;  , error  ]
[ <op> -> if <test> goto V <else>  · ;  , comment  ]
}

set 164 = GOTO( set 88 , else ) :
{
[ <else> -> else  · goto V  , ;  ]
}

set 165 = GOTO( set 91 , E ) :
{
[ E -> E  · - T  , )  ]
[ E -> E  · - T  , -  ]
[ E -> E  · - T  , +  ]
[ E -> E  · + T  , )  ]
[ E -> E  · + T  , -  ]
[ E -> E  · + T  , +  ]
[ F -> ( E  · )  , goto  ]
[ F -> ( E  · )  , -  ]
[ F -> ( E  · )  , +  ]
[ F -> ( E  · )  , *  ]
[ F -> ( E  · )  , /  ]
[ F -> ( E  · )  , %  ]
}

set 166 = GOTO( set 93 , + ) :
{
[ E -> E +  · T  , goto  ]
[ E -> E +  · T  , -  ]
[ E -> E +  · T  , +  ]
[ T ->  · T * F  , goto  ]
[ T ->  · T * F  , -  ]
[ T ->  · T * F  , +  ]
[ T ->  · T * F  , *  ]
[ T ->  · T * F  , /  ]
[ T ->  · T * F  , %  ]
[ T ->  · T / F  , goto  ]
[ T ->  · T / F  , -  ]
[ T ->  · T / F  , +  ]
[ T ->  · T / F  , *  ]
[ T ->  · T / F  , /  ]
[ T ->  · T / F  , %  ]
[ T ->  · T % F  , goto  ]
[ T ->  · T % F  , -  ]
[ T ->  · T % F  , +  ]
[ T ->  · T % F  , *  ]
[ T ->  · T % F  , /  ]
[ T ->  · T % F  , %  ]
[ T ->  · F  , goto  ]
[ T ->  · F  , -  ]
[ T ->  · F  , +  ]
[ T ->  · F  , *  ]
[ T ->  · F  , /  ]
[ T ->  · F  , %  ]
[ F ->  · V  , goto  ]
[ F ->  · V  , -  ]
[ F ->  · V  , +  ]
[ F ->  · V  , *  ]
[ F ->  · V  , /  ]
[ F ->  · V  , %  ]
[ F ->  · ( E )  , goto  ]
[ F ->  · ( E )  , -  ]
[ F ->  · ( E )  , +  ]
[ F ->  · ( E )  , *  ]
[ F ->  · ( E )  , /  ]
[ F ->  · ( E )  , %  ]
[ F ->  · C  , goto  ]
[ F ->  · C  , -  ]
[ F ->  · C  , +  ]
[ F ->  · C  , *  ]
[ F ->  · C  , /  ]
[ F ->  · C  , %  ]
[ F ->  · value ( E , E )  , goto  ]
[ F ->  · value ( E , E )  , -  ]
[ F ->  · value ( E , E )  , +  ]
[ F ->  · value ( E , E )  , *  ]
[ F ->  · value ( E , E )  , /  ]
[ F ->  · value ( E , E )  , %  ]
[ F ->  · derivative ( E )  , goto  ]
[ F ->  · derivative ( E )  , -  ]
[ F ->  · derivative ( E )  , +  ]
[ F ->  · derivative ( E )  , *  ]
[ F ->  · derivative ( E )  , /  ]
[ F ->  · derivative ( E )  , %  ]
[ F ->  · coeff ( E , E )  , goto  ]
[ F ->  · coeff ( E , E )  , -  ]
[ F ->  · coeff ( E , E )  , +  ]
[ F ->  · coeff ( E , E )  , *  ]
[ F ->  · coeff ( E , E )  , /  ]
[ F ->  · coeff ( E , E )  , %  ]
[ F ->  · deg ( E )  , goto  ]
[ F ->  · deg ( E )  , -  ]
[ F ->  · deg ( E )  , +  ]
[ F ->  · deg ( E )  , *  ]
[ F ->  · deg ( E )  , /  ]
[ F ->  · deg ( E )  , %  ]
}

set 167 = GOTO( set 93 , - ) :
{
[ E -> E -  · T  , goto  ]
[ E -> E -  · T  , -  ]
[ E -> E -  · T  , +  ]
[ T ->  · T * F  , goto  ]
[ T ->  · T * F  , -  ]
[ T ->  · T * F  , +  ]
[ T ->  · T * F  , *  ]
[ T ->  · T * F  , /  ]
[ T ->  · T * F  , %  ]
[ T ->  · T / F  , goto  ]
[ T ->  · T / F  , -  ]
[ T ->  · T / F  , +  ]
[ T ->  · T / F  , *  ]
[ T ->  · T / F  , /  ]
[ T ->  · T / F  , %  ]
[ T ->  · T % F  , goto  ]
[ T ->  · T % F  , -  ]
[ T ->  · T % F  , +  ]
[ T ->  · T % F  , *  ]
[ T ->  · T % F  , /  ]
[ T ->  · T % F  , %  ]
[ T ->  · F  , goto  ]
[ T ->  · F  , -  ]
[ T ->  · F  , +  ]
[ T ->  · F  , *  ]
[ T ->  · F  , /  ]
[ T ->  · F  , %  ]
[ F ->  · V  , goto  ]
[ F ->  · V  , -  ]
[ F ->  · V  , +  ]
[ F ->  · V  , *  ]
[ F ->  · V  , /  ]
[ F ->  · V  , %  ]
[ F ->  · ( E )  , goto  ]
[ F ->  · ( E )  , -  ]
[ F ->  · ( E )  , +  ]
[ F ->  · ( E )  , *  ]
[ F ->  · ( E )  , /  ]
[ F ->  · ( E )  , %  ]
[ F ->  · C  , goto  ]
[ F ->  · C  , -  ]
[ F ->  · C  , +  ]
[ F ->  · C  , *  ]
[ F ->  · C  , /  ]
[ F ->  · C  , %  ]
[ F ->  · value ( E , E )  , goto  ]
[ F ->  · value ( E , E )  , -  ]
[ F ->  · value ( E , E )  , +  ]
[ F ->  · value ( E , E )  , *  ]
[ F ->  · value ( E , E )  , /  ]
[ F ->  · value ( E , E )  , %  ]
[ F ->  · derivative ( E )  , goto  ]
[ F ->  · derivative ( E )  , -  ]
[ F ->  · derivative ( E )  , +  ]
[ F ->  · derivative ( E )  , *  ]
[ F ->  · derivative ( E )  , /  ]
[ F ->  · derivative ( E )  , %  ]
[ F ->  · coeff ( E , E )  , goto  ]
[ F ->  · coeff ( E , E )  , -  ]
[ F ->  · coeff ( E , E )  , +  ]
[ F ->  · coeff ( E , E )  , *  ]
[ F ->  · coeff ( E , E )  , /  ]
[ F ->  · coeff ( E , E )  , %  ]
[ F ->  · deg ( E )  , goto  ]
[ F ->  · deg ( E )  , -  ]
[ F ->  · deg ( E )  , +  ]
[ F ->  · deg ( E )  , *  ]
[ F ->  · deg ( E )  , /  ]
[ F ->  · deg ( E )  , %  ]
}

set 168 = GOTO( set 95 , % ) :
{
[ T -> T %  · F  , goto  ]
[ T -> T %  · F  , -  ]
[ T -> T %  · F  , +  ]
[ T -> T %  · F  , *  ]
[ T -> T %  · F  , /  ]
[ T -> T %  · F  , %  ]
[ F ->  · V  , goto  ]
[ F ->  · V  , -  ]
[ F ->  · V  , +  ]
[ F ->  · V  , *  ]
[ F ->  · V  , /  ]
[ F ->  · V  , %  ]
[ F ->  · ( E )  , goto  ]
[ F ->  · ( E )  , -  ]
[ F ->  · ( E )  , +  ]
[ F ->  · ( E )  , *  ]
[ F ->  · ( E )  , /  ]
[ F ->  · ( E )  , %  ]
[ F ->  · C  , goto  ]
[ F ->  · C  , -  ]
[ F ->  · C  , +  ]
[ F ->  · C  , *  ]
[ F ->  · C  , /  ]
[ F ->  · C  , %  ]
[ F ->  · value ( E , E )  , goto  ]
[ F ->  · value ( E , E )  , -  ]
[ F ->  · value ( E , E )  , +  ]
[ F ->  · value ( E , E )  , *  ]
[ F ->  · value ( E , E )  , /  ]
[ F ->  · value ( E , E )  , %  ]
[ F ->  · derivative ( E )  , goto  ]
[ F ->  · derivative ( E )  , -  ]
[ F ->  · derivative ( E )  , +  ]
[ F ->  · derivative ( E )  , *  ]
[ F ->  · derivative ( E )  , /  ]
[ F ->  · derivative ( E )  , %  ]
[ F ->  · coeff ( E , E )  , goto  ]
[ F ->  · coeff ( E , E )  , -  ]
[ F ->  · coeff ( E , E )  , +  ]
[ F ->  · coeff ( E , E )  , *  ]
[ F ->  · coeff ( E , E )  , /  ]
[ F ->  · coeff ( E , E )  , %  ]
[ F ->  · deg ( E )  , goto  ]
[ F ->  · deg ( E )  , -  ]
[ F ->  · deg ( E )  , +  ]
[ F ->  · deg ( E )  , *  ]
[ F ->  · deg ( E )  , /  ]
[ F ->  · deg ( E )  , %  ]
}

set 169 = GOTO( set 95 , * ) :
{
[ T -> T *  · F  , goto  ]
[ T -> T *  · F  , -  ]
[ T -> T *  · F  , +  ]
[ T -> T *  · F  , *  ]
[ T -> T *  · F  , /  ]
[ T -> T *  · F  , %  ]
[ F ->  · V  , goto  ]
[ F ->  · V  , -  ]
[ F ->  · V  , +  ]
[ F ->  · V  , *  ]
[ F ->  · V  , /  ]
[ F ->  · V  , %  ]
[ F ->  · ( E )  , goto  ]
[ F ->  · ( E )  , -  ]
[ F ->  · ( E )  , +  ]
[ F ->  · ( E )  , *  ]
[ F ->  · ( E )  , /  ]
[ F ->  · ( E )  , %  ]
[ F ->  · C  , goto  ]
[ F ->  · C  , -  ]
[ F ->  · C  , +  ]
[ F ->  · C  , *  ]
[ F ->  · C  , /  ]
[ F ->  · C  , %  ]
[ F ->  · value ( E , E )  , goto  ]
[ F ->  · value ( E , E )  , -  ]
[ F ->  · value ( E , E )  , +  ]
[ F ->  · value ( E , E )  , *  ]
[ F ->  · value ( E , E )  , /  ]
[ F ->  · value ( E , E )  , %  ]
[ F ->  · derivative ( E )  , goto  ]
[ F ->  · derivative ( E )  , -  ]
[ F ->  · derivative ( E )  , +  ]
[ F ->  · derivative ( E )  , *  ]
[ F ->  · derivative ( E )  , /  ]
[ F ->  · derivative ( E )  , %  ]
[ F ->  · coeff ( E , E )  , goto  ]
[ F ->  · coeff ( E , E )  , -  ]
[ F ->  · coeff ( E , E )  , +  ]
[ F ->  · coeff ( E , E )  , *  ]
[ F ->  · coeff ( E , E )  , /  ]
[ F ->  · coeff ( E , E )  , %  ]
[ F ->  · deg ( E )  , goto  ]
[ F ->  · deg ( E )  , -  ]
[ F ->  · deg ( E )  , +  ]
[ F ->  · deg ( E )  , *  ]
[ F ->  · deg ( E )  , /  ]
[ F ->  · deg ( E )  , %  ]
}

set 170 = GOTO( set 95 , / ) :
{
[ T -> T /  · F  , goto  ]
[ T -> T /  · F  , -  ]
[ T -> T /  · F  , +  ]
[ T -> T /  · F  , *  ]
[ T -> T /  · F  , /  ]
[ T -> T /  · F  , %  ]
[ F ->  · V  , goto  ]
[ F ->  · V  , -  ]
[ F ->  · V  , +  ]
[ F ->  · V  , *  ]
[ F ->  · V  , /  ]
[ F ->  · V  , %  ]
[ F ->  · ( E )  , goto  ]
[ F ->  · ( E )  , -  ]
[ F ->  · ( E )  , +  ]
[ F ->  · ( E )  , *  ]
[ F ->  · ( E )  , /  ]
[ F ->  · ( E )  , %  ]
[ F ->  · C  , goto  ]
[ F ->  · C  , -  ]
[ F ->  · C  , +  ]
[ F ->  · C  , *  ]
[ F ->  · C  , /  ]
[ F ->  · C  , %  ]
[ F ->  · value ( E , E )  , goto  ]
[ F ->  · value ( E , E )  , -  ]
[ F ->  · value ( E , E )  , +  ]
[ F ->  · value ( E , E )  , *  ]
[ F ->  · value ( E , E )  , /  ]
[ F ->  · value ( E , E )  , %  ]
[ F ->  · derivative ( E )  , goto  ]
[ F ->  · derivative ( E )  , -  ]
[ F ->  · derivative ( E )  , +  ]
[ F ->  · derivative ( E )  , *  ]
[ F ->  · derivative ( E )  , /  ]
[ F ->  · derivative ( E )  , %  ]
[ F ->  · coeff ( E , E )  , goto  ]
[ F ->  · coeff ( E , E )  , -  ]
[ F ->  · coeff ( E , E )  , +  ]
[ F ->  · coeff ( E , E )  , *  ]
[ F ->  · coeff ( E , E )  , /  ]
[ F ->  · coeff ( E , E )  , %  ]
[ F ->  · deg ( E )  , goto  ]
[ F ->  · deg ( E )  , -  ]
[ F ->  · deg ( E )  , +  ]
[ F ->  · deg ( E )  , *  ]
[ F ->  · deg ( E )  , /  ]
[ F ->  · deg ( E )  , %  ]
}

set 171 = GOTO( set 97 , ( ) :
{
[ E ->  · E - T  , ,  ]
[ E ->  · E - T  , -  ]
[ E ->  · E - T  , +  ]
[ E ->  · E + T  , ,  ]
[ E ->  · E + T  , -  ]
[ E ->  · E + T  , +  ]
[ E ->  · T  , ,  ]
[ E ->  · T  , -  ]
[ E ->  · T  , +  ]
[ T ->  · T * F  , ,  ]
[ T ->  · T * F  , -  ]
[ T ->  · T * F  , +  ]
[ T ->  · T * F  , *  ]
[ T ->  · T * F  , /  ]
[ T ->  · T * F  , %  ]
[ T ->  · T / F  , ,  ]
[ T ->  · T / F  , -  ]
[ T ->  · T / F  , +  ]
[ T ->  · T / F  , *  ]
[ T ->  · T / F  , /  ]
[ T ->  · T / F  , %  ]
[ T ->  · T % F  , ,  ]
[ T ->  · T % F  , -  ]
[ T ->  · T % F  , +  ]
[ T ->  · T % F  , *  ]
[ T ->  · T % F  , /  ]
[ T ->  · T % F  , %  ]
[ T ->  · F  , ,  ]
[ T ->  · F  , -  ]
[ T ->  · F  , +  ]
[ T ->  · F  , *  ]
[ T ->  · F  , /  ]
[ T ->  · F  , %  ]
[ F ->  · V  , ,  ]
[ F ->  · V  , -  ]
[ F ->  · V  , +  ]
[ F ->  · V  , *  ]
[ F ->  · V  , /  ]
[ F ->  · V  , %  ]
[ F ->  · ( E )  , ,  ]
[ F ->  · ( E )  , -  ]
[ F ->  · ( E )  , +  ]
[ F ->  · ( E )  , *  ]
[ F ->  · ( E )  , /  ]
[ F ->  · ( E )  , %  ]
[ F ->  · C  , ,  ]
[ F ->  · C  , -  ]
[ F ->  · C  , +  ]
[ F ->  · C  , *  ]
[ F ->  · C  , /  ]
[ F ->  · C  , %  ]
[ F ->  · value ( E , E )  , ,  ]
[ F ->  · value ( E , E )  , -  ]
[ F ->  · value ( E , E )  , +  ]
[ F ->  · value ( E , E )  , *  ]
[ F ->  · value ( E , E )  , /  ]
[ F ->  · value ( E , E )  , %  ]
[ F ->  · derivative ( E )  , ,  ]
[ F ->  · derivative ( E )  , -  ]
[ F ->  · derivative ( E )  , +  ]
[ F ->  · derivative ( E )  , *  ]
[ F ->  · derivative ( E )  , /  ]
[ F ->  · derivative ( E )  , %  ]
[ F ->  · coeff ( E , E )  , ,  ]
[ F ->  · coeff ( E , E )  , -  ]
[ F ->  · coeff ( E , E )  , +  ]
[ F ->  · coeff ( E , E )  , *  ]
[ F ->  · coeff ( E , E )  , /  ]
[ F ->  · coeff ( E , E )  , %  ]
[ F ->  · deg ( E )  , ,  ]
[ F ->  · deg ( E )  , -  ]
[ F ->  · deg ( E )  , +  ]
[ F ->  · deg ( E )  , *  ]
[ F ->  · deg ( E )  , /  ]
[ F ->  · deg ( E )  , %  ]
[ F -> coeff (  · E , E )  , goto  ]
[ F -> coeff (  · E , E )  , -  ]
[ F -> coeff (  · E , E )  , +  ]
[ F -> coeff (  · E , E )  , *  ]
[ F -> coeff (  · E , E )  , /  ]
[ F -> coeff (  · E , E )  , %  ]
}

set 172 = GOTO( set 98 , ( ) :
{
[ E ->  · E - T  , )  ]
[ E ->  · E - T  , -  ]
[ E ->  · E - T  , +  ]
[ E ->  · E + T  , )  ]
[ E ->  · E + T  , -  ]
[ E ->  · E + T  , +  ]
[ E ->  · T  , )  ]
[ E ->  · T  , -  ]
[ E ->  · T  , +  ]
[ T ->  · T * F  , )  ]
[ T ->  · T * F  , -  ]
[ T ->  · T * F  , +  ]
[ T ->  · T * F  , *  ]
[ T ->  · T * F  , /  ]
[ T ->  · T * F  , %  ]
[ T ->  · T / F  , )  ]
[ T ->  · T / F  , -  ]
[ T ->  · T / F  , +  ]
[ T ->  · T / F  , *  ]
[ T ->  · T / F  , /  ]
[ T ->  · T / F  , %  ]
[ T ->  · T % F  , )  ]
[ T ->  · T % F  , -  ]
[ T ->  · T % F  , +  ]
[ T ->  · T % F  , *  ]
[ T ->  · T % F  , /  ]
[ T ->  · T % F  , %  ]
[ T ->  · F  , )  ]
[ T ->  · F  , -  ]
[ T ->  · F  , +  ]
[ T ->  · F  , *  ]
[ T ->  · F  , /  ]
[ T ->  · F  , %  ]
[ F ->  · V  , )  ]
[ F ->  · V  , -  ]
[ F ->  · V  , +  ]
[ F ->  · V  , *  ]
[ F ->  · V  , /  ]
[ F ->  · V  , %  ]
[ F ->  · ( E )  , )  ]
[ F ->  · ( E )  , -  ]
[ F ->  · ( E )  , +  ]
[ F ->  · ( E )  , *  ]
[ F ->  · ( E )  , /  ]
[ F ->  · ( E )  , %  ]
[ F ->  · C  , )  ]
[ F ->  · C  , -  ]
[ F ->  · C  , +  ]
[ F ->  · C  , *  ]
[ F ->  · C  , /  ]
[ F ->  · C  , %  ]
[ F ->  · value ( E , E )  , )  ]
[ F ->  · value ( E , E )  , -  ]
[ F ->  · value ( E , E )  , +  ]
[ F ->  · value ( E , E )  , *  ]
[ F ->  · value ( E , E )  , /  ]
[ F ->  · value ( E , E )  , %  ]
[ F ->  · derivative ( E )  , )  ]
[ F ->  · derivative ( E )  , -  ]
[ F ->  · derivative ( E )  , +  ]
[ F ->  · derivative ( E )  , *  ]
[ F ->  · derivative ( E )  , /  ]
[ F ->  · derivative ( E )  , %  ]
[ F ->  · coeff ( E , E )  , )  ]
[ F ->  · coeff ( E , E )  , -  ]
[ F ->  · coeff ( E , E )  , +  ]
[ F ->  · coeff ( E , E )  , *  ]
[ F ->  · coeff ( E , E )  , /  ]
[ F ->  · coeff ( E , E )  , %  ]
[ F ->  · deg ( E )  , )  ]
[ F ->  · deg ( E )  , -  ]
[ F ->  · deg ( E )  , +  ]
[ F ->  · deg ( E )  , *  ]
[ F ->  · deg ( E )  , /  ]
[ F ->  · deg ( E )  , %  ]
[ F -> deg (  · E )  , goto  ]
[ F -> deg (  · E )  , -  ]
[ F -> deg (  · E )  , +  ]
[ F -> deg (  · E )  , *  ]
[ F -> deg (  · E )  , /  ]
[ F -> deg (  · E )  , %  ]
}

set 173 = GOTO( set 99 , ( ) :
{
[ E ->  · E - T  , )  ]
[ E ->  · E - T  , -  ]
[ E ->  · E - T  , +  ]
[ E ->  · E + T  , )  ]
[ E ->  · E + T  , -  ]
[ E ->  · E + T  , +  ]
[ E ->  · T  , )  ]
[ E ->  · T  , -  ]
[ E ->  · T  , +  ]
[ T ->  · T * F  , )  ]
[ T ->  · T * F  , -  ]
[ T ->  · T * F  , +  ]
[ T ->  · T * F  , *  ]
[ T ->  · T * F  , /  ]
[ T ->  · T * F  , %  ]
[ T ->  · T / F  , )  ]
[ T ->  · T / F  , -  ]
[ T ->  · T / F  , +  ]
[ T ->  · T / F  , *  ]
[ T ->  · T / F  , /  ]
[ T ->  · T / F  , %  ]
[ T ->  · T % F  , )  ]
[ T ->  · T % F  , -  ]
[ T ->  · T % F  , +  ]
[ T ->  · T % F  , *  ]
[ T ->  · T % F  , /  ]
[ T ->  · T % F  , %  ]
[ T ->  · F  , )  ]
[ T ->  · F  , -  ]
[ T ->  · F  , +  ]
[ T ->  · F  , *  ]
[ T ->  · F  , /  ]
[ T ->  · F  , %  ]
[ F ->  · V  , )  ]
[ F ->  · V  , -  ]
[ F ->  · V  , +  ]
[ F ->  · V  , *  ]
[ F ->  · V  , /  ]
[ F ->  · V  , %  ]
[ F ->  · ( E )  , )  ]
[ F ->  · ( E )  , -  ]
[ F ->  · ( E )  , +  ]
[ F ->  · ( E )  , *  ]
[ F ->  · ( E )  , /  ]
[ F ->  · ( E )  , %  ]
[ F ->  · C  , )  ]
[ F ->  · C  , -  ]
[ F ->  · C  , +  ]
[ F ->  · C  , *  ]
[ F ->  · C  , /  ]
[ F ->  · C  , %  ]
[ F ->  · value ( E , E )  , )  ]
[ F ->  · value ( E , E )  , -  ]
[ F ->  · value ( E , E )  , +  ]
[ F ->  · value ( E , E )  , *  ]
[ F ->  · value ( E , E )  , /  ]
[ F ->  · value ( E , E )  , %  ]
[ F ->  · derivative ( E )  , )  ]
[ F ->  · derivative ( E )  , -  ]
[ F ->  · derivative ( E )  , +  ]
[ F ->  · derivative ( E )  , *  ]
[ F ->  · derivative ( E )  , /  ]
[ F ->  · derivative ( E )  , %  ]
[ F ->  · coeff ( E , E )  , )  ]
[ F ->  · coeff ( E , E )  , -  ]
[ F ->  · coeff ( E , E )  , +  ]
[ F ->  · coeff ( E , E )  , *  ]
[ F ->  · coeff ( E , E )  , /  ]
[ F ->  · coeff ( E , E )  , %  ]
[ F ->  · deg ( E )  , )  ]
[ F ->  · deg ( E )  , -  ]
[ F ->  · deg ( E )  , +  ]
[ F ->  · deg ( E )  , *  ]
[ F ->  · deg ( E )  , /  ]
[ F ->  · deg ( E )  , %  ]
[ F -> derivative (  · E )  , goto  ]
[ F -> derivative (  · E )  , -  ]
[ F -> derivative (  · E )  , +  ]
[ F -> derivative (  · E )  , *  ]
[ F -> derivative (  · E )  , /  ]
[ F -> derivative (  · E )  , %  ]
}

set 174 = GOTO( set 100 , ( ) :
{
[ E ->  · E - T  , ,  ]
[ E ->  · E - T  , -  ]
[ E ->  · E - T  , +  ]
[ E ->  · E + T  , ,  ]
[ E ->  · E + T  , -  ]
[ E ->  · E + T  , +  ]
[ E ->  · T  , ,  ]
[ E ->  · T  , -  ]
[ E ->  · T  , +  ]
[ T ->  · T * F  , ,  ]
[ T ->  · T * F  , -  ]
[ T ->  · T * F  , +  ]
[ T ->  · T * F  , *  ]
[ T ->  · T * F  , /  ]
[ T ->  · T * F  , %  ]
[ T ->  · T / F  , ,  ]
[ T ->  · T / F  , -  ]
[ T ->  · T / F  , +  ]
[ T ->  · T / F  , *  ]
[ T ->  · T / F  , /  ]
[ T ->  · T / F  , %  ]
[ T ->  · T % F  , ,  ]
[ T ->  · T % F  , -  ]
[ T ->  · T % F  , +  ]
[ T ->  · T % F  , *  ]
[ T ->  · T % F  , /  ]
[ T ->  · T % F  , %  ]
[ T ->  · F  , ,  ]
[ T ->  · F  , -  ]
[ T ->  · F  , +  ]
[ T ->  · F  , *  ]
[ T ->  · F  , /  ]
[ T ->  · F  , %  ]
[ F ->  · V  , ,  ]
[ F ->  · V  , -  ]
[ F ->  · V  , +  ]
[ F ->  · V  , *  ]
[ F ->  · V  , /  ]
[ F ->  · V  , %  ]
[ F ->  · ( E )  , ,  ]
[ F ->  · ( E )  , -  ]
[ F ->  · ( E )  , +  ]
[ F ->  · ( E )  , *  ]
[ F ->  · ( E )  , /  ]
[ F ->  · ( E )  , %  ]
[ F ->  · C  , ,  ]
[ F ->  · C  , -  ]
[ F ->  · C  , +  ]
[ F ->  · C  , *  ]
[ F ->  · C  , /  ]
[ F ->  · C  , %  ]
[ F ->  · value ( E , E )  , ,  ]
[ F ->  · value ( E , E )  , -  ]
[ F ->  · value ( E , E )  , +  ]
[ F ->  · value ( E , E )  , *  ]
[ F ->  · value ( E , E )  , /  ]
[ F ->  · value ( E , E )  , %  ]
[ F ->  · derivative ( E )  , ,  ]
[ F ->  · derivative ( E )  , -  ]
[ F ->  · derivative ( E )  , +  ]
[ F ->  · derivative ( E )  , *  ]
[ F ->  · derivative ( E )  , /  ]
[ F ->  · derivative ( E )  , %  ]
[ F ->  · coeff ( E , E )  , ,  ]
[ F ->  · coeff ( E , E )  , -  ]
[ F ->  · coeff ( E , E )  , +  ]
[ F ->  · coeff ( E , E )  , *  ]
[ F ->  · coeff ( E , E )  , /  ]
[ F ->  · coeff ( E , E )  , %  ]
[ F ->  · deg ( E )  , ,  ]
[ F ->  · deg ( E )  , -  ]
[ F ->  · deg ( E )  , +  ]
[ F ->  · deg ( E )  , *  ]
[ F ->  · deg ( E )  , /  ]
[ F ->  · deg ( E )  , %  ]
[ F -> value (  · E , E )  , goto  ]
[ F -> value (  · E , E )  , -  ]
[ F -> value (  · E , E )  , +  ]
[ F -> value (  · E , E )  , *  ]
[ F -> value (  · E , E )  , /  ]
[ F -> value (  · E , E )  , %  ]
}

set 175 = GOTO( set 104 , E ) :
{
[ E -> E  · - T  , )  ]
[ E -> E  · - T  , -  ]
[ E -> E  · - T  , +  ]
[ E -> E  · + T  , )  ]
[ E -> E  · + T  , -  ]
[ E -> E  · + T  , +  ]
[ F -> ( E  · )  , ,  ]
[ F -> ( E  · )  , -  ]
[ F -> ( E  · )  , +  ]
[ F -> ( E  · )  , *  ]
[ F -> ( E  · )  , /  ]
[ F -> ( E  · )  , %  ]
}

set 176 = GOTO( set 106 , + ) :
{
[ E -> E +  · T  , ,  ]
[ E -> E +  · T  , -  ]
[ E -> E +  · T  , +  ]
[ T ->  · T * F  , ,  ]
[ T ->  · T * F  , -  ]
[ T ->  · T * F  , +  ]
[ T ->  · T * F  , *  ]
[ T ->  · T * F  , /  ]
[ T ->  · T * F  , %  ]
[ T ->  · T / F  , ,  ]
[ T ->  · T / F  , -  ]
[ T ->  · T / F  , +  ]
[ T ->  · T / F  , *  ]
[ T ->  · T / F  , /  ]
[ T ->  · T / F  , %  ]
[ T ->  · T % F  , ,  ]
[ T ->  · T % F  , -  ]
[ T ->  · T % F  , +  ]
[ T ->  · T % F  , *  ]
[ T ->  · T % F  , /  ]
[ T ->  · T % F  , %  ]
[ T ->  · F  , ,  ]
[ T ->  · F  , -  ]
[ T ->  · F  , +  ]
[ T ->  · F  , *  ]
[ T ->  · F  , /  ]
[ T ->  · F  , %  ]
[ F ->  · V  , ,  ]
[ F ->  · V  , -  ]
[ F ->  · V  , +  ]
[ F ->  · V  , *  ]
[ F ->  · V  , /  ]
[ F ->  · V  , %  ]
[ F ->  · ( E )  , ,  ]
[ F ->  · ( E )  , -  ]
[ F ->  · ( E )  , +  ]
[ F ->  · ( E )  , *  ]
[ F ->  · ( E )  , /  ]
[ F ->  · ( E )  , %  ]
[ F ->  · C  , ,  ]
[ F ->  · C  , -  ]
[ F ->  · C  , +  ]
[ F ->  · C  , *  ]
[ F ->  · C  , /  ]
[ F ->  · C  , %  ]
[ F ->  · value ( E , E )  , ,  ]
[ F ->  · value ( E , E )  , -  ]
[ F ->  · value ( E , E )  , +  ]
[ F ->  · value ( E , E )  , *  ]
[ F ->  · value ( E , E )  , /  ]
[ F ->  · value ( E , E )  , %  ]
[ F ->  · derivative ( E )  , ,  ]
[ F ->  · derivative ( E )  , -  ]
[ F ->  · derivative ( E )  , +  ]
[ F ->  · derivative ( E )  , *  ]
[ F ->  · derivative ( E )  , /  ]
[ F ->  · derivative ( E )  , %  ]
[ F ->  · coeff ( E , E )  , ,  ]
[ F ->  · coeff ( E , E )  , -  ]
[ F ->  · coeff ( E , E )  , +  ]
[ F ->  · coeff ( E , E )  , *  ]
[ F ->  · coeff ( E , E )  , /  ]
[ F ->  · coeff ( E , E )  , %  ]
[ F ->  · deg ( E )  , ,  ]
[ F ->  · deg ( E )  , -  ]
[ F ->  · deg ( E )  , +  ]
[ F ->  · deg ( E )  , *  ]
[ F ->  · deg ( E )  , /  ]
[ F ->  · deg ( E )  , %  ]
}

set 177 = GOTO( set 106 , , ) :
{
[ E ->  · E - T  , )  ]
[ E ->  · E - T  , -  ]
[ E ->  · E - T  , +  ]
[ E ->  · E + T  , )  ]
[ E ->  · E + T  , -  ]
[ E ->  · E + T  , +  ]
[ E ->  · T  , )  ]
[ E ->  · T  , -  ]
[ E ->  · T  , +  ]
[ T ->  · T * F  , )  ]
[ T ->  · T * F  , -  ]
[ T ->  · T * F  , +  ]
[ T ->  · T * F  , *  ]
[ T ->  · T * F  , /  ]
[ T ->  · T * F  , %  ]
[ T ->  · T / F  , )  ]
[ T ->  · T / F  , -  ]
[ T ->  · T / F  , +  ]
[ T ->  · T / F  , *  ]
[ T ->  · T / F  , /  ]
[ T ->  · T / F  , %  ]
[ T ->  · T % F  , )  ]
[ T ->  · T % F  , -  ]
[ T ->  · T % F  , +  ]
[ T ->  · T % F  , *  ]
[ T ->  · T % F  , /  ]
[ T ->  · T % F  , %  ]
[ T ->  · F  , )  ]
[ T ->  · F  , -  ]
[ T ->  · F  , +  ]
[ T ->  · F  , *  ]
[ T ->  · F  , /  ]
[ T ->  · F  , %  ]
[ F ->  · V  , )  ]
[ F ->  · V  , -  ]
[ F ->  · V  , +  ]
[ F ->  · V  , *  ]
[ F ->  · V  , /  ]
[ F ->  · V  , %  ]
[ F ->  · ( E )  , )  ]
[ F ->  · ( E )  , -  ]
[ F ->  · ( E )  , +  ]
[ F ->  · ( E )  , *  ]
[ F ->  · ( E )  , /  ]
[ F ->  · ( E )  , %  ]
[ F ->  · C  , )  ]
[ F ->  · C  , -  ]
[ F ->  · C  , +  ]
[ F ->  · C  , *  ]
[ F ->  · C  , /  ]
[ F ->  · C  , %  ]
[ F ->  · value ( E , E )  , )  ]
[ F ->  · value ( E , E )  , -  ]
[ F ->  · value ( E , E )  , +  ]
[ F ->  · value ( E , E )  , *  ]
[ F ->  · value ( E , E )  , /  ]
[ F ->  · value ( E , E )  , %  ]
[ F ->  · derivative ( E )  , )  ]
[ F ->  · derivative ( E )  , -  ]
[ F ->  · derivative ( E )  , +  ]
[ F ->  · derivative ( E )  , *  ]
[ F ->  · derivative ( E )  , /  ]
[ F ->  · derivative ( E )  , %  ]
[ F ->  · coeff ( E , E )  , )  ]
[ F ->  · coeff ( E , E )  , -  ]
[ F ->  · coeff ( E , E )  , +  ]
[ F ->  · coeff ( E , E )  , *  ]
[ F ->  · coeff ( E , E )  , /  ]
[ F ->  · coeff ( E , E )  , %  ]
[ F ->  · deg ( E )  , )  ]
[ F ->  · deg ( E )  , -  ]
[ F ->  · deg ( E )  , +  ]
[ F ->  · deg ( E )  , *  ]
[ F ->  · deg ( E )  , /  ]
[ F ->  · deg ( E )  , %  ]
[ F -> coeff ( E ,  · E )  , Rel  ]
[ F -> coeff ( E ,  · E )  , -  ]
[ F -> coeff ( E ,  · E )  , +  ]
[ F -> coeff ( E ,  · E )  , *  ]
[ F -> coeff ( E ,  · E )  , /  ]
[ F -> coeff ( E ,  · E )  , %  ]
}

set 178 = GOTO( set 106 , - ) :
{
[ E -> E -  · T  , ,  ]
[ E -> E -  · T  , -  ]
[ E -> E -  · T  , +  ]
[ T ->  · T * F  , ,  ]
[ T ->  · T * F  , -  ]
[ T ->  · T * F  , +  ]
[ T ->  · T * F  , *  ]
[ T ->  · T * F  , /  ]
[ T ->  · T * F  , %  ]
[ T ->  · T / F  , ,  ]
[ T ->  · T / F  , -  ]
[ T ->  · T / F  , +  ]
[ T ->  · T / F  , *  ]
[ T ->  · T / F  , /  ]
[ T ->  · T / F  , %  ]
[ T ->  · T % F  , ,  ]
[ T ->  · T % F  , -  ]
[ T ->  · T % F  , +  ]
[ T ->  · T % F  , *  ]
[ T ->  · T % F  , /  ]
[ T ->  · T % F  , %  ]
[ T ->  · F  , ,  ]
[ T ->  · F  , -  ]
[ T ->  · F  , +  ]
[ T ->  · F  , *  ]
[ T ->  · F  , /  ]
[ T ->  · F  , %  ]
[ F ->  · V  , ,  ]
[ F ->  · V  , -  ]
[ F ->  · V  , +  ]
[ F ->  · V  , *  ]
[ F ->  · V  , /  ]
[ F ->  · V  , %  ]
[ F ->  · ( E )  , ,  ]
[ F ->  · ( E )  , -  ]
[ F ->  · ( E )  , +  ]
[ F ->  · ( E )  , *  ]
[ F ->  · ( E )  , /  ]
[ F ->  · ( E )  , %  ]
[ F ->  · C  , ,  ]
[ F ->  · C  , -  ]
[ F ->  · C  , +  ]
[ F ->  · C  , *  ]
[ F ->  · C  , /  ]
[ F ->  · C  , %  ]
[ F ->  · value ( E , E )  , ,  ]
[ F ->  · value ( E , E )  , -  ]
[ F ->  · value ( E , E )  , +  ]
[ F ->  · value ( E , E )  , *  ]
[ F ->  · value ( E , E )  , /  ]
[ F ->  · value ( E , E )  , %  ]
[ F ->  · derivative ( E )  , ,  ]
[ F ->  · derivative ( E )  , -  ]
[ F ->  · derivative ( E )  , +  ]
[ F ->  · derivative ( E )  , *  ]
[ F ->  · derivative ( E )  , /  ]
[ F ->  · derivative ( E )  , %  ]
[ F ->  · coeff ( E , E )  , ,  ]
[ F ->  · coeff ( E , E )  , -  ]
[ F ->  · coeff ( E , E )  , +  ]
[ F ->  · coeff ( E , E )  , *  ]
[ F ->  · coeff ( E , E )  , /  ]
[ F ->  · coeff ( E , E )  , %  ]
[ F ->  · deg ( E )  , ,  ]
[ F ->  · deg ( E )  , -  ]
[ F ->  · deg ( E )  , +  ]
[ F ->  · deg ( E )  , *  ]
[ F ->  · deg ( E )  , /  ]
[ F ->  · deg ( E )  , %  ]
}

set 179 = GOTO( set 108 , % ) :
{
[ T -> T %  · F  , ,  ]
[ T -> T %  · F  , -  ]
[ T -> T %  · F  , +  ]
[ T -> T %  · F  , *  ]
[ T -> T %  · F  , /  ]
[ T -> T %  · F  , %  ]
[ F ->  · V  , ,  ]
[ F ->  · V  , -  ]
[ F ->  · V  , +  ]
[ F ->  · V  , *  ]
[ F ->  · V  , /  ]
[ F ->  · V  , %  ]
[ F ->  · ( E )  , ,  ]
[ F ->  · ( E )  , -  ]
[ F ->  · ( E )  , +  ]
[ F ->  · ( E )  , *  ]
[ F ->  · ( E )  , /  ]
[ F ->  · ( E )  , %  ]
[ F ->  · C  , ,  ]
[ F ->  · C  , -  ]
[ F ->  · C  , +  ]
[ F ->  · C  , *  ]
[ F ->  · C  , /  ]
[ F ->  · C  , %  ]
[ F ->  · value ( E , E )  , ,  ]
[ F ->  · value ( E , E )  , -  ]
[ F ->  · value ( E , E )  , +  ]
[ F ->  · value ( E , E )  , *  ]
[ F ->  · value ( E , E )  , /  ]
[ F ->  · value ( E , E )  , %  ]
[ F ->  · derivative ( E )  , ,  ]
[ F ->  · derivative ( E )  , -  ]
[ F ->  · derivative ( E )  , +  ]
[ F ->  · derivative ( E )  , *  ]
[ F ->  · derivative ( E )  , /  ]
[ F ->  · derivative ( E )  , %  ]
[ F ->  · coeff ( E , E )  , ,  ]
[ F ->  · coeff ( E , E )  , -  ]
[ F ->  · coeff ( E , E )  , +  ]
[ F ->  · coeff ( E , E )  , *  ]
[ F ->  · coeff ( E , E )  , /  ]
[ F ->  · coeff ( E , E )  , %  ]
[ F ->  · deg ( E )  , ,  ]
[ F ->  · deg ( E )  , -  ]
[ F ->  · deg ( E )  , +  ]
[ F ->  · deg ( E )  , *  ]
[ F ->  · deg ( E )  , /  ]
[ F ->  · deg ( E )  , %  ]
}

set 180 = GOTO( set 108 , * ) :
{
[ T -> T *  · F  , ,  ]
[ T -> T *  · F  , -  ]
[ T -> T *  · F  , +  ]
[ T -> T *  · F  , *  ]
[ T -> T *  · F  , /  ]
[ T -> T *  · F  , %  ]
[ F ->  · V  , ,  ]
[ F ->  · V  , -  ]
[ F ->  · V  , +  ]
[ F ->  · V  , *  ]
[ F ->  · V  , /  ]
[ F ->  · V  , %  ]
[ F ->  · ( E )  , ,  ]
[ F ->  · ( E )  , -  ]
[ F ->  · ( E )  , +  ]
[ F ->  · ( E )  , *  ]
[ F ->  · ( E )  , /  ]
[ F ->  · ( E )  , %  ]
[ F ->  · C  , ,  ]
[ F ->  · C  , -  ]
[ F ->  · C  , +  ]
[ F ->  · C  , *  ]
[ F ->  · C  , /  ]
[ F ->  · C  , %  ]
[ F ->  · value ( E , E )  , ,  ]
[ F ->  · value ( E , E )  , -  ]
[ F ->  · value ( E , E )  , +  ]
[ F ->  · value ( E , E )  , *  ]
[ F ->  · value ( E , E )  , /  ]
[ F ->  · value ( E , E )  , %  ]
[ F ->  · derivative ( E )  , ,  ]
[ F ->  · derivative ( E )  , -  ]
[ F ->  · derivative ( E )  , +  ]
[ F ->  · derivative ( E )  , *  ]
[ F ->  · derivative ( E )  , /  ]
[ F ->  · derivative ( E )  , %  ]
[ F ->  · coeff ( E , E )  , ,  ]
[ F ->  · coeff ( E , E )  , -  ]
[ F ->  · coeff ( E , E )  , +  ]
[ F ->  · coeff ( E , E )  , *  ]
[ F ->  · coeff ( E , E )  , /  ]
[ F ->  · coeff ( E , E )  , %  ]
[ F ->  · deg ( E )  , ,  ]
[ F ->  · deg ( E )  , -  ]
[ F ->  · deg ( E )  , +  ]
[ F ->  · deg ( E )  , *  ]
[ F ->  · deg ( E )  , /  ]
[ F ->  · deg ( E )  , %  ]
}

set 181 = GOTO( set 108 , / ) :
{
[ T -> T /  · F  , ,  ]
[ T -> T /  · F  , -  ]
[ T -> T /  · F  , +  ]
[ T -> T /  · F  , *  ]
[ T -> T /  · F  , /  ]
[ T -> T /  · F  , %  ]
[ F ->  · V  , ,  ]
[ F ->  · V  , -  ]
[ F ->  · V  , +  ]
[ F ->  · V  , *  ]
[ F ->  · V  , /  ]
[ F ->  · V  , %  ]
[ F ->  · ( E )  , ,  ]
[ F ->  · ( E )  , -  ]
[ F ->  · ( E )  , +  ]
[ F ->  · ( E )  , *  ]
[ F ->  · ( E )  , /  ]
[ F ->  · ( E )  , %  ]
[ F ->  · C  , ,  ]
[ F ->  · C  , -  ]
[ F ->  · C  , +  ]
[ F ->  · C  , *  ]
[ F ->  · C  , /  ]
[ F ->  · C  , %  ]
[ F ->  · value ( E , E )  , ,  ]
[ F ->  · value ( E , E )  , -  ]
[ F ->  · value ( E , E )  , +  ]
[ F ->  · value ( E , E )  , *  ]
[ F ->  · value ( E , E )  , /  ]
[ F ->  · value ( E , E )  , %  ]
[ F ->  · derivative ( E )  , ,  ]
[ F ->  · derivative ( E )  , -  ]
[ F ->  · derivative ( E )  , +  ]
[ F ->  · derivative ( E )  , *  ]
[ F ->  · derivative ( E )  , /  ]
[ F ->  · derivative ( E )  , %  ]
[ F ->  · coeff ( E , E )  , ,  ]
[ F ->  · coeff ( E , E )  , -  ]
[ F ->  · coeff ( E , E )  , +  ]
[ F ->  · coeff ( E , E )  , *  ]
[ F ->  · coeff ( E , E )  , /  ]
[ F ->  · coeff ( E , E )  , %  ]
[ F ->  · deg ( E )  , ,  ]
[ F ->  · deg ( E )  , -  ]
[ F ->  · deg ( E )  , +  ]
[ F ->  · deg ( E )  , *  ]
[ F ->  · deg ( E )  , /  ]
[ F ->  · deg ( E )  , %  ]
}

set 182 = GOTO( set 110 , ( ) :
{
[ E ->  · E - T  , ,  ]
[ E ->  · E - T  , -  ]
[ E ->  · E - T  , +  ]
[ E ->  · E + T  , ,  ]
[ E ->  · E + T  , -  ]
[ E ->  · E + T  , +  ]
[ E ->  · T  , ,  ]
[ E ->  · T  , -  ]
[ E ->  · T  , +  ]
[ T ->  · T * F  , ,  ]
[ T ->  · T * F  , -  ]
[ T ->  · T * F  , +  ]
[ T ->  · T * F  , *  ]
[ T ->  · T * F  , /  ]
[ T ->  · T * F  , %  ]
[ T ->  · T / F  , ,  ]
[ T ->  · T / F  , -  ]
[ T ->  · T / F  , +  ]
[ T ->  · T / F  , *  ]
[ T ->  · T / F  , /  ]
[ T ->  · T / F  , %  ]
[ T ->  · T % F  , ,  ]
[ T ->  · T % F  , -  ]
[ T ->  · T % F  , +  ]
[ T ->  · T % F  , *  ]
[ T ->  · T % F  , /  ]
[ T ->  · T % F  , %  ]
[ T ->  · F  , ,  ]
[ T ->  · F  , -  ]
[ T ->  · F  , +  ]
[ T ->  · F  , *  ]
[ T ->  · F  , /  ]
[ T ->  · F  , %  ]
[ F ->  · V  , ,  ]
[ F ->  · V  , -  ]
[ F ->  · V  , +  ]
[ F ->  · V  , *  ]
[ F ->  · V  , /  ]
[ F ->  · V  , %  ]
[ F ->  · ( E )  , ,  ]
[ F ->  · ( E )  , -  ]
[ F ->  · ( E )  , +  ]
[ F ->  · ( E )  , *  ]
[ F ->  · ( E )  , /  ]
[ F ->  · ( E )  , %  ]
[ F ->  · C  , ,  ]
[ F ->  · C  , -  ]
[ F ->  · C  , +  ]
[ F ->  · C  , *  ]
[ F ->  · C  , /  ]
[ F ->  · C  , %  ]
[ F ->  · value ( E , E )  , ,  ]
[ F ->  · value ( E , E )  , -  ]
[ F ->  · value ( E , E )  , +  ]
[ F ->  · value ( E , E )  , *  ]
[ F ->  · value ( E , E )  , /  ]
[ F ->  · value ( E , E )  , %  ]
[ F ->  · derivative ( E )  , ,  ]
[ F ->  · derivative ( E )  , -  ]
[ F ->  · derivative ( E )  , +  ]
[ F ->  · derivative ( E )  , *  ]
[ F ->  · derivative ( E )  , /  ]
[ F ->  · derivative ( E )  , %  ]
[ F ->  · coeff ( E , E )  , ,  ]
[ F ->  · coeff ( E , E )  , -  ]
[ F ->  · coeff ( E , E )  , +  ]
[ F ->  · coeff ( E , E )  , *  ]
[ F ->  · coeff ( E , E )  , /  ]
[ F ->  · coeff ( E , E )  , %  ]
[ F ->  · deg ( E )  , ,  ]
[ F ->  · deg ( E )  , -  ]
[ F ->  · deg ( E )  , +  ]
[ F ->  · deg ( E )  , *  ]
[ F ->  · deg ( E )  , /  ]
[ F ->  · deg ( E )  , %  ]
[ F -> coeff (  · E , E )  , ,  ]
[ F -> coeff (  · E , E )  , -  ]
[ F -> coeff (  · E , E )  , +  ]
[ F -> coeff (  · E , E )  , *  ]
[ F -> coeff (  · E , E )  , /  ]
[ F -> coeff (  · E , E )  , %  ]
}

set 183 = GOTO( set 111 , ( ) :
{
[ E ->  · E - T  , )  ]
[ E ->  · E - T  , -  ]
[ E ->  · E - T  , +  ]
[ E ->  · E + T  , )  ]
[ E ->  · E + T  , -  ]
[ E ->  · E + T  , +  ]
[ E ->  · T  , )  ]
[ E ->  · T  , -  ]
[ E ->  · T  , +  ]
[ T ->  · T * F  , )  ]
[ T ->  · T * F  , -  ]
[ T ->  · T * F  , +  ]
[ T ->  · T * F  , *  ]
[ T ->  · T * F  , /  ]
[ T ->  · T * F  , %  ]
[ T ->  · T / F  , )  ]
[ T ->  · T / F  , -  ]
[ T ->  · T / F  , +  ]
[ T ->  · T / F  , *  ]
[ T ->  · T / F  , /  ]
[ T ->  · T / F  , %  ]
[ T ->  · T % F  , )  ]
[ T ->  · T % F  , -  ]
[ T ->  · T % F  , +  ]
[ T ->  · T % F  , *  ]
[ T ->  · T % F  , /  ]
[ T ->  · T % F  , %  ]
[ T ->  · F  , )  ]
[ T ->  · F  , -  ]
[ T ->  · F  , +  ]
[ T ->  · F  , *  ]
[ T ->  · F  , /  ]
[ T ->  · F  , %  ]
[ F ->  · V  , )  ]
[ F ->  · V  , -  ]
[ F ->  · V  , +  ]
[ F ->  · V  , *  ]
[ F ->  · V  , /  ]
[ F ->  · V  , %  ]
[ F ->  · ( E )  , )  ]
[ F ->  · ( E )  , -  ]
[ F ->  · ( E )  , +  ]
[ F ->  · ( E )  , *  ]
[ F ->  · ( E )  , /  ]
[ F ->  · ( E )  , %  ]
[ F ->  · C  , )  ]
[ F ->  · C  , -  ]
[ F ->  · C  , +  ]
[ F ->  · C  , *  ]
[ F ->  · C  , /  ]
[ F ->  · C  , %  ]
[ F ->  · value ( E , E )  , )  ]
[ F ->  · value ( E , E )  , -  ]
[ F ->  · value ( E , E )  , +  ]
[ F ->  · value ( E , E )  , *  ]
[ F ->  · value ( E , E )  , /  ]
[ F ->  · value ( E , E )  , %  ]
[ F ->  · derivative ( E )  , )  ]
[ F ->  · derivative ( E )  , -  ]
[ F ->  · derivative ( E )  , +  ]
[ F ->  · derivative ( E )  , *  ]
[ F ->  · derivative ( E )  , /  ]
[ F ->  · derivative ( E )  , %  ]
[ F ->  · coeff ( E , E )  , )  ]
[ F ->  · coeff ( E , E )  , -  ]
[ F ->  · coeff ( E , E )  , +  ]
[ F ->  · coeff ( E , E )  , *  ]
[ F ->  · coeff ( E , E )  , /  ]
[ F ->  · coeff ( E , E )  , %  ]
[ F ->  · deg ( E )  , )  ]
[ F ->  · deg ( E )  , -  ]
[ F ->  · deg ( E )  , +  ]
[ F ->  · deg ( E )  , *  ]
[ F ->  · deg ( E )  , /  ]
[ F ->  · deg ( E )  , %  ]
[ F -> deg (  · E )  , ,  ]
[ F -> deg (  · E )  , -  ]
[ F -> deg (  · E )  , +  ]
[ F -> deg (  · E )  , *  ]
[ F -> deg (  · E )  , /  ]
[ F -> deg (  · E )  , %  ]
}

set 184 = GOTO( set 112 , ( ) :
{
[ E ->  · E - T  , )  ]
[ E ->  · E - T  , -  ]
[ E ->  · E - T  , +  ]
[ E ->  · E + T  , )  ]
[ E ->  · E + T  , -  ]
[ E ->  · E + T  , +  ]
[ E ->  · T  , )  ]
[ E ->  · T  , -  ]
[ E ->  · T  , +  ]
[ T ->  · T * F  , )  ]
[ T ->  · T * F  , -  ]
[ T ->  · T * F  , +  ]
[ T ->  · T * F  , *  ]
[ T ->  · T * F  , /  ]
[ T ->  · T * F  , %  ]
[ T ->  · T / F  , )  ]
[ T ->  · T / F  , -  ]
[ T ->  · T / F  , +  ]
[ T ->  · T / F  , *  ]
[ T ->  · T / F  , /  ]
[ T ->  · T / F  , %  ]
[ T ->  · T % F  , )  ]
[ T ->  · T % F  , -  ]
[ T ->  · T % F  , +  ]
[ T ->  · T % F  , *  ]
[ T ->  · T % F  , /  ]
[ T ->  · T % F  , %  ]
[ T ->  · F  , )  ]
[ T ->  · F  , -  ]
[ T ->  · F  , +  ]
[ T ->  · F  , *  ]
[ T ->  · F  , /  ]
[ T ->  · F  , %  ]
[ F ->  · V  , )  ]
[ F ->  · V  , -  ]
[ F ->  · V  , +  ]
[ F ->  · V  , *  ]
[ F ->  · V  , /  ]
[ F ->  · V  , %  ]
[ F ->  · ( E )  , )  ]
[ F ->  · ( E )  , -  ]
[ F ->  · ( E )  , +  ]
[ F ->  · ( E )  , *  ]
[ F ->  · ( E )  , /  ]
[ F ->  · ( E )  , %  ]
[ F ->  · C  , )  ]
[ F ->  · C  , -  ]
[ F ->  · C  , +  ]
[ F ->  · C  , *  ]
[ F ->  · C  , /  ]
[ F ->  · C  , %  ]
[ F ->  · value ( E , E )  , )  ]
[ F ->  · value ( E , E )  , -  ]
[ F ->  · value ( E , E )  , +  ]
[ F ->  · value ( E , E )  , *  ]
[ F ->  · value ( E , E )  , /  ]
[ F ->  · value ( E , E )  , %  ]
[ F ->  · derivative ( E )  , )  ]
[ F ->  · derivative ( E )  , -  ]
[ F ->  · derivative ( E )  , +  ]
[ F ->  · derivative ( E )  , *  ]
[ F ->  · derivative ( E )  , /  ]
[ F ->  · derivative ( E )  , %  ]
[ F ->  · coeff ( E , E )  , )  ]
[ F ->  · coeff ( E , E )  , -  ]
[ F ->  · coeff ( E , E )  , +  ]
[ F ->  · coeff ( E , E )  , *  ]
[ F ->  · coeff ( E , E )  , /  ]
[ F ->  · coeff ( E , E )  , %  ]
[ F ->  · deg ( E )  , )  ]
[ F ->  · deg ( E )  , -  ]
[ F ->  · deg ( E )  , +  ]
[ F ->  · deg ( E )  , *  ]
[ F ->  · deg ( E )  , /  ]
[ F ->  · deg ( E )  , %  ]
[ F -> derivative (  · E )  , ,  ]
[ F -> derivative (  · E )  , -  ]
[ F -> derivative (  · E )  , +  ]
[ F -> derivative (  · E )  , *  ]
[ F -> derivative (  · E )  , /  ]
[ F -> derivative (  · E )  , %  ]
}

set 185 = GOTO( set 113 , ( ) :
{
[ E ->  · E - T  , ,  ]
[ E ->  · E - T  , -  ]
[ E ->  · E - T  , +  ]
[ E ->  · E + T  , ,  ]
[ E ->  · E + T  , -  ]
[ E ->  · E + T  , +  ]
[ E ->  · T  , ,  ]
[ E ->  · T  , -  ]
[ E ->  · T  , +  ]
[ T ->  · T * F  , ,  ]
[ T ->  · T * F  , -  ]
[ T ->  · T * F  , +  ]
[ T ->  · T * F  , *  ]
[ T ->  · T * F  , /  ]
[ T ->  · T * F  , %  ]
[ T ->  · T / F  , ,  ]
[ T ->  · T / F  , -  ]
[ T ->  · T / F  , +  ]
[ T ->  · T / F  , *  ]
[ T ->  · T / F  , /  ]
[ T ->  · T / F  , %  ]
[ T ->  · T % F  , ,  ]
[ T ->  · T % F  , -  ]
[ T ->  · T % F  , +  ]
[ T ->  · T % F  , *  ]
[ T ->  · T % F  , /  ]
[ T ->  · T % F  , %  ]
[ T ->  · F  , ,  ]
[ T ->  · F  , -  ]
[ T ->  · F  , +  ]
[ T ->  · F  , *  ]
[ T ->  · F  , /  ]
[ T ->  · F  , %  ]
[ F ->  · V  , ,  ]
[ F ->  · V  , -  ]
[ F ->  · V  , +  ]
[ F ->  · V  , *  ]
[ F ->  · V  , /  ]
[ F ->  · V  , %  ]
[ F ->  · ( E )  , ,  ]
[ F ->  · ( E )  , -  ]
[ F ->  · ( E )  , +  ]
[ F ->  · ( E )  , *  ]
[ F ->  · ( E )  , /  ]
[ F ->  · ( E )  , %  ]
[ F ->  · C  , ,  ]
[ F ->  · C  , -  ]
[ F ->  · C  , +  ]
[ F ->  · C  , *  ]
[ F ->  · C  , /  ]
[ F ->  · C  , %  ]
[ F ->  · value ( E , E )  , ,  ]
[ F ->  · value ( E , E )  , -  ]
[ F ->  · value ( E , E )  , +  ]
[ F ->  · value ( E , E )  , *  ]
[ F ->  · value ( E , E )  , /  ]
[ F ->  · value ( E , E )  , %  ]
[ F ->  · derivative ( E )  , ,  ]
[ F ->  · derivative ( E )  , -  ]
[ F ->  · derivative ( E )  , +  ]
[ F ->  · derivative ( E )  , *  ]
[ F ->  · derivative ( E )  , /  ]
[ F ->  · derivative ( E )  , %  ]
[ F ->  · coeff ( E , E )  , ,  ]
[ F ->  · coeff ( E , E )  , -  ]
[ F ->  · coeff ( E , E )  , +  ]
[ F ->  · coeff ( E , E )  , *  ]
[ F ->  · coeff ( E , E )  , /  ]
[ F ->  · coeff ( E , E )  , %  ]
[ F ->  · deg ( E )  , ,  ]
[ F ->  · deg ( E )  , -  ]
[ F ->  · deg ( E )  , +  ]
[ F ->  · deg ( E )  , *  ]
[ F ->  · deg ( E )  , /  ]
[ F ->  · deg ( E )  , %  ]
[ F -> value (  · E , E )  , ,  ]
[ F -> value (  · E , E )  , -  ]
[ F -> value (  · E , E )  , +  ]
[ F -> value (  · E , E )  , *  ]
[ F -> value (  · E , E )  , /  ]
[ F -> value (  · E , E )  , %  ]
}

set 186 = GOTO( set 114 , ) ) :
{
[ F -> deg ( E )  ·  , Rel  ]
[ F -> deg ( E )  ·  , -  ]
[ F -> deg ( E )  ·  , +  ]
[ F -> deg ( E )  ·  , *  ]
[ F -> deg ( E )  ·  , /  ]
[ F -> deg ( E )  ·  , %  ]
}

set 187 = GOTO( set 115 , ) ) :
{
[ F -> derivative ( E )  ·  , Rel  ]
[ F -> derivative ( E )  ·  , -  ]
[ F -> derivative ( E )  ·  , +  ]
[ F -> derivative ( E )  ·  , *  ]
[ F -> derivative ( E )  ·  , /  ]
[ F -> derivative ( E )  ·  , %  ]
}

set 188 = GOTO( set 116 , , ) :
{
[ E ->  · E - T  , )  ]
[ E ->  · E - T  , -  ]
[ E ->  · E - T  , +  ]
[ E ->  · E + T  , )  ]
[ E ->  · E + T  , -  ]
[ E ->  · E + T  , +  ]
[ E ->  · T  , )  ]
[ E ->  · T  , -  ]
[ E ->  · T  , +  ]
[ T ->  · T * F  , )  ]
[ T ->  · T * F  , -  ]
[ T ->  · T * F  , +  ]
[ T ->  · T * F  , *  ]
[ T ->  · T * F  , /  ]
[ T ->  · T * F  , %  ]
[ T ->  · T / F  , )  ]
[ T ->  · T / F  , -  ]
[ T ->  · T / F  , +  ]
[ T ->  · T / F  , *  ]
[ T ->  · T / F  , /  ]
[ T ->  · T / F  , %  ]
[ T ->  · T % F  , )  ]
[ T ->  · T % F  , -  ]
[ T ->  · T % F  , +  ]
[ T ->  · T % F  , *  ]
[ T ->  · T % F  , /  ]
[ T ->  · T % F  , %  ]
[ T ->  · F  , )  ]
[ T ->  · F  , -  ]
[ T ->  · F  , +  ]
[ T ->  · F  , *  ]
[ T ->  · F  , /  ]
[ T ->  · F  , %  ]
[ F ->  · V  , )  ]
[ F ->  · V  , -  ]
[ F ->  · V  , +  ]
[ F ->  · V  , *  ]
[ F ->  · V  , /  ]
[ F ->  · V  , %  ]
[ F ->  · ( E )  , )  ]
[ F ->  · ( E )  , -  ]
[ F ->  · ( E )  , +  ]
[ F ->  · ( E )  , *  ]
[ F ->  · ( E )  , /  ]
[ F ->  · ( E )  , %  ]
[ F ->  · C  , )  ]
[ F ->  · C  , -  ]
[ F ->  · C  , +  ]
[ F ->  · C  , *  ]
[ F ->  · C  , /  ]
[ F ->  · C  , %  ]
[ F ->  · value ( E , E )  , )  ]
[ F ->  · value ( E , E )  , -  ]
[ F ->  · value ( E , E )  , +  ]
[ F ->  · value ( E , E )  , *  ]
[ F ->  · value ( E , E )  , /  ]
[ F ->  · value ( E , E )  , %  ]
[ F ->  · derivative ( E )  , )  ]
[ F ->  · derivative ( E )  , -  ]
[ F ->  · derivative ( E )  , +  ]
[ F ->  · derivative ( E )  , *  ]
[ F ->  · derivative ( E )  , /  ]
[ F ->  · derivative ( E )  , %  ]
[ F ->  · coeff ( E , E )  , )  ]
[ F ->  · coeff ( E , E )  , -  ]
[ F ->  · coeff ( E , E )  , +  ]
[ F ->  · coeff ( E , E )  , *  ]
[ F ->  · coeff ( E , E )  , /  ]
[ F ->  · coeff ( E , E )  , %  ]
[ F ->  · deg ( E )  , )  ]
[ F ->  · deg ( E )  , -  ]
[ F ->  · deg ( E )  , +  ]
[ F ->  · deg ( E )  , *  ]
[ F ->  · deg ( E )  , /  ]
[ F ->  · deg ( E )  , %  ]
[ F -> value ( E ,  · E )  , Rel  ]
[ F -> value ( E ,  · E )  , -  ]
[ F -> value ( E ,  · E )  , +  ]
[ F -> value ( E ,  · E )  , *  ]
[ F -> value ( E ,  · E )  , /  ]
[ F -> value ( E ,  · E )  , %  ]
}

set 189 = GOTO( set 117 , E ) :
{
[ E -> E  · - T  , )  ]
[ E -> E  · - T  , -  ]
[ E -> E  · - T  , +  ]
[ E -> E  · + T  , )  ]
[ E -> E  · + T  , -  ]
[ E -> E  · + T  , +  ]
[ F -> ( E  · )  , ;  ]
[ F -> ( E  · )  , -  ]
[ F -> ( E  · )  , +  ]
[ F -> ( E  · )  , *  ]
[ F -> ( E  · )  , /  ]
[ F -> ( E  · )  , %  ]
}

set 190 = GOTO( set 119 , + ) :
{
[ E -> E +  · T  , ;  ]
[ E -> E +  · T  , -  ]
[ E -> E +  · T  , +  ]
[ T ->  · T * F  , ;  ]
[ T ->  · T * F  , -  ]
[ T ->  · T * F  , +  ]
[ T ->  · T * F  , *  ]
[ T ->  · T * F  , /  ]
[ T ->  · T * F  , %  ]
[ T ->  · T / F  , ;  ]
[ T ->  · T / F  , -  ]
[ T ->  · T / F  , +  ]
[ T ->  · T / F  , *  ]
[ T ->  · T / F  , /  ]
[ T ->  · T / F  , %  ]
[ T ->  · T % F  , ;  ]
[ T ->  · T % F  , -  ]
[ T ->  · T % F  , +  ]
[ T ->  · T % F  , *  ]
[ T ->  · T % F  , /  ]
[ T ->  · T % F  , %  ]
[ T ->  · F  , ;  ]
[ T ->  · F  , -  ]
[ T ->  · F  , +  ]
[ T ->  · F  , *  ]
[ T ->  · F  , /  ]
[ T ->  · F  , %  ]
[ F ->  · V  , ;  ]
[ F ->  · V  , -  ]
[ F ->  · V  , +  ]
[ F ->  · V  , *  ]
[ F ->  · V  , /  ]
[ F ->  · V  , %  ]
[ F ->  · ( E )  , ;  ]
[ F ->  · ( E )  , -  ]
[ F ->  · ( E )  , +  ]
[ F ->  · ( E )  , *  ]
[ F ->  · ( E )  , /  ]
[ F ->  · ( E )  , %  ]
[ F ->  · C  , ;  ]
[ F ->  · C  , -  ]
[ F ->  · C  , +  ]
[ F ->  · C  , *  ]
[ F ->  · C  , /  ]
[ F ->  · C  , %  ]
[ F ->  · value ( E , E )  , ;  ]
[ F ->  · value ( E , E )  , -  ]
[ F ->  · value ( E , E )  , +  ]
[ F ->  · value ( E , E )  , *  ]
[ F ->  · value ( E , E )  , /  ]
[ F ->  · value ( E , E )  , %  ]
[ F ->  · derivative ( E )  , ;  ]
[ F ->  · derivative ( E )  , -  ]
[ F ->  · derivative ( E )  , +  ]
[ F ->  · derivative ( E )  , *  ]
[ F ->  · derivative ( E )  , /  ]
[ F ->  · derivative ( E )  , %  ]
[ F ->  · coeff ( E , E )  , ;  ]
[ F ->  · coeff ( E , E )  , -  ]
[ F ->  · coeff ( E , E )  , +  ]
[ F ->  · coeff ( E , E )  , *  ]
[ F ->  · coeff ( E , E )  , /  ]
[ F ->  · coeff ( E , E )  , %  ]
[ F ->  · deg ( E )  , ;  ]
[ F ->  · deg ( E )  , -  ]
[ F ->  · deg ( E )  , +  ]
[ F ->  · deg ( E )  , *  ]
[ F ->  · deg ( E )  , /  ]
[ F ->  · deg ( E )  , %  ]
}

set 191 = GOTO( set 119 , - ) :
{
[ E -> E -  · T  , ;  ]
[ E -> E -  · T  , -  ]
[ E -> E -  · T  , +  ]
[ T ->  · T * F  , ;  ]
[ T ->  · T * F  , -  ]
[ T ->  · T * F  , +  ]
[ T ->  · T * F  , *  ]
[ T ->  · T * F  , /  ]
[ T ->  · T * F  , %  ]
[ T ->  · T / F  , ;  ]
[ T ->  · T / F  , -  ]
[ T ->  · T / F  , +  ]
[ T ->  · T / F  , *  ]
[ T ->  · T / F  , /  ]
[ T ->  · T / F  , %  ]
[ T ->  · T % F  , ;  ]
[ T ->  · T % F  , -  ]
[ T ->  · T % F  , +  ]
[ T ->  · T % F  , *  ]
[ T ->  · T % F  , /  ]
[ T ->  · T % F  , %  ]
[ T ->  · F  , ;  ]
[ T ->  · F  , -  ]
[ T ->  · F  , +  ]
[ T ->  · F  , *  ]
[ T ->  · F  , /  ]
[ T ->  · F  , %  ]
[ F ->  · V  , ;  ]
[ F ->  · V  , -  ]
[ F ->  · V  , +  ]
[ F ->  · V  , *  ]
[ F ->  · V  , /  ]
[ F ->  · V  , %  ]
[ F ->  · ( E )  , ;  ]
[ F ->  · ( E )  , -  ]
[ F ->  · ( E )  , +  ]
[ F ->  · ( E )  , *  ]
[ F ->  · ( E )  , /  ]
[ F ->  · ( E )  , %  ]
[ F ->  · C  , ;  ]
[ F ->  · C  , -  ]
[ F ->  · C  , +  ]
[ F ->  · C  , *  ]
[ F ->  · C  , /  ]
[ F ->  · C  , %  ]
[ F ->  · value ( E , E )  , ;  ]
[ F ->  · value ( E , E )  , -  ]
[ F ->  · value ( E , E )  , +  ]
[ F ->  · value ( E , E )  , *  ]
[ F ->  · value ( E , E )  , /  ]
[ F ->  · value ( E , E )  , %  ]
[ F ->  · derivative ( E )  , ;  ]
[ F ->  · derivative ( E )  , -  ]
[ F ->  · derivative ( E )  , +  ]
[ F ->  · derivative ( E )  , *  ]
[ F ->  · derivative ( E )  , /  ]
[ F ->  · derivative ( E )  , %  ]
[ F ->  · coeff ( E , E )  , ;  ]
[ F ->  · coeff ( E , E )  , -  ]
[ F ->  · coeff ( E , E )  , +  ]
[ F ->  · coeff ( E , E )  , *  ]
[ F ->  · coeff ( E , E )  , /  ]
[ F ->  · coeff ( E , E )  , %  ]
[ F ->  · deg ( E )  , ;  ]
[ F ->  · deg ( E )  , -  ]
[ F ->  · deg ( E )  , +  ]
[ F ->  · deg ( E )  , *  ]
[ F ->  · deg ( E )  , /  ]
[ F ->  · deg ( E )  , %  ]
}

set 192 = GOTO( set 119 , ; ) :
{
[ <listA> -> = E ;  ·  ,  ]
[ <listA> -> = E ;  ·  , ;  ]
[ <listA> -> = E ;  ·  , V  ]
[ <listA> -> = E ;  ·  , :  ]
[ <listA> -> = E ;  ·  , let  ]
[ <listA> -> = E ;  ·  , if  ]
[ <listA> -> = E ;  ·  , goto  ]
[ <listA> -> = E ;  ·  , load  ]
[ <listA> -> = E ;  ·  , put  ]
[ <listA> -> = E ;  ·  , switch  ]
[ <listA> -> = E ;  ·  , error  ]
[ <listA> -> = E ;  ·  , comment  ]
}

set 193 = GOTO( set 121 , % ) :
{
[ T -> T %  · F  , ;  ]
[ T -> T %  · F  , -  ]
[ T -> T %  · F  , +  ]
[ T -> T %  · F  , *  ]
[ T -> T %  · F  , /  ]
[ T -> T %  · F  , %  ]
[ F ->  · V  , ;  ]
[ F ->  · V  , -  ]
[ F ->  · V  , +  ]
[ F ->  · V  , *  ]
[ F ->  · V  , /  ]
[ F ->  · V  , %  ]
[ F ->  · ( E )  , ;  ]
[ F ->  · ( E )  , -  ]
[ F ->  · ( E )  , +  ]
[ F ->  · ( E )  , *  ]
[ F ->  · ( E )  , /  ]
[ F ->  · ( E )  , %  ]
[ F ->  · C  , ;  ]
[ F ->  · C  , -  ]
[ F ->  · C  , +  ]
[ F ->  · C  , *  ]
[ F ->  · C  , /  ]
[ F ->  · C  , %  ]
[ F ->  · value ( E , E )  , ;  ]
[ F ->  · value ( E , E )  , -  ]
[ F ->  · value ( E , E )  , +  ]
[ F ->  · value ( E , E )  , *  ]
[ F ->  · value ( E , E )  , /  ]
[ F ->  · value ( E , E )  , %  ]
[ F ->  · derivative ( E )  , ;  ]
[ F ->  · derivative ( E )  , -  ]
[ F ->  · derivative ( E )  , +  ]
[ F ->  · derivative ( E )  , *  ]
[ F ->  · derivative ( E )  , /  ]
[ F ->  · derivative ( E )  , %  ]
[ F ->  · coeff ( E , E )  , ;  ]
[ F ->  · coeff ( E , E )  , -  ]
[ F ->  · coeff ( E , E )  , +  ]
[ F ->  · coeff ( E , E )  , *  ]
[ F ->  · coeff ( E , E )  , /  ]
[ F ->  · coeff ( E , E )  , %  ]
[ F ->  · deg ( E )  , ;  ]
[ F ->  · deg ( E )  , -  ]
[ F ->  · deg ( E )  , +  ]
[ F ->  · deg ( E )  , *  ]
[ F ->  · deg ( E )  , /  ]
[ F ->  · deg ( E )  , %  ]
}

set 194 = GOTO( set 121 , * ) :
{
[ T -> T *  · F  , ;  ]
[ T -> T *  · F  , -  ]
[ T -> T *  · F  , +  ]
[ T -> T *  · F  , *  ]
[ T -> T *  · F  , /  ]
[ T -> T *  · F  , %  ]
[ F ->  · V  , ;  ]
[ F ->  · V  , -  ]
[ F ->  · V  , +  ]
[ F ->  · V  , *  ]
[ F ->  · V  , /  ]
[ F ->  · V  , %  ]
[ F ->  · ( E )  , ;  ]
[ F ->  · ( E )  , -  ]
[ F ->  · ( E )  , +  ]
[ F ->  · ( E )  , *  ]
[ F ->  · ( E )  , /  ]
[ F ->  · ( E )  , %  ]
[ F ->  · C  , ;  ]
[ F ->  · C  , -  ]
[ F ->  · C  , +  ]
[ F ->  · C  , *  ]
[ F ->  · C  , /  ]
[ F ->  · C  , %  ]
[ F ->  · value ( E , E )  , ;  ]
[ F ->  · value ( E , E )  , -  ]
[ F ->  · value ( E , E )  , +  ]
[ F ->  · value ( E , E )  , *  ]
[ F ->  · value ( E , E )  , /  ]
[ F ->  · value ( E , E )  , %  ]
[ F ->  · derivative ( E )  , ;  ]
[ F ->  · derivative ( E )  , -  ]
[ F ->  · derivative ( E )  , +  ]
[ F ->  · derivative ( E )  , *  ]
[ F ->  · derivative ( E )  , /  ]
[ F ->  · derivative ( E )  , %  ]
[ F ->  · coeff ( E , E )  , ;  ]
[ F ->  · coeff ( E , E )  , -  ]
[ F ->  · coeff ( E , E )  , +  ]
[ F ->  · coeff ( E , E )  , *  ]
[ F ->  · coeff ( E , E )  , /  ]
[ F ->  · coeff ( E , E )  , %  ]
[ F ->  · deg ( E )  , ;  ]
[ F ->  · deg ( E )  , -  ]
[ F ->  · deg ( E )  , +  ]
[ F ->  · deg ( E )  , *  ]
[ F ->  · deg ( E )  , /  ]
[ F ->  · deg ( E )  , %  ]
}

set 195 = GOTO( set 121 , / ) :
{
[ T -> T /  · F  , ;  ]
[ T -> T /  · F  , -  ]
[ T -> T /  · F  , +  ]
[ T -> T /  · F  , *  ]
[ T -> T /  · F  , /  ]
[ T -> T /  · F  , %  ]
[ F ->  · V  , ;  ]
[ F ->  · V  , -  ]
[ F ->  · V  , +  ]
[ F ->  · V  , *  ]
[ F ->  · V  , /  ]
[ F ->  · V  , %  ]
[ F ->  · ( E )  , ;  ]
[ F ->  · ( E )  , -  ]
[ F ->  · ( E )  , +  ]
[ F ->  · ( E )  , *  ]
[ F ->  · ( E )  , /  ]
[ F ->  · ( E )  , %  ]
[ F ->  · C  , ;  ]
[ F ->  · C  , -  ]
[ F ->  · C  , +  ]
[ F ->  · C  , *  ]
[ F ->  · C  , /  ]
[ F ->  · C  , %  ]
[ F ->  · value ( E , E )  , ;  ]
[ F ->  · value ( E , E )  , -  ]
[ F ->  · value ( E , E )  , +  ]
[ F ->  · value ( E , E )  , *  ]
[ F ->  · value ( E , E )  , /  ]
[ F ->  · value ( E , E )  , %  ]
[ F ->  · derivative ( E )  , ;  ]
[ F ->  · derivative ( E )  , -  ]
[ F ->  · derivative ( E )  , +  ]
[ F ->  · derivative ( E )  , *  ]
[ F ->  · derivative ( E )  , /  ]
[ F ->  · derivative ( E )  , %  ]
[ F ->  · coeff ( E , E )  , ;  ]
[ F ->  · coeff ( E , E )  , -  ]
[ F ->  · coeff ( E , E )  , +  ]
[ F ->  · coeff ( E , E )  , *  ]
[ F ->  · coeff ( E , E )  , /  ]
[ F ->  · coeff ( E , E )  , %  ]
[ F ->  · deg ( E )  , ;  ]
[ F ->  · deg ( E )  , -  ]
[ F ->  · deg ( E )  , +  ]
[ F ->  · deg ( E )  , *  ]
[ F ->  · deg ( E )  , /  ]
[ F ->  · deg ( E )  , %  ]
}

set 196 = GOTO( set 122 , <listA> ) :
{
[ <listA> -> = V <listA>  ·  ,  ]
[ <listA> -> = V <listA>  ·  , ;  ]
[ <listA> -> = V <listA>  ·  , V  ]
[ <listA> -> = V <listA>  ·  , :  ]
[ <listA> -> = V <listA>  ·  , let  ]
[ <listA> -> = V <listA>  ·  , if  ]
[ <listA> -> = V <listA>  ·  , goto  ]
[ <listA> -> = V <listA>  ·  , load  ]
[ <listA> -> = V <listA>  ·  , put  ]
[ <listA> -> = V <listA>  ·  , switch  ]
[ <listA> -> = V <listA>  ·  , error  ]
[ <listA> -> = V <listA>  ·  , comment  ]
}

set 197 = GOTO( set 123 , ( ) :
{
[ E ->  · E - T  , ,  ]
[ E ->  · E - T  , -  ]
[ E ->  · E - T  , +  ]
[ E ->  · E + T  , ,  ]
[ E ->  · E + T  , -  ]
[ E ->  · E + T  , +  ]
[ E ->  · T  , ,  ]
[ E ->  · T  , -  ]
[ E ->  · T  , +  ]
[ T ->  · T * F  , ,  ]
[ T ->  · T * F  , -  ]
[ T ->  · T * F  , +  ]
[ T ->  · T * F  , *  ]
[ T ->  · T * F  , /  ]
[ T ->  · T * F  , %  ]
[ T ->  · T / F  , ,  ]
[ T ->  · T / F  , -  ]
[ T ->  · T / F  , +  ]
[ T ->  · T / F  , *  ]
[ T ->  · T / F  , /  ]
[ T ->  · T / F  , %  ]
[ T ->  · T % F  , ,  ]
[ T ->  · T % F  , -  ]
[ T ->  · T % F  , +  ]
[ T ->  · T % F  , *  ]
[ T ->  · T % F  , /  ]
[ T ->  · T % F  , %  ]
[ T ->  · F  , ,  ]
[ T ->  · F  , -  ]
[ T ->  · F  , +  ]
[ T ->  · F  , *  ]
[ T ->  · F  , /  ]
[ T ->  · F  , %  ]
[ F ->  · V  , ,  ]
[ F ->  · V  , -  ]
[ F ->  · V  , +  ]
[ F ->  · V  , *  ]
[ F ->  · V  , /  ]
[ F ->  · V  , %  ]
[ F ->  · ( E )  , ,  ]
[ F ->  · ( E )  , -  ]
[ F ->  · ( E )  , +  ]
[ F ->  · ( E )  , *  ]
[ F ->  · ( E )  , /  ]
[ F ->  · ( E )  , %  ]
[ F ->  · C  , ,  ]
[ F ->  · C  , -  ]
[ F ->  · C  , +  ]
[ F ->  · C  , *  ]
[ F ->  · C  , /  ]
[ F ->  · C  , %  ]
[ F ->  · value ( E , E )  , ,  ]
[ F ->  · value ( E , E )  , -  ]
[ F ->  · value ( E , E )  , +  ]
[ F ->  · value ( E , E )  , *  ]
[ F ->  · value ( E , E )  , /  ]
[ F ->  · value ( E , E )  , %  ]
[ F ->  · derivative ( E )  , ,  ]
[ F ->  · derivative ( E )  , -  ]
[ F ->  · derivative ( E )  , +  ]
[ F ->  · derivative ( E )  , *  ]
[ F ->  · derivative ( E )  , /  ]
[ F ->  · derivative ( E )  , %  ]
[ F ->  · coeff ( E , E )  , ,  ]
[ F ->  · coeff ( E , E )  , -  ]
[ F ->  · coeff ( E , E )  , +  ]
[ F ->  · coeff ( E , E )  , *  ]
[ F ->  · coeff ( E , E )  , /  ]
[ F ->  · coeff ( E , E )  , %  ]
[ F ->  · deg ( E )  , ,  ]
[ F ->  · deg ( E )  , -  ]
[ F ->  · deg ( E )  , +  ]
[ F ->  · deg ( E )  , *  ]
[ F ->  · deg ( E )  , /  ]
[ F ->  · deg ( E )  , %  ]
[ F -> coeff (  · E , E )  , ;  ]
[ F -> coeff (  · E , E )  , -  ]
[ F -> coeff (  · E , E )  , +  ]
[ F -> coeff (  · E , E )  , *  ]
[ F -> coeff (  · E , E )  , /  ]
[ F -> coeff (  · E , E )  , %  ]
}

set 198 = GOTO( set 124 , ( ) :
{
[ E ->  · E - T  , )  ]
[ E ->  · E - T  , -  ]
[ E ->  · E - T  , +  ]
[ E ->  · E + T  , )  ]
[ E ->  · E + T  , -  ]
[ E ->  · E + T  , +  ]
[ E ->  · T  , )  ]
[ E ->  · T  , -  ]
[ E ->  · T  , +  ]
[ T ->  · T * F  , )  ]
[ T ->  · T * F  , -  ]
[ T ->  · T * F  , +  ]
[ T ->  · T * F  , *  ]
[ T ->  · T * F  , /  ]
[ T ->  · T * F  , %  ]
[ T ->  · T / F  , )  ]
[ T ->  · T / F  , -  ]
[ T ->  · T / F  , +  ]
[ T ->  · T / F  , *  ]
[ T ->  · T / F  , /  ]
[ T ->  · T / F  , %  ]
[ T ->  · T % F  , )  ]
[ T ->  · T % F  , -  ]
[ T ->  · T % F  , +  ]
[ T ->  · T % F  , *  ]
[ T ->  · T % F  , /  ]
[ T ->  · T % F  , %  ]
[ T ->  · F  , )  ]
[ T ->  · F  , -  ]
[ T ->  · F  , +  ]
[ T ->  · F  , *  ]
[ T ->  · F  , /  ]
[ T ->  · F  , %  ]
[ F ->  · V  , )  ]
[ F ->  · V  , -  ]
[ F ->  · V  , +  ]
[ F ->  · V  , *  ]
[ F ->  · V  , /  ]
[ F ->  · V  , %  ]
[ F ->  · ( E )  , )  ]
[ F ->  · ( E )  , -  ]
[ F ->  · ( E )  , +  ]
[ F ->  · ( E )  , *  ]
[ F ->  · ( E )  , /  ]
[ F ->  · ( E )  , %  ]
[ F ->  · C  , )  ]
[ F ->  · C  , -  ]
[ F ->  · C  , +  ]
[ F ->  · C  , *  ]
[ F ->  · C  , /  ]
[ F ->  · C  , %  ]
[ F ->  · value ( E , E )  , )  ]
[ F ->  · value ( E , E )  , -  ]
[ F ->  · value ( E , E )  , +  ]
[ F ->  · value ( E , E )  , *  ]
[ F ->  · value ( E , E )  , /  ]
[ F ->  · value ( E , E )  , %  ]
[ F ->  · derivative ( E )  , )  ]
[ F ->  · derivative ( E )  , -  ]
[ F ->  · derivative ( E )  , +  ]
[ F ->  · derivative ( E )  , *  ]
[ F ->  · derivative ( E )  , /  ]
[ F ->  · derivative ( E )  , %  ]
[ F ->  · coeff ( E , E )  , )  ]
[ F ->  · coeff ( E , E )  , -  ]
[ F ->  · coeff ( E , E )  , +  ]
[ F ->  · coeff ( E , E )  , *  ]
[ F ->  · coeff ( E , E )  , /  ]
[ F ->  · coeff ( E , E )  , %  ]
[ F ->  · deg ( E )  , )  ]
[ F ->  · deg ( E )  , -  ]
[ F ->  · deg ( E )  , +  ]
[ F ->  · deg ( E )  , *  ]
[ F ->  · deg ( E )  , /  ]
[ F ->  · deg ( E )  , %  ]
[ F -> deg (  · E )  , ;  ]
[ F -> deg (  · E )  , -  ]
[ F -> deg (  · E )  , +  ]
[ F -> deg (  · E )  , *  ]
[ F -> deg (  · E )  , /  ]
[ F -> deg (  · E )  , %  ]
}

set 199 = GOTO( set 125 , ( ) :
{
[ E ->  · E - T  , )  ]
[ E ->  · E - T  , -  ]
[ E ->  · E - T  , +  ]
[ E ->  · E + T  , )  ]
[ E ->  · E + T  , -  ]
[ E ->  · E + T  , +  ]
[ E ->  · T  , )  ]
[ E ->  · T  , -  ]
[ E ->  · T  , +  ]
[ T ->  · T * F  , )  ]
[ T ->  · T * F  , -  ]
[ T ->  · T * F  , +  ]
[ T ->  · T * F  , *  ]
[ T ->  · T * F  , /  ]
[ T ->  · T * F  , %  ]
[ T ->  · T / F  , )  ]
[ T ->  · T / F  , -  ]
[ T ->  · T / F  , +  ]
[ T ->  · T / F  , *  ]
[ T ->  · T / F  , /  ]
[ T ->  · T / F  , %  ]
[ T ->  · T % F  , )  ]
[ T ->  · T % F  , -  ]
[ T ->  · T % F  , +  ]
[ T ->  · T % F  , *  ]
[ T ->  · T % F  , /  ]
[ T ->  · T % F  , %  ]
[ T ->  · F  , )  ]
[ T ->  · F  , -  ]
[ T ->  · F  , +  ]
[ T ->  · F  , *  ]
[ T ->  · F  , /  ]
[ T ->  · F  , %  ]
[ F ->  · V  , )  ]
[ F ->  · V  , -  ]
[ F ->  · V  , +  ]
[ F ->  · V  , *  ]
[ F ->  · V  , /  ]
[ F ->  · V  , %  ]
[ F ->  · ( E )  , )  ]
[ F ->  · ( E )  , -  ]
[ F ->  · ( E )  , +  ]
[ F ->  · ( E )  , *  ]
[ F ->  · ( E )  , /  ]
[ F ->  · ( E )  , %  ]
[ F ->  · C  , )  ]
[ F ->  · C  , -  ]
[ F ->  · C  , +  ]
[ F ->  · C  , *  ]
[ F ->  · C  , /  ]
[ F ->  · C  , %  ]
[ F ->  · value ( E , E )  , )  ]
[ F ->  · value ( E , E )  , -  ]
[ F ->  · value ( E , E )  , +  ]
[ F ->  · value ( E , E )  , *  ]
[ F ->  · value ( E , E )  , /  ]
[ F ->  · value ( E , E )  , %  ]
[ F ->  · derivative ( E )  , )  ]
[ F ->  · derivative ( E )  , -  ]
[ F ->  · derivative ( E )  , +  ]
[ F ->  · derivative ( E )  , *  ]
[ F ->  · derivative ( E )  , /  ]
[ F ->  · derivative ( E )  , %  ]
[ F ->  · coeff ( E , E )  , )  ]
[ F ->  · coeff ( E , E )  , -  ]
[ F ->  · coeff ( E , E )  , +  ]
[ F ->  · coeff ( E , E )  , *  ]
[ F ->  · coeff ( E , E )  , /  ]
[ F ->  · coeff ( E , E )  , %  ]
[ F ->  · deg ( E )  , )  ]
[ F ->  · deg ( E )  , -  ]
[ F ->  · deg ( E )  , +  ]
[ F ->  · deg ( E )  , *  ]
[ F ->  · deg ( E )  , /  ]
[ F ->  · deg ( E )  , %  ]
[ F -> derivative (  · E )  , ;  ]
[ F -> derivative (  · E )  , -  ]
[ F -> derivative (  · E )  , +  ]
[ F -> derivative (  · E )  , *  ]
[ F -> derivative (  · E )  , /  ]
[ F -> derivative (  · E )  , %  ]
}

set 200 = GOTO( set 126 , ( ) :
{
[ E ->  · E - T  , ,  ]
[ E ->  · E - T  , -  ]
[ E ->  · E - T  , +  ]
[ E ->  · E + T  , ,  ]
[ E ->  · E + T  , -  ]
[ E ->  · E + T  , +  ]
[ E ->  · T  , ,  ]
[ E ->  · T  , -  ]
[ E ->  · T  , +  ]
[ T ->  · T * F  , ,  ]
[ T ->  · T * F  , -  ]
[ T ->  · T * F  , +  ]
[ T ->  · T * F  , *  ]
[ T ->  · T * F  , /  ]
[ T ->  · T * F  , %  ]
[ T ->  · T / F  , ,  ]
[ T ->  · T / F  , -  ]
[ T ->  · T / F  , +  ]
[ T ->  · T / F  , *  ]
[ T ->  · T / F  , /  ]
[ T ->  · T / F  , %  ]
[ T ->  · T % F  , ,  ]
[ T ->  · T % F  , -  ]
[ T ->  · T % F  , +  ]
[ T ->  · T % F  , *  ]
[ T ->  · T % F  , /  ]
[ T ->  · T % F  , %  ]
[ T ->  · F  , ,  ]
[ T ->  · F  , -  ]
[ T ->  · F  , +  ]
[ T ->  · F  , *  ]
[ T ->  · F  , /  ]
[ T ->  · F  , %  ]
[ F ->  · V  , ,  ]
[ F ->  · V  , -  ]
[ F ->  · V  , +  ]
[ F ->  · V  , *  ]
[ F ->  · V  , /  ]
[ F ->  · V  , %  ]
[ F ->  · ( E )  , ,  ]
[ F ->  · ( E )  , -  ]
[ F ->  · ( E )  , +  ]
[ F ->  · ( E )  , *  ]
[ F ->  · ( E )  , /  ]
[ F ->  · ( E )  , %  ]
[ F ->  · C  , ,  ]
[ F ->  · C  , -  ]
[ F ->  · C  , +  ]
[ F ->  · C  , *  ]
[ F ->  · C  , /  ]
[ F ->  · C  , %  ]
[ F ->  · value ( E , E )  , ,  ]
[ F ->  · value ( E , E )  , -  ]
[ F ->  · value ( E , E )  , +  ]
[ F ->  · value ( E , E )  , *  ]
[ F ->  · value ( E , E )  , /  ]
[ F ->  · value ( E , E )  , %  ]
[ F ->  · derivative ( E )  , ,  ]
[ F ->  · derivative ( E )  , -  ]
[ F ->  · derivative ( E )  , +  ]
[ F ->  · derivative ( E )  , *  ]
[ F ->  · derivative ( E )  , /  ]
[ F ->  · derivative ( E )  , %  ]
[ F ->  · coeff ( E , E )  , ,  ]
[ F ->  · coeff ( E , E )  , -  ]
[ F ->  · coeff ( E , E )  , +  ]
[ F ->  · coeff ( E , E )  , *  ]
[ F ->  · coeff ( E , E )  , /  ]
[ F ->  · coeff ( E , E )  , %  ]
[ F ->  · deg ( E )  , ,  ]
[ F ->  · deg ( E )  , -  ]
[ F ->  · deg ( E )  , +  ]
[ F ->  · deg ( E )  , *  ]
[ F ->  · deg ( E )  , /  ]
[ F ->  · deg ( E )  , %  ]
[ F -> value (  · E , E )  , ;  ]
[ F -> value (  · E , E )  , -  ]
[ F -> value (  · E , E )  , +  ]
[ F -> value (  · E , E )  , *  ]
[ F -> value (  · E , E )  , /  ]
[ F -> value (  · E , E )  , %  ]
}

set 201 = GOTO( set 127 , V ) :
{
[ <listV> ->  ·  , )  ]
[ <listV> ->  · , V <listV>  , )  ]
[ <listV> -> , V  · <listV>  , )  ]
}

set 202 = GOTO( set 128 , ) ) :
{
[ <op> -> load ( V <listV> )  · ;  ,  ]
[ <op> -> load ( V <listV> )  · ;  , ;  ]
[ <op> -> load ( V <listV> )  · ;  , V  ]
[ <op> -> load ( V <listV> )  · ;  , :  ]
[ <op> -> load ( V <listV> )  · ;  , let  ]
[ <op> -> load ( V <listV> )  · ;  , if  ]
[ <op> -> load ( V <listV> )  · ;  , goto  ]
[ <op> -> load ( V <listV> )  · ;  , load  ]
[ <op> -> load ( V <listV> )  · ;  , put  ]
[ <op> -> load ( V <listV> )  · ;  , switch  ]
[ <op> -> load ( V <listV> )  · ;  , error  ]
[ <op> -> load ( V <listV> )  · ;  , comment  ]
}

set 203 = GOTO( set 129 , ) ) :
{
[ F -> ( E )  ·  , ,  ]
[ F -> ( E )  ·  , )  ]
[ F -> ( E )  ·  , -  ]
[ F -> ( E )  ·  , +  ]
[ F -> ( E )  ·  , *  ]
[ F -> ( E )  ·  , /  ]
[ F -> ( E )  ·  , %  ]
}

set 204 = GOTO( set 130 , T ) :
{
[ E -> E + T  ·  , ,  ]
[ E -> E + T  ·  , )  ]
[ E -> E + T  ·  , -  ]
[ E -> E + T  ·  , +  ]
[ T -> T  · * F  , ,  ]
[ T -> T  · * F  , )  ]
[ T -> T  · * F  , -  ]
[ T -> T  · * F  , +  ]
[ T -> T  · * F  , *  ]
[ T -> T  · * F  , /  ]
[ T -> T  · * F  , %  ]
[ T -> T  · / F  , ,  ]
[ T -> T  · / F  , )  ]
[ T -> T  · / F  , -  ]
[ T -> T  · / F  , +  ]
[ T -> T  · / F  , *  ]
[ T -> T  · / F  , /  ]
[ T -> T  · / F  , %  ]
[ T -> T  · % F  , ,  ]
[ T -> T  · % F  , )  ]
[ T -> T  · % F  , -  ]
[ T -> T  · % F  , +  ]
[ T -> T  · % F  , *  ]
[ T -> T  · % F  , /  ]
[ T -> T  · % F  , %  ]
}

set 205 = GOTO( set 131 , E ) :
{
[ E -> E  · - T  , ,  ]
[ E -> E  · - T  , )  ]
[ E -> E  · - T  , -  ]
[ E -> E  · - T  , +  ]
[ E -> E  · + T  , ,  ]
[ E -> E  · + T  , )  ]
[ E -> E  · + T  , -  ]
[ E -> E  · + T  , +  ]
[ <listE> ->  ·  , )  ]
[ <listE> ->  · , E <listE>  , )  ]
[ <listE> -> , E  · <listE>  , )  ]
}

set 206 = GOTO( set 132 , T ) :
{
[ E -> E - T  ·  , ,  ]
[ E -> E - T  ·  , )  ]
[ E -> E - T  ·  , -  ]
[ E -> E - T  ·  , +  ]
[ T -> T  · * F  , ,  ]
[ T -> T  · * F  , )  ]
[ T -> T  · * F  , -  ]
[ T -> T  · * F  , +  ]
[ T -> T  · * F  , *  ]
[ T -> T  · * F  , /  ]
[ T -> T  · * F  , %  ]
[ T -> T  · / F  , ,  ]
[ T -> T  · / F  , )  ]
[ T -> T  · / F  , -  ]
[ T -> T  · / F  , +  ]
[ T -> T  · / F  , *  ]
[ T -> T  · / F  , /  ]
[ T -> T  · / F  , %  ]
[ T -> T  · % F  , ,  ]
[ T -> T  · % F  , )  ]
[ T -> T  · % F  , -  ]
[ T -> T  · % F  , +  ]
[ T -> T  · % F  , *  ]
[ T -> T  · % F  , /  ]
[ T -> T  · % F  , %  ]
}

set 207 = GOTO( set 133 , ) ) :
{
[ <op> -> put ( E <listE> )  · ;  ,  ]
[ <op> -> put ( E <listE> )  · ;  , ;  ]
[ <op> -> put ( E <listE> )  · ;  , V  ]
[ <op> -> put ( E <listE> )  · ;  , :  ]
[ <op> -> put ( E <listE> )  · ;  , let  ]
[ <op> -> put ( E <listE> )  · ;  , if  ]
[ <op> -> put ( E <listE> )  · ;  , goto  ]
[ <op> -> put ( E <listE> )  · ;  , load  ]
[ <op> -> put ( E <listE> )  · ;  , put  ]
[ <op> -> put ( E <listE> )  · ;  , switch  ]
[ <op> -> put ( E <listE> )  · ;  , error  ]
[ <op> -> put ( E <listE> )  · ;  , comment  ]
}

set 208 = GOTO( set 134 , F ) :
{
[ T -> T % F  ·  , ,  ]
[ T -> T % F  ·  , )  ]
[ T -> T % F  ·  , -  ]
[ T -> T % F  ·  , +  ]
[ T -> T % F  ·  , *  ]
[ T -> T % F  ·  , /  ]
[ T -> T % F  ·  , %  ]
}

set 209 = GOTO( set 135 , F ) :
{
[ T -> T * F  ·  , ,  ]
[ T -> T * F  ·  , )  ]
[ T -> T * F  ·  , -  ]
[ T -> T * F  ·  , +  ]
[ T -> T * F  ·  , *  ]
[ T -> T * F  ·  , /  ]
[ T -> T * F  ·  , %  ]
}

set 210 = GOTO( set 136 , F ) :
{
[ T -> T / F  ·  , ,  ]
[ T -> T / F  ·  , )  ]
[ T -> T / F  ·  , -  ]
[ T -> T / F  ·  , +  ]
[ T -> T / F  ·  , *  ]
[ T -> T / F  ·  , /  ]
[ T -> T / F  ·  , %  ]
}

set 211 = GOTO( set 137 , E ) :
{
[ E -> E  · - T  , ,  ]
[ E -> E  · - T  , -  ]
[ E -> E  · - T  , +  ]
[ E -> E  · + T  , ,  ]
[ E -> E  · + T  , -  ]
[ E -> E  · + T  , +  ]
[ F -> coeff ( E  · , E )  , ,  ]
[ F -> coeff ( E  · , E )  , )  ]
[ F -> coeff ( E  · , E )  , -  ]
[ F -> coeff ( E  · , E )  , +  ]
[ F -> coeff ( E  · , E )  , *  ]
[ F -> coeff ( E  · , E )  , /  ]
[ F -> coeff ( E  · , E )  , %  ]
}

set 212 = GOTO( set 138 , E ) :
{
[ E -> E  · - T  , )  ]
[ E -> E  · - T  , -  ]
[ E -> E  · - T  , +  ]
[ E -> E  · + T  , )  ]
[ E -> E  · + T  , -  ]
[ E -> E  · + T  , +  ]
[ F -> deg ( E  · )  , ,  ]
[ F -> deg ( E  · )  , )  ]
[ F -> deg ( E  · )  , -  ]
[ F -> deg ( E  · )  , +  ]
[ F -> deg ( E  · )  , *  ]
[ F -> deg ( E  · )  , /  ]
[ F -> deg ( E  · )  , %  ]
}

set 213 = GOTO( set 139 , E ) :
{
[ E -> E  · - T  , )  ]
[ E -> E  · - T  , -  ]
[ E -> E  · - T  , +  ]
[ E -> E  · + T  , )  ]
[ E -> E  · + T  , -  ]
[ E -> E  · + T  , +  ]
[ F -> derivative ( E  · )  , ,  ]
[ F -> derivative ( E  · )  , )  ]
[ F -> derivative ( E  · )  , -  ]
[ F -> derivative ( E  · )  , +  ]
[ F -> derivative ( E  · )  , *  ]
[ F -> derivative ( E  · )  , /  ]
[ F -> derivative ( E  · )  , %  ]
}

set 214 = GOTO( set 140 , E ) :
{
[ E -> E  · - T  , ,  ]
[ E -> E  · - T  , -  ]
[ E -> E  · - T  , +  ]
[ E -> E  · + T  , ,  ]
[ E -> E  · + T  , -  ]
[ E -> E  · + T  , +  ]
[ F -> value ( E  · , E )  , ,  ]
[ F -> value ( E  · , E )  , )  ]
[ F -> value ( E  · , E )  , -  ]
[ F -> value ( E  · , E )  , +  ]
[ F -> value ( E  · , E )  , *  ]
[ F -> value ( E  · , E )  , /  ]
[ F -> value ( E  · , E )  , %  ]
}

set 215 = GOTO( set 141 , <list_case> ) :
{
[ <switch_body> -> <list_case>  · <default>  , end  ]
[ <default> ->  ·  , end  ]
[ <default> ->  · default : <pr> <break>  , end  ]
}

set 216 = GOTO( set 141 , <switch_body> ) :
{
[ <op> -> switch ( E ) <switch_body>  · end switch ;  ,  ]
[ <op> -> switch ( E ) <switch_body>  · end switch ;  , ;  ]
[ <op> -> switch ( E ) <switch_body>  · end switch ;  , V  ]
[ <op> -> switch ( E ) <switch_body>  · end switch ;  , :  ]
[ <op> -> switch ( E ) <switch_body>  · end switch ;  , let  ]
[ <op> -> switch ( E ) <switch_body>  · end switch ;  , if  ]
[ <op> -> switch ( E ) <switch_body>  · end switch ;  , goto  ]
[ <op> -> switch ( E ) <switch_body>  · end switch ;  , load  ]
[ <op> -> switch ( E ) <switch_body>  · end switch ;  , put  ]
[ <op> -> switch ( E ) <switch_body>  · end switch ;  , switch  ]
[ <op> -> switch ( E ) <switch_body>  · end switch ;  , error  ]
[ <op> -> switch ( E ) <switch_body>  · end switch ;  , comment  ]
}

set 217 = GOTO( set 141 , case ) :
{
[ <list_case> -> case  · C : <pr> <break> <list_case>  , end  ]
[ <list_case> -> case  · C : <pr> <break> <list_case>  , default  ]
}

set 218 = GOTO( set 143 , E ) :
{
[ E -> E  · - T  , )  ]
[ E -> E  · - T  , -  ]
[ E -> E  · - T  , +  ]
[ E -> E  · + T  , )  ]
[ E -> E  · + T  , -  ]
[ E -> E  · + T  , +  ]
[ F -> ( E  · )  , to  ]
[ F -> ( E  · )  , -  ]
[ F -> ( E  · )  , +  ]
[ F -> ( E  · )  , *  ]
[ F -> ( E  · )  , /  ]
[ F -> ( E  · )  , %  ]
}

set 219 = GOTO( set 145 , + ) :
{
[ E -> E +  · T  , to  ]
[ E -> E +  · T  , -  ]
[ E -> E +  · T  , +  ]
[ T ->  · T * F  , to  ]
[ T ->  · T * F  , -  ]
[ T ->  · T * F  , +  ]
[ T ->  · T * F  , *  ]
[ T ->  · T * F  , /  ]
[ T ->  · T * F  , %  ]
[ T ->  · T / F  , to  ]
[ T ->  · T / F  , -  ]
[ T ->  · T / F  , +  ]
[ T ->  · T / F  , *  ]
[ T ->  · T / F  , /  ]
[ T ->  · T / F  , %  ]
[ T ->  · T % F  , to  ]
[ T ->  · T % F  , -  ]
[ T ->  · T % F  , +  ]
[ T ->  · T % F  , *  ]
[ T ->  · T % F  , /  ]
[ T ->  · T % F  , %  ]
[ T ->  · F  , to  ]
[ T ->  · F  , -  ]
[ T ->  · F  , +  ]
[ T ->  · F  , *  ]
[ T ->  · F  , /  ]
[ T ->  · F  , %  ]
[ F ->  · V  , to  ]
[ F ->  · V  , -  ]
[ F ->  · V  , +  ]
[ F ->  · V  , *  ]
[ F ->  · V  , /  ]
[ F ->  · V  , %  ]
[ F ->  · ( E )  , to  ]
[ F ->  · ( E )  , -  ]
[ F ->  · ( E )  , +  ]
[ F ->  · ( E )  , *  ]
[ F ->  · ( E )  , /  ]
[ F ->  · ( E )  , %  ]
[ F ->  · C  , to  ]
[ F ->  · C  , -  ]
[ F ->  · C  , +  ]
[ F ->  · C  , *  ]
[ F ->  · C  , /  ]
[ F ->  · C  , %  ]
[ F ->  · value ( E , E )  , to  ]
[ F ->  · value ( E , E )  , -  ]
[ F ->  · value ( E , E )  , +  ]
[ F ->  · value ( E , E )  , *  ]
[ F ->  · value ( E , E )  , /  ]
[ F ->  · value ( E , E )  , %  ]
[ F ->  · derivative ( E )  , to  ]
[ F ->  · derivative ( E )  , -  ]
[ F ->  · derivative ( E )  , +  ]
[ F ->  · derivative ( E )  , *  ]
[ F ->  · derivative ( E )  , /  ]
[ F ->  · derivative ( E )  , %  ]
[ F ->  · coeff ( E , E )  , to  ]
[ F ->  · coeff ( E , E )  , -  ]
[ F ->  · coeff ( E , E )  , +  ]
[ F ->  · coeff ( E , E )  , *  ]
[ F ->  · coeff ( E , E )  , /  ]
[ F ->  · coeff ( E , E )  , %  ]
[ F ->  · deg ( E )  , to  ]
[ F ->  · deg ( E )  , -  ]
[ F ->  · deg ( E )  , +  ]
[ F ->  · deg ( E )  , *  ]
[ F ->  · deg ( E )  , /  ]
[ F ->  · deg ( E )  , %  ]
}

set 220 = GOTO( set 145 , - ) :
{
[ E -> E -  · T  , to  ]
[ E -> E -  · T  , -  ]
[ E -> E -  · T  , +  ]
[ T ->  · T * F  , to  ]
[ T ->  · T * F  , -  ]
[ T ->  · T * F  , +  ]
[ T ->  · T * F  , *  ]
[ T ->  · T * F  , /  ]
[ T ->  · T * F  , %  ]
[ T ->  · T / F  , to  ]
[ T ->  · T / F  , -  ]
[ T ->  · T / F  , +  ]
[ T ->  · T / F  , *  ]
[ T ->  · T / F  , /  ]
[ T ->  · T / F  , %  ]
[ T ->  · T % F  , to  ]
[ T ->  · T % F  , -  ]
[ T ->  · T % F  , +  ]
[ T ->  · T % F  , *  ]
[ T ->  · T % F  , /  ]
[ T ->  · T % F  , %  ]
[ T ->  · F  , to  ]
[ T ->  · F  , -  ]
[ T ->  · F  , +  ]
[ T ->  · F  , *  ]
[ T ->  · F  , /  ]
[ T ->  · F  , %  ]
[ F ->  · V  , to  ]
[ F ->  · V  , -  ]
[ F ->  · V  , +  ]
[ F ->  · V  , *  ]
[ F ->  · V  , /  ]
[ F ->  · V  , %  ]
[ F ->  · ( E )  , to  ]
[ F ->  · ( E )  , -  ]
[ F ->  · ( E )  , +  ]
[ F ->  · ( E )  , *  ]
[ F ->  · ( E )  , /  ]
[ F ->  · ( E )  , %  ]
[ F ->  · C  , to  ]
[ F ->  · C  , -  ]
[ F ->  · C  , +  ]
[ F ->  · C  , *  ]
[ F ->  · C  , /  ]
[ F ->  · C  , %  ]
[ F ->  · value ( E , E )  , to  ]
[ F ->  · value ( E , E )  , -  ]
[ F ->  · value ( E , E )  , +  ]
[ F ->  · value ( E , E )  , *  ]
[ F ->  · value ( E , E )  , /  ]
[ F ->  · value ( E , E )  , %  ]
[ F ->  · derivative ( E )  , to  ]
[ F ->  · derivative ( E )  , -  ]
[ F ->  · derivative ( E )  , +  ]
[ F ->  · derivative ( E )  , *  ]
[ F ->  · derivative ( E )  , /  ]
[ F ->  · derivative ( E )  , %  ]
[ F ->  · coeff ( E , E )  , to  ]
[ F ->  · coeff ( E , E )  , -  ]
[ F ->  · coeff ( E , E )  , +  ]
[ F ->  · coeff ( E , E )  , *  ]
[ F ->  · coeff ( E , E )  , /  ]
[ F ->  · coeff ( E , E )  , %  ]
[ F ->  · deg ( E )  , to  ]
[ F ->  · deg ( E )  , -  ]
[ F ->  · deg ( E )  , +  ]
[ F ->  · deg ( E )  , *  ]
[ F ->  · deg ( E )  , /  ]
[ F ->  · deg ( E )  , %  ]
}

set 221 = GOTO( set 145 , to ) :
{
[ <op> -> V for V = E to  · E <step> <pr> next V  ,  ]
[ <op> -> V for V = E to  · E <step> <pr> next V  , ;  ]
[ <op> -> V for V = E to  · E <step> <pr> next V  , V  ]
[ <op> -> V for V = E to  · E <step> <pr> next V  , :  ]
[ <op> -> V for V = E to  · E <step> <pr> next V  , let  ]
[ <op> -> V for V = E to  · E <step> <pr> next V  , if  ]
[ <op> -> V for V = E to  · E <step> <pr> next V  , goto  ]
[ <op> -> V for V = E to  · E <step> <pr> next V  , load  ]
[ <op> -> V for V = E to  · E <step> <pr> next V  , put  ]
[ <op> -> V for V = E to  · E <step> <pr> next V  , switch  ]
[ <op> -> V for V = E to  · E <step> <pr> next V  , error  ]
[ <op> -> V for V = E to  · E <step> <pr> next V  , comment  ]
[ E ->  · E - T  , ;  ]
[ E ->  · E - T  , V  ]
[ E ->  · E - T  , :  ]
[ E ->  · E - T  , let  ]
[ E ->  · E - T  , next  ]
[ E ->  · E - T  , adding  ]
[ E ->  · E - T  , if  ]
[ E ->  · E - T  , goto  ]
[ E ->  · E - T  , load  ]
[ E ->  · E - T  , put  ]
[ E ->  · E - T  , switch  ]
[ E ->  · E - T  , error  ]
[ E ->  · E - T  , comment  ]
[ E ->  · E - T  , -  ]
[ E ->  · E - T  , +  ]
[ E ->  · E + T  , ;  ]
[ E ->  · E + T  , V  ]
[ E ->  · E + T  , :  ]
[ E ->  · E + T  , let  ]
[ E ->  · E + T  , next  ]
[ E ->  · E + T  , adding  ]
[ E ->  · E + T  , if  ]
[ E ->  · E + T  , goto  ]
[ E ->  · E + T  , load  ]
[ E ->  · E + T  , put  ]
[ E ->  · E + T  , switch  ]
[ E ->  · E + T  , error  ]
[ E ->  · E + T  , comment  ]
[ E ->  · E + T  , -  ]
[ E ->  · E + T  , +  ]
[ E ->  · T  , ;  ]
[ E ->  · T  , V  ]
[ E ->  · T  , :  ]
[ E ->  · T  , let  ]
[ E ->  · T  , next  ]
[ E ->  · T  , adding  ]
[ E ->  · T  , if  ]
[ E ->  · T  , goto  ]
[ E ->  · T  , load  ]
[ E ->  · T  , put  ]
[ E ->  · T  , switch  ]
[ E ->  · T  , error  ]
[ E ->  · T  , comment  ]
[ E ->  · T  , -  ]
[ E ->  · T  , +  ]
[ T ->  · T * F  , ;  ]
[ T ->  · T * F  , V  ]
[ T ->  · T * F  , :  ]
[ T ->  · T * F  , let  ]
[ T ->  · T * F  , next  ]
[ T ->  · T * F  , adding  ]
[ T ->  · T * F  , if  ]
[ T ->  · T * F  , goto  ]
[ T ->  · T * F  , load  ]
[ T ->  · T * F  , put  ]
[ T ->  · T * F  , switch  ]
[ T ->  · T * F  , error  ]
[ T ->  · T * F  , comment  ]
[ T ->  · T * F  , -  ]
[ T ->  · T * F  , +  ]
[ T ->  · T * F  , *  ]
[ T ->  · T * F  , /  ]
[ T ->  · T * F  , %  ]
[ T ->  · T / F  , ;  ]
[ T ->  · T / F  , V  ]
[ T ->  · T / F  , :  ]
[ T ->  · T / F  , let  ]
[ T ->  · T / F  , next  ]
[ T ->  · T / F  , adding  ]
[ T ->  · T / F  , if  ]
[ T ->  · T / F  , goto  ]
[ T ->  · T / F  , load  ]
[ T ->  · T / F  , put  ]
[ T ->  · T / F  , switch  ]
[ T ->  · T / F  , error  ]
[ T ->  · T / F  , comment  ]
[ T ->  · T / F  , -  ]
[ T ->  · T / F  , +  ]
[ T ->  · T / F  , *  ]
[ T ->  · T / F  , /  ]
[ T ->  · T / F  , %  ]
[ T ->  · T % F  , ;  ]
[ T ->  · T % F  , V  ]
[ T ->  · T % F  , :  ]
[ T ->  · T % F  , let  ]
[ T ->  · T % F  , next  ]
[ T ->  · T % F  , adding  ]
[ T ->  · T % F  , if  ]
[ T ->  · T % F  , goto  ]
[ T ->  · T % F  , load  ]
[ T ->  · T % F  , put  ]
[ T ->  · T % F  , switch  ]
[ T ->  · T % F  , error  ]
[ T ->  · T % F  , comment  ]
[ T ->  · T % F  , -  ]
[ T ->  · T % F  , +  ]
[ T ->  · T % F  , *  ]
[ T ->  · T % F  , /  ]
[ T ->  · T % F  , %  ]
[ T ->  · F  , ;  ]
[ T ->  · F  , V  ]
[ T ->  · F  , :  ]
[ T ->  · F  , let  ]
[ T ->  · F  , next  ]
[ T ->  · F  , adding  ]
[ T ->  · F  , if  ]
[ T ->  · F  , goto  ]
[ T ->  · F  , load  ]
[ T ->  · F  , put  ]
[ T ->  · F  , switch  ]
[ T ->  · F  , error  ]
[ T ->  · F  , comment  ]
[ T ->  · F  , -  ]
[ T ->  · F  , +  ]
[ T ->  · F  , *  ]
[ T ->  · F  , /  ]
[ T ->  · F  , %  ]
[ F ->  · V  , ;  ]
[ F ->  · V  , V  ]
[ F ->  · V  , :  ]
[ F ->  · V  , let  ]
[ F ->  · V  , next  ]
[ F ->  · V  , adding  ]
[ F ->  · V  , if  ]
[ F ->  · V  , goto  ]
[ F ->  · V  , load  ]
[ F ->  · V  , put  ]
[ F ->  · V  , switch  ]
[ F ->  · V  , error  ]
[ F ->  · V  , comment  ]
[ F ->  · V  , -  ]
[ F ->  · V  , +  ]
[ F ->  · V  , *  ]
[ F ->  · V  , /  ]
[ F ->  · V  , %  ]
[ F ->  · ( E )  , ;  ]
[ F ->  · ( E )  , V  ]
[ F ->  · ( E )  , :  ]
[ F ->  · ( E )  , let  ]
[ F ->  · ( E )  , next  ]
[ F ->  · ( E )  , adding  ]
[ F ->  · ( E )  , if  ]
[ F ->  · ( E )  , goto  ]
[ F ->  · ( E )  , load  ]
[ F ->  · ( E )  , put  ]
[ F ->  · ( E )  , switch  ]
[ F ->  · ( E )  , error  ]
[ F ->  · ( E )  , comment  ]
[ F ->  · ( E )  , -  ]
[ F ->  · ( E )  , +  ]
[ F ->  · ( E )  , *  ]
[ F ->  · ( E )  , /  ]
[ F ->  · ( E )  , %  ]
[ F ->  · C  , ;  ]
[ F ->  · C  , V  ]
[ F ->  · C  , :  ]
[ F ->  · C  , let  ]
[ F ->  · C  , next  ]
[ F ->  · C  , adding  ]
[ F ->  · C  , if  ]
[ F ->  · C  , goto  ]
[ F ->  · C  , load  ]
[ F ->  · C  , put  ]
[ F ->  · C  , switch  ]
[ F ->  · C  , error  ]
[ F ->  · C  , comment  ]
[ F ->  · C  , -  ]
[ F ->  · C  , +  ]
[ F ->  · C  , *  ]
[ F ->  · C  , /  ]
[ F ->  · C  , %  ]
[ F ->  · value ( E , E )  , ;  ]
[ F ->  · value ( E , E )  , V  ]
[ F ->  · value ( E , E )  , :  ]
[ F ->  · value ( E , E )  , let  ]
[ F ->  · value ( E , E )  , next  ]
[ F ->  · value ( E , E )  , adding  ]
[ F ->  · value ( E , E )  , if  ]
[ F ->  · value ( E , E )  , goto  ]
[ F ->  · value ( E , E )  , load  ]
[ F ->  · value ( E , E )  , put  ]
[ F ->  · value ( E , E )  , switch  ]
[ F ->  · value ( E , E )  , error  ]
[ F ->  · value ( E , E )  , comment  ]
[ F ->  · value ( E , E )  , -  ]
[ F ->  · value ( E , E )  , +  ]
[ F ->  · value ( E , E )  , *  ]
[ F ->  · value ( E , E )  , /  ]
[ F ->  · value ( E , E )  , %  ]
[ F ->  · derivative ( E )  , ;  ]
[ F ->  · derivative ( E )  , V  ]
[ F ->  · derivative ( E )  , :  ]
[ F ->  · derivative ( E )  , let  ]
[ F ->  · derivative ( E )  , next  ]
[ F ->  · derivative ( E )  , adding  ]
[ F ->  · derivative ( E )  , if  ]
[ F ->  · derivative ( E )  , goto  ]
[ F ->  · derivative ( E )  , load  ]
[ F ->  · derivative ( E )  , put  ]
[ F ->  · derivative ( E )  , switch  ]
[ F ->  · derivative ( E )  , error  ]
[ F ->  · derivative ( E )  , comment  ]
[ F ->  · derivative ( E )  , -  ]
[ F ->  · derivative ( E )  , +  ]
[ F ->  · derivative ( E )  , *  ]
[ F ->  · derivative ( E )  , /  ]
[ F ->  · derivative ( E )  , %  ]
[ F ->  · coeff ( E , E )  , ;  ]
[ F ->  · coeff ( E , E )  , V  ]
[ F ->  · coeff ( E , E )  , :  ]
[ F ->  · coeff ( E , E )  , let  ]
[ F ->  · coeff ( E , E )  , next  ]
[ F ->  · coeff ( E , E )  , adding  ]
[ F ->  · coeff ( E , E )  , if  ]
[ F ->  · coeff ( E , E )  , goto  ]
[ F ->  · coeff ( E , E )  , load  ]
[ F ->  · coeff ( E , E )  , put  ]
[ F ->  · coeff ( E , E )  , switch  ]
[ F ->  · coeff ( E , E )  , error  ]
[ F ->  · coeff ( E , E )  , comment  ]
[ F ->  · coeff ( E , E )  , -  ]
[ F ->  · coeff ( E , E )  , +  ]
[ F ->  · coeff ( E , E )  , *  ]
[ F ->  · coeff ( E , E )  , /  ]
[ F ->  · coeff ( E , E )  , %  ]
[ F ->  · deg ( E )  , ;  ]
[ F ->  · deg ( E )  , V  ]
[ F ->  · deg ( E )  , :  ]
[ F ->  · deg ( E )  , let  ]
[ F ->  · deg ( E )  , next  ]
[ F ->  · deg ( E )  , adding  ]
[ F ->  · deg ( E )  , if  ]
[ F ->  · deg ( E )  , goto  ]
[ F ->  · deg ( E )  , load  ]
[ F ->  · deg ( E )  , put  ]
[ F ->  · deg ( E )  , switch  ]
[ F ->  · deg ( E )  , error  ]
[ F ->  · deg ( E )  , comment  ]
[ F ->  · deg ( E )  , -  ]
[ F ->  · deg ( E )  , +  ]
[ F ->  · deg ( E )  , *  ]
[ F ->  · deg ( E )  , /  ]
[ F ->  · deg ( E )  , %  ]
}

set 222 = GOTO( set 147 , % ) :
{
[ T -> T %  · F  , to  ]
[ T -> T %  · F  , -  ]
[ T -> T %  · F  , +  ]
[ T -> T %  · F  , *  ]
[ T -> T %  · F  , /  ]
[ T -> T %  · F  , %  ]
[ F ->  · V  , to  ]
[ F ->  · V  , -  ]
[ F ->  · V  , +  ]
[ F ->  · V  , *  ]
[ F ->  · V  , /  ]
[ F ->  · V  , %  ]
[ F ->  · ( E )  , to  ]
[ F ->  · ( E )  , -  ]
[ F ->  · ( E )  , +  ]
[ F ->  · ( E )  , *  ]
[ F ->  · ( E )  , /  ]
[ F ->  · ( E )  , %  ]
[ F ->  · C  , to  ]
[ F ->  · C  , -  ]
[ F ->  · C  , +  ]
[ F ->  · C  , *  ]
[ F ->  · C  , /  ]
[ F ->  · C  , %  ]
[ F ->  · value ( E , E )  , to  ]
[ F ->  · value ( E , E )  , -  ]
[ F ->  · value ( E , E )  , +  ]
[ F ->  · value ( E , E )  , *  ]
[ F ->  · value ( E , E )  , /  ]
[ F ->  · value ( E , E )  , %  ]
[ F ->  · derivative ( E )  , to  ]
[ F ->  · derivative ( E )  , -  ]
[ F ->  · derivative ( E )  , +  ]
[ F ->  · derivative ( E )  , *  ]
[ F ->  · derivative ( E )  , /  ]
[ F ->  · derivative ( E )  , %  ]
[ F ->  · coeff ( E , E )  , to  ]
[ F ->  · coeff ( E , E )  , -  ]
[ F ->  · coeff ( E , E )  , +  ]
[ F ->  · coeff ( E , E )  , *  ]
[ F ->  · coeff ( E , E )  , /  ]
[ F ->  · coeff ( E , E )  , %  ]
[ F ->  · deg ( E )  , to  ]
[ F ->  · deg ( E )  , -  ]
[ F ->  · deg ( E )  , +  ]
[ F ->  · deg ( E )  , *  ]
[ F ->  · deg ( E )  , /  ]
[ F ->  · deg ( E )  , %  ]
}

set 223 = GOTO( set 147 , * ) :
{
[ T -> T *  · F  , to  ]
[ T -> T *  · F  , -  ]
[ T -> T *  · F  , +  ]
[ T -> T *  · F  , *  ]
[ T -> T *  · F  , /  ]
[ T -> T *  · F  , %  ]
[ F ->  · V  , to  ]
[ F ->  · V  , -  ]
[ F ->  · V  , +  ]
[ F ->  · V  , *  ]
[ F ->  · V  , /  ]
[ F ->  · V  , %  ]
[ F ->  · ( E )  , to  ]
[ F ->  · ( E )  , -  ]
[ F ->  · ( E )  , +  ]
[ F ->  · ( E )  , *  ]
[ F ->  · ( E )  , /  ]
[ F ->  · ( E )  , %  ]
[ F ->  · C  , to  ]
[ F ->  · C  , -  ]
[ F ->  · C  , +  ]
[ F ->  · C  , *  ]
[ F ->  · C  , /  ]
[ F ->  · C  , %  ]
[ F ->  · value ( E , E )  , to  ]
[ F ->  · value ( E , E )  , -  ]
[ F ->  · value ( E , E )  , +  ]
[ F ->  · value ( E , E )  , *  ]
[ F ->  · value ( E , E )  , /  ]
[ F ->  · value ( E , E )  , %  ]
[ F ->  · derivative ( E )  , to  ]
[ F ->  · derivative ( E )  , -  ]
[ F ->  · derivative ( E )  , +  ]
[ F ->  · derivative ( E )  , *  ]
[ F ->  · derivative ( E )  , /  ]
[ F ->  · derivative ( E )  , %  ]
[ F ->  · coeff ( E , E )  , to  ]
[ F ->  · coeff ( E , E )  , -  ]
[ F ->  · coeff ( E , E )  , +  ]
[ F ->  · coeff ( E , E )  , *  ]
[ F ->  · coeff ( E , E )  , /  ]
[ F ->  · coeff ( E , E )  , %  ]
[ F ->  · deg ( E )  , to  ]
[ F ->  · deg ( E )  , -  ]
[ F ->  · deg ( E )  , +  ]
[ F ->  · deg ( E )  , *  ]
[ F ->  · deg ( E )  , /  ]
[ F ->  · deg ( E )  , %  ]
}

set 224 = GOTO( set 147 , / ) :
{
[ T -> T /  · F  , to  ]
[ T -> T /  · F  , -  ]
[ T -> T /  · F  , +  ]
[ T -> T /  · F  , *  ]
[ T -> T /  · F  , /  ]
[ T -> T /  · F  , %  ]
[ F ->  · V  , to  ]
[ F ->  · V  , -  ]
[ F ->  · V  , +  ]
[ F ->  · V  , *  ]
[ F ->  · V  , /  ]
[ F ->  · V  , %  ]
[ F ->  · ( E )  , to  ]
[ F ->  · ( E )  , -  ]
[ F ->  · ( E )  , +  ]
[ F ->  · ( E )  , *  ]
[ F ->  · ( E )  , /  ]
[ F ->  · ( E )  , %  ]
[ F ->  · C  , to  ]
[ F ->  · C  , -  ]
[ F ->  · C  , +  ]
[ F ->  · C  , *  ]
[ F ->  · C  , /  ]
[ F ->  · C  , %  ]
[ F ->  · value ( E , E )  , to  ]
[ F ->  · value ( E , E )  , -  ]
[ F ->  · value ( E , E )  , +  ]
[ F ->  · value ( E , E )  , *  ]
[ F ->  · value ( E , E )  , /  ]
[ F ->  · value ( E , E )  , %  ]
[ F ->  · derivative ( E )  , to  ]
[ F ->  · derivative ( E )  , -  ]
[ F ->  · derivative ( E )  , +  ]
[ F ->  · derivative ( E )  , *  ]
[ F ->  · derivative ( E )  , /  ]
[ F ->  · derivative ( E )  , %  ]
[ F ->  · coeff ( E , E )  , to  ]
[ F ->  · coeff ( E , E )  , -  ]
[ F ->  · coeff ( E , E )  , +  ]
[ F ->  · coeff ( E , E )  , *  ]
[ F ->  · coeff ( E , E )  , /  ]
[ F ->  · coeff ( E , E )  , %  ]
[ F ->  · deg ( E )  , to  ]
[ F ->  · deg ( E )  , -  ]
[ F ->  · deg ( E )  , +  ]
[ F ->  · deg ( E )  , *  ]
[ F ->  · deg ( E )  , /  ]
[ F ->  · deg ( E )  , %  ]
}

set 225 = GOTO( set 149 , ( ) :
{
[ E ->  · E - T  , ,  ]
[ E ->  · E - T  , -  ]
[ E ->  · E - T  , +  ]
[ E ->  · E + T  , ,  ]
[ E ->  · E + T  , -  ]
[ E ->  · E + T  , +  ]
[ E ->  · T  , ,  ]
[ E ->  · T  , -  ]
[ E ->  · T  , +  ]
[ T ->  · T * F  , ,  ]
[ T ->  · T * F  , -  ]
[ T ->  · T * F  , +  ]
[ T ->  · T * F  , *  ]
[ T ->  · T * F  , /  ]
[ T ->  · T * F  , %  ]
[ T ->  · T / F  , ,  ]
[ T ->  · T / F  , -  ]
[ T ->  · T / F  , +  ]
[ T ->  · T / F  , *  ]
[ T ->  · T / F  , /  ]
[ T ->  · T / F  , %  ]
[ T ->  · T % F  , ,  ]
[ T ->  · T % F  , -  ]
[ T ->  · T % F  , +  ]
[ T ->  · T % F  , *  ]
[ T ->  · T % F  , /  ]
[ T ->  · T % F  , %  ]
[ T ->  · F  , ,  ]
[ T ->  · F  , -  ]
[ T ->  · F  , +  ]
[ T ->  · F  , *  ]
[ T ->  · F  , /  ]
[ T ->  · F  , %  ]
[ F ->  · V  , ,  ]
[ F ->  · V  , -  ]
[ F ->  · V  , +  ]
[ F ->  · V  , *  ]
[ F ->  · V  , /  ]
[ F ->  · V  , %  ]
[ F ->  · ( E )  , ,  ]
[ F ->  · ( E )  , -  ]
[ F ->  · ( E )  , +  ]
[ F ->  · ( E )  , *  ]
[ F ->  · ( E )  , /  ]
[ F ->  · ( E )  , %  ]
[ F ->  · C  , ,  ]
[ F ->  · C  , -  ]
[ F ->  · C  , +  ]
[ F ->  · C  , *  ]
[ F ->  · C  , /  ]
[ F ->  · C  , %  ]
[ F ->  · value ( E , E )  , ,  ]
[ F ->  · value ( E , E )  , -  ]
[ F ->  · value ( E , E )  , +  ]
[ F ->  · value ( E , E )  , *  ]
[ F ->  · value ( E , E )  , /  ]
[ F ->  · value ( E , E )  , %  ]
[ F ->  · derivative ( E )  , ,  ]
[ F ->  · derivative ( E )  , -  ]
[ F ->  · derivative ( E )  , +  ]
[ F ->  · derivative ( E )  , *  ]
[ F ->  · derivative ( E )  , /  ]
[ F ->  · derivative ( E )  , %  ]
[ F ->  · coeff ( E , E )  , ,  ]
[ F ->  · coeff ( E , E )  , -  ]
[ F ->  · coeff ( E , E )  , +  ]
[ F ->  · coeff ( E , E )  , *  ]
[ F ->  · coeff ( E , E )  , /  ]
[ F ->  · coeff ( E , E )  , %  ]
[ F ->  · deg ( E )  , ,  ]
[ F ->  · deg ( E )  , -  ]
[ F ->  · deg ( E )  , +  ]
[ F ->  · deg ( E )  , *  ]
[ F ->  · deg ( E )  , /  ]
[ F ->  · deg ( E )  , %  ]
[ F -> coeff (  · E , E )  , to  ]
[ F -> coeff (  · E , E )  , -  ]
[ F -> coeff (  · E , E )  , +  ]
[ F -> coeff (  · E , E )  , *  ]
[ F -> coeff (  · E , E )  , /  ]
[ F -> coeff (  · E , E )  , %  ]
}

set 226 = GOTO( set 150 , ( ) :
{
[ E ->  · E - T  , )  ]
[ E ->  · E - T  , -  ]
[ E ->  · E - T  , +  ]
[ E ->  · E + T  , )  ]
[ E ->  · E + T  , -  ]
[ E ->  · E + T  , +  ]
[ E ->  · T  , )  ]
[ E ->  · T  , -  ]
[ E ->  · T  , +  ]
[ T ->  · T * F  , )  ]
[ T ->  · T * F  , -  ]
[ T ->  · T * F  , +  ]
[ T ->  · T * F  , *  ]
[ T ->  · T * F  , /  ]
[ T ->  · T * F  , %  ]
[ T ->  · T / F  , )  ]
[ T ->  · T / F  , -  ]
[ T ->  · T / F  , +  ]
[ T ->  · T / F  , *  ]
[ T ->  · T / F  , /  ]
[ T ->  · T / F  , %  ]
[ T ->  · T % F  , )  ]
[ T ->  · T % F  , -  ]
[ T ->  · T % F  , +  ]
[ T ->  · T % F  , *  ]
[ T ->  · T % F  , /  ]
[ T ->  · T % F  , %  ]
[ T ->  · F  , )  ]
[ T ->  · F  , -  ]
[ T ->  · F  , +  ]
[ T ->  · F  , *  ]
[ T ->  · F  , /  ]
[ T ->  · F  , %  ]
[ F ->  · V  , )  ]
[ F ->  · V  , -  ]
[ F ->  · V  , +  ]
[ F ->  · V  , *  ]
[ F ->  · V  , /  ]
[ F ->  · V  , %  ]
[ F ->  · ( E )  , )  ]
[ F ->  · ( E )  , -  ]
[ F ->  · ( E )  , +  ]
[ F ->  · ( E )  , *  ]
[ F ->  · ( E )  , /  ]
[ F ->  · ( E )  , %  ]
[ F ->  · C  , )  ]
[ F ->  · C  , -  ]
[ F ->  · C  , +  ]
[ F ->  · C  , *  ]
[ F ->  · C  , /  ]
[ F ->  · C  , %  ]
[ F ->  · value ( E , E )  , )  ]
[ F ->  · value ( E , E )  , -  ]
[ F ->  · value ( E , E )  , +  ]
[ F ->  · value ( E , E )  , *  ]
[ F ->  · value ( E , E )  , /  ]
[ F ->  · value ( E , E )  , %  ]
[ F ->  · derivative ( E )  , )  ]
[ F ->  · derivative ( E )  , -  ]
[ F ->  · derivative ( E )  , +  ]
[ F ->  · derivative ( E )  , *  ]
[ F ->  · derivative ( E )  , /  ]
[ F ->  · derivative ( E )  , %  ]
[ F ->  · coeff ( E , E )  , )  ]
[ F ->  · coeff ( E , E )  , -  ]
[ F ->  · coeff ( E , E )  , +  ]
[ F ->  · coeff ( E , E )  , *  ]
[ F ->  · coeff ( E , E )  , /  ]
[ F ->  · coeff ( E , E )  , %  ]
[ F ->  · deg ( E )  , )  ]
[ F ->  · deg ( E )  , -  ]
[ F ->  · deg ( E )  , +  ]
[ F ->  · deg ( E )  , *  ]
[ F ->  · deg ( E )  , /  ]
[ F ->  · deg ( E )  , %  ]
[ F -> deg (  · E )  , to  ]
[ F -> deg (  · E )  , -  ]
[ F -> deg (  · E )  , +  ]
[ F -> deg (  · E )  , *  ]
[ F -> deg (  · E )  , /  ]
[ F -> deg (  · E )  , %  ]
}

set 227 = GOTO( set 151 , ( ) :
{
[ E ->  · E - T  , )  ]
[ E ->  · E - T  , -  ]
[ E ->  · E - T  , +  ]
[ E ->  · E + T  , )  ]
[ E ->  · E + T  , -  ]
[ E ->  · E + T  , +  ]
[ E ->  · T  , )  ]
[ E ->  · T  , -  ]
[ E ->  · T  , +  ]
[ T ->  · T * F  , )  ]
[ T ->  · T * F  , -  ]
[ T ->  · T * F  , +  ]
[ T ->  · T * F  , *  ]
[ T ->  · T * F  , /  ]
[ T ->  · T * F  , %  ]
[ T ->  · T / F  , )  ]
[ T ->  · T / F  , -  ]
[ T ->  · T / F  , +  ]
[ T ->  · T / F  , *  ]
[ T ->  · T / F  , /  ]
[ T ->  · T / F  , %  ]
[ T ->  · T % F  , )  ]
[ T ->  · T % F  , -  ]
[ T ->  · T % F  , +  ]
[ T ->  · T % F  , *  ]
[ T ->  · T % F  , /  ]
[ T ->  · T % F  , %  ]
[ T ->  · F  , )  ]
[ T ->  · F  , -  ]
[ T ->  · F  , +  ]
[ T ->  · F  , *  ]
[ T ->  · F  , /  ]
[ T ->  · F  , %  ]
[ F ->  · V  , )  ]
[ F ->  · V  , -  ]
[ F ->  · V  , +  ]
[ F ->  · V  , *  ]
[ F ->  · V  , /  ]
[ F ->  · V  , %  ]
[ F ->  · ( E )  , )  ]
[ F ->  · ( E )  , -  ]
[ F ->  · ( E )  , +  ]
[ F ->  · ( E )  , *  ]
[ F ->  · ( E )  , /  ]
[ F ->  · ( E )  , %  ]
[ F ->  · C  , )  ]
[ F ->  · C  , -  ]
[ F ->  · C  , +  ]
[ F ->  · C  , *  ]
[ F ->  · C  , /  ]
[ F ->  · C  , %  ]
[ F ->  · value ( E , E )  , )  ]
[ F ->  · value ( E , E )  , -  ]
[ F ->  · value ( E , E )  , +  ]
[ F ->  · value ( E , E )  , *  ]
[ F ->  · value ( E , E )  , /  ]
[ F ->  · value ( E , E )  , %  ]
[ F ->  · derivative ( E )  , )  ]
[ F ->  · derivative ( E )  , -  ]
[ F ->  · derivative ( E )  , +  ]
[ F ->  · derivative ( E )  , *  ]
[ F ->  · derivative ( E )  , /  ]
[ F ->  · derivative ( E )  , %  ]
[ F ->  · coeff ( E , E )  , )  ]
[ F ->  · coeff ( E , E )  , -  ]
[ F ->  · coeff ( E , E )  , +  ]
[ F ->  · coeff ( E , E )  , *  ]
[ F ->  · coeff ( E , E )  , /  ]
[ F ->  · coeff ( E , E )  , %  ]
[ F ->  · deg ( E )  , )  ]
[ F ->  · deg ( E )  , -  ]
[ F ->  · deg ( E )  , +  ]
[ F ->  · deg ( E )  , *  ]
[ F ->  · deg ( E )  , /  ]
[ F ->  · deg ( E )  , %  ]
[ F -> derivative (  · E )  , to  ]
[ F -> derivative (  · E )  , -  ]
[ F -> derivative (  · E )  , +  ]
[ F -> derivative (  · E )  , *  ]
[ F -> derivative (  · E )  , /  ]
[ F -> derivative (  · E )  , %  ]
}

set 228 = GOTO( set 152 , ( ) :
{
[ E ->  · E - T  , ,  ]
[ E ->  · E - T  , -  ]
[ E ->  · E - T  , +  ]
[ E ->  · E + T  , ,  ]
[ E ->  · E + T  , -  ]
[ E ->  · E + T  , +  ]
[ E ->  · T  , ,  ]
[ E ->  · T  , -  ]
[ E ->  · T  , +  ]
[ T ->  · T * F  , ,  ]
[ T ->  · T * F  , -  ]
[ T ->  · T * F  , +  ]
[ T ->  · T * F  , *  ]
[ T ->  · T * F  , /  ]
[ T ->  · T * F  , %  ]
[ T ->  · T / F  , ,  ]
[ T ->  · T / F  , -  ]
[ T ->  · T / F  , +  ]
[ T ->  · T / F  , *  ]
[ T ->  · T / F  , /  ]
[ T ->  · T / F  , %  ]
[ T ->  · T % F  , ,  ]
[ T ->  · T % F  , -  ]
[ T ->  · T % F  , +  ]
[ T ->  · T % F  , *  ]
[ T ->  · T % F  , /  ]
[ T ->  · T % F  , %  ]
[ T ->  · F  , ,  ]
[ T ->  · F  , -  ]
[ T ->  · F  , +  ]
[ T ->  · F  , *  ]
[ T ->  · F  , /  ]
[ T ->  · F  , %  ]
[ F ->  · V  , ,  ]
[ F ->  · V  , -  ]
[ F ->  · V  , +  ]
[ F ->  · V  , *  ]
[ F ->  · V  , /  ]
[ F ->  · V  , %  ]
[ F ->  · ( E )  , ,  ]
[ F ->  · ( E )  , -  ]
[ F ->  · ( E )  , +  ]
[ F ->  · ( E )  , *  ]
[ F ->  · ( E )  , /  ]
[ F ->  · ( E )  , %  ]
[ F ->  · C  , ,  ]
[ F ->  · C  , -  ]
[ F ->  · C  , +  ]
[ F ->  · C  , *  ]
[ F ->  · C  , /  ]
[ F ->  · C  , %  ]
[ F ->  · value ( E , E )  , ,  ]
[ F ->  · value ( E , E )  , -  ]
[ F ->  · value ( E , E )  , +  ]
[ F ->  · value ( E , E )  , *  ]
[ F ->  · value ( E , E )  , /  ]
[ F ->  · value ( E , E )  , %  ]
[ F ->  · derivative ( E )  , ,  ]
[ F ->  · derivative ( E )  , -  ]
[ F ->  · derivative ( E )  , +  ]
[ F ->  · derivative ( E )  , *  ]
[ F ->  · derivative ( E )  , /  ]
[ F ->  · derivative ( E )  , %  ]
[ F ->  · coeff ( E , E )  , ,  ]
[ F ->  · coeff ( E , E )  , -  ]
[ F ->  · coeff ( E , E )  , +  ]
[ F ->  · coeff ( E , E )  , *  ]
[ F ->  · coeff ( E , E )  , /  ]
[ F ->  · coeff ( E , E )  , %  ]
[ F ->  · deg ( E )  , ,  ]
[ F ->  · deg ( E )  , -  ]
[ F ->  · deg ( E )  , +  ]
[ F ->  · deg ( E )  , *  ]
[ F ->  · deg ( E )  , /  ]
[ F ->  · deg ( E )  , %  ]
[ F -> value (  · E , E )  , to  ]
[ F -> value (  · E , E )  , -  ]
[ F -> value (  · E , E )  , +  ]
[ F -> value (  · E , E )  , *  ]
[ F -> value (  · E , E )  , /  ]
[ F -> value (  · E , E )  , %  ]
}

set 229 = GOTO( set 159 , , ) :
{
[ E ->  · E - T  , )  ]
[ E ->  · E - T  , -  ]
[ E ->  · E - T  , +  ]
[ E ->  · E + T  , )  ]
[ E ->  · E + T  , -  ]
[ E ->  · E + T  , +  ]
[ E ->  · T  , )  ]
[ E ->  · T  , -  ]
[ E ->  · T  , +  ]
[ T ->  · T * F  , )  ]
[ T ->  · T * F  , -  ]
[ T ->  · T * F  , +  ]
[ T ->  · T * F  , *  ]
[ T ->  · T * F  , /  ]
[ T ->  · T * F  , %  ]
[ T ->  · T / F  , )  ]
[ T ->  · T / F  , -  ]
[ T ->  · T / F  , +  ]
[ T ->  · T / F  , *  ]
[ T ->  · T / F  , /  ]
[ T ->  · T / F  , %  ]
[ T ->  · T % F  , )  ]
[ T ->  · T % F  , -  ]
[ T ->  · T % F  , +  ]
[ T ->  · T % F  , *  ]
[ T ->  · T % F  , /  ]
[ T ->  · T % F  , %  ]
[ T ->  · F  , )  ]
[ T ->  · F  , -  ]
[ T ->  · F  , +  ]
[ T ->  · F  , *  ]
[ T ->  · F  , /  ]
[ T ->  · F  , %  ]
[ F ->  · V  , )  ]
[ F ->  · V  , -  ]
[ F ->  · V  , +  ]
[ F ->  · V  , *  ]
[ F ->  · V  , /  ]
[ F ->  · V  , %  ]
[ F ->  · ( E )  , )  ]
[ F ->  · ( E )  , -  ]
[ F ->  · ( E )  , +  ]
[ F ->  · ( E )  , *  ]
[ F ->  · ( E )  , /  ]
[ F ->  · ( E )  , %  ]
[ F ->  · C  , )  ]
[ F ->  · C  , -  ]
[ F ->  · C  , +  ]
[ F ->  · C  , *  ]
[ F ->  · C  , /  ]
[ F ->  · C  , %  ]
[ F ->  · value ( E , E )  , )  ]
[ F ->  · value ( E , E )  , -  ]
[ F ->  · value ( E , E )  , +  ]
[ F ->  · value ( E , E )  , *  ]
[ F ->  · value ( E , E )  , /  ]
[ F ->  · value ( E , E )  , %  ]
[ F ->  · derivative ( E )  , )  ]
[ F ->  · derivative ( E )  , -  ]
[ F ->  · derivative ( E )  , +  ]
[ F ->  · derivative ( E )  , *  ]
[ F ->  · derivative ( E )  , /  ]
[ F ->  · derivative ( E )  , %  ]
[ F ->  · coeff ( E , E )  , )  ]
[ F ->  · coeff ( E , E )  , -  ]
[ F ->  · coeff ( E , E )  , +  ]
[ F ->  · coeff ( E , E )  , *  ]
[ F ->  · coeff ( E , E )  , /  ]
[ F ->  · coeff ( E , E )  , %  ]
[ F ->  · deg ( E )  , )  ]
[ F ->  · deg ( E )  , -  ]
[ F ->  · deg ( E )  , +  ]
[ F ->  · deg ( E )  , *  ]
[ F ->  · deg ( E )  , /  ]
[ F ->  · deg ( E )  , %  ]
[ F -> coeff ( E ,  · E )  , )  ]
[ F -> coeff ( E ,  · E )  , -  ]
[ F -> coeff ( E ,  · E )  , +  ]
[ F -> coeff ( E ,  · E )  , *  ]
[ F -> coeff ( E ,  · E )  , /  ]
[ F -> coeff ( E ,  · E )  , %  ]
}

set 230 = GOTO( set 160 , ) ) :
{
[ F -> deg ( E )  ·  , )  ]
[ F -> deg ( E )  ·  , -  ]
[ F -> deg ( E )  ·  , +  ]
[ F -> deg ( E )  ·  , *  ]
[ F -> deg ( E )  ·  , /  ]
[ F -> deg ( E )  ·  , %  ]
}

set 231 = GOTO( set 161 , ) ) :
{
[ F -> derivative ( E )  ·  , )  ]
[ F -> derivative ( E )  ·  , -  ]
[ F -> derivative ( E )  ·  , +  ]
[ F -> derivative ( E )  ·  , *  ]
[ F -> derivative ( E )  ·  , /  ]
[ F -> derivative ( E )  ·  , %  ]
}

set 232 = GOTO( set 162 , , ) :
{
[ E ->  · E - T  , )  ]
[ E ->  · E - T  , -  ]
[ E ->  · E - T  , +  ]
[ E ->  · E + T  , )  ]
[ E ->  · E + T  , -  ]
[ E ->  · E + T  , +  ]
[ E ->  · T  , )  ]
[ E ->  · T  , -  ]
[ E ->  · T  , +  ]
[ T ->  · T * F  , )  ]
[ T ->  · T * F  , -  ]
[ T ->  · T * F  , +  ]
[ T ->  · T * F  , *  ]
[ T ->  · T * F  , /  ]
[ T ->  · T * F  , %  ]
[ T ->  · T / F  , )  ]
[ T ->  · T / F  , -  ]
[ T ->  · T / F  , +  ]
[ T ->  · T / F  , *  ]
[ T ->  · T / F  , /  ]
[ T ->  · T / F  , %  ]
[ T ->  · T % F  , )  ]
[ T ->  · T % F  , -  ]
[ T ->  · T % F  , +  ]
[ T ->  · T % F  , *  ]
[ T ->  · T % F  , /  ]
[ T ->  · T % F  , %  ]
[ T ->  · F  , )  ]
[ T ->  · F  , -  ]
[ T ->  · F  , +  ]
[ T ->  · F  , *  ]
[ T ->  · F  , /  ]
[ T ->  · F  , %  ]
[ F ->  · V  , )  ]
[ F ->  · V  , -  ]
[ F ->  · V  , +  ]
[ F ->  · V  , *  ]
[ F ->  · V  , /  ]
[ F ->  · V  , %  ]
[ F ->  · ( E )  , )  ]
[ F ->  · ( E )  , -  ]
[ F ->  · ( E )  , +  ]
[ F ->  · ( E )  , *  ]
[ F ->  · ( E )  , /  ]
[ F ->  · ( E )  , %  ]
[ F ->  · C  , )  ]
[ F ->  · C  , -  ]
[ F ->  · C  , +  ]
[ F ->  · C  , *  ]
[ F ->  · C  , /  ]
[ F ->  · C  , %  ]
[ F ->  · value ( E , E )  , )  ]
[ F ->  · value ( E , E )  , -  ]
[ F ->  · value ( E , E )  , +  ]
[ F ->  · value ( E , E )  , *  ]
[ F ->  · value ( E , E )  , /  ]
[ F ->  · value ( E , E )  , %  ]
[ F ->  · derivative ( E )  , )  ]
[ F ->  · derivative ( E )  , -  ]
[ F ->  · derivative ( E )  , +  ]
[ F ->  · derivative ( E )  , *  ]
[ F ->  · derivative ( E )  , /  ]
[ F ->  · derivative ( E )  , %  ]
[ F ->  · coeff ( E , E )  , )  ]
[ F ->  · coeff ( E , E )  , -  ]
[ F ->  · coeff ( E , E )  , +  ]
[ F ->  · coeff ( E , E )  , *  ]
[ F ->  · coeff ( E , E )  , /  ]
[ F ->  · coeff ( E , E )  , %  ]
[ F ->  · deg ( E )  , )  ]
[ F ->  · deg ( E )  , -  ]
[ F ->  · deg ( E )  , +  ]
[ F ->  · deg ( E )  , *  ]
[ F ->  · deg ( E )  , /  ]
[ F ->  · deg ( E )  , %  ]
[ F -> value ( E ,  · E )  , )  ]
[ F -> value ( E ,  · E )  , -  ]
[ F -> value ( E ,  · E )  , +  ]
[ F -> value ( E ,  · E )  , *  ]
[ F -> value ( E ,  · E )  , /  ]
[ F -> value ( E ,  · E )  , %  ]
}

set 233 = GOTO( set 163 , ; ) :
{
[ <op> -> if <test> goto V <else> ;  ·  ,  ]
[ <op> -> if <test> goto V <else> ;  ·  , ;  ]
[ <op> -> if <test> goto V <else> ;  ·  , V  ]
[ <op> -> if <test> goto V <else> ;  ·  , :  ]
[ <op> -> if <test> goto V <else> ;  ·  , let  ]
[ <op> -> if <test> goto V <else> ;  ·  , if  ]
[ <op> -> if <test> goto V <else> ;  ·  , goto  ]
[ <op> -> if <test> goto V <else> ;  ·  , load  ]
[ <op> -> if <test> goto V <else> ;  ·  , put  ]
[ <op> -> if <test> goto V <else> ;  ·  , switch  ]
[ <op> -> if <test> goto V <else> ;  ·  , error  ]
[ <op> -> if <test> goto V <else> ;  ·  , comment  ]
}

set 234 = GOTO( set 164 , goto ) :
{
[ <else> -> else goto  · V  , ;  ]
}

set 235 = GOTO( set 165 , ) ) :
{
[ F -> ( E )  ·  , goto  ]
[ F -> ( E )  ·  , -  ]
[ F -> ( E )  ·  , +  ]
[ F -> ( E )  ·  , *  ]
[ F -> ( E )  ·  , /  ]
[ F -> ( E )  ·  , %  ]
}

set 236 = GOTO( set 166 , T ) :
{
[ E -> E + T  ·  , goto  ]
[ E -> E + T  ·  , -  ]
[ E -> E + T  ·  , +  ]
[ T -> T  · * F  , goto  ]
[ T -> T  · * F  , -  ]
[ T -> T  · * F  , +  ]
[ T -> T  · * F  , *  ]
[ T -> T  · * F  , /  ]
[ T -> T  · * F  , %  ]
[ T -> T  · / F  , goto  ]
[ T -> T  · / F  , -  ]
[ T -> T  · / F  , +  ]
[ T -> T  · / F  , *  ]
[ T -> T  · / F  , /  ]
[ T -> T  · / F  , %  ]
[ T -> T  · % F  , goto  ]
[ T -> T  · % F  , -  ]
[ T -> T  · % F  , +  ]
[ T -> T  · % F  , *  ]
[ T -> T  · % F  , /  ]
[ T -> T  · % F  , %  ]
}

set 237 = GOTO( set 167 , T ) :
{
[ E -> E - T  ·  , goto  ]
[ E -> E - T  ·  , -  ]
[ E -> E - T  ·  , +  ]
[ T -> T  · * F  , goto  ]
[ T -> T  · * F  , -  ]
[ T -> T  · * F  , +  ]
[ T -> T  · * F  , *  ]
[ T -> T  · * F  , /  ]
[ T -> T  · * F  , %  ]
[ T -> T  · / F  , goto  ]
[ T -> T  · / F  , -  ]
[ T -> T  · / F  , +  ]
[ T -> T  · / F  , *  ]
[ T -> T  · / F  , /  ]
[ T -> T  · / F  , %  ]
[ T -> T  · % F  , goto  ]
[ T -> T  · % F  , -  ]
[ T -> T  · % F  , +  ]
[ T -> T  · % F  , *  ]
[ T -> T  · % F  , /  ]
[ T -> T  · % F  , %  ]
}

set 238 = GOTO( set 168 , F ) :
{
[ T -> T % F  ·  , goto  ]
[ T -> T % F  ·  , -  ]
[ T -> T % F  ·  , +  ]
[ T -> T % F  ·  , *  ]
[ T -> T % F  ·  , /  ]
[ T -> T % F  ·  , %  ]
}

set 239 = GOTO( set 169 , F ) :
{
[ T -> T * F  ·  , goto  ]
[ T -> T * F  ·  , -  ]
[ T -> T * F  ·  , +  ]
[ T -> T * F  ·  , *  ]
[ T -> T * F  ·  , /  ]
[ T -> T * F  ·  , %  ]
}

set 240 = GOTO( set 170 , F ) :
{
[ T -> T / F  ·  , goto  ]
[ T -> T / F  ·  , -  ]
[ T -> T / F  ·  , +  ]
[ T -> T / F  ·  , *  ]
[ T -> T / F  ·  , /  ]
[ T -> T / F  ·  , %  ]
}

set 241 = GOTO( set 171 , E ) :
{
[ E -> E  · - T  , ,  ]
[ E -> E  · - T  , -  ]
[ E -> E  · - T  , +  ]
[ E -> E  · + T  , ,  ]
[ E -> E  · + T  , -  ]
[ E -> E  · + T  , +  ]
[ F -> coeff ( E  · , E )  , goto  ]
[ F -> coeff ( E  · , E )  , -  ]
[ F -> coeff ( E  · , E )  , +  ]
[ F -> coeff ( E  · , E )  , *  ]
[ F -> coeff ( E  · , E )  , /  ]
[ F -> coeff ( E  · , E )  , %  ]
}

set 242 = GOTO( set 172 , E ) :
{
[ E -> E  · - T  , )  ]
[ E -> E  · - T  , -  ]
[ E -> E  · - T  , +  ]
[ E -> E  · + T  , )  ]
[ E -> E  · + T  , -  ]
[ E -> E  · + T  , +  ]
[ F -> deg ( E  · )  , goto  ]
[ F -> deg ( E  · )  , -  ]
[ F -> deg ( E  · )  , +  ]
[ F -> deg ( E  · )  , *  ]
[ F -> deg ( E  · )  , /  ]
[ F -> deg ( E  · )  , %  ]
}

set 243 = GOTO( set 173 , E ) :
{
[ E -> E  · - T  , )  ]
[ E -> E  · - T  , -  ]
[ E -> E  · - T  , +  ]
[ E -> E  · + T  , )  ]
[ E -> E  · + T  , -  ]
[ E -> E  · + T  , +  ]
[ F -> derivative ( E  · )  , goto  ]
[ F -> derivative ( E  · )  , -  ]
[ F -> derivative ( E  · )  , +  ]
[ F -> derivative ( E  · )  , *  ]
[ F -> derivative ( E  · )  , /  ]
[ F -> derivative ( E  · )  , %  ]
}

set 244 = GOTO( set 174 , E ) :
{
[ E -> E  · - T  , ,  ]
[ E -> E  · - T  , -  ]
[ E -> E  · - T  , +  ]
[ E -> E  · + T  , ,  ]
[ E -> E  · + T  , -  ]
[ E -> E  · + T  , +  ]
[ F -> value ( E  · , E )  , goto  ]
[ F -> value ( E  · , E )  , -  ]
[ F -> value ( E  · , E )  , +  ]
[ F -> value ( E  · , E )  , *  ]
[ F -> value ( E  · , E )  , /  ]
[ F -> value ( E  · , E )  , %  ]
}

set 245 = GOTO( set 175 , ) ) :
{
[ F -> ( E )  ·  , ,  ]
[ F -> ( E )  ·  , -  ]
[ F -> ( E )  ·  , +  ]
[ F -> ( E )  ·  , *  ]
[ F -> ( E )  ·  , /  ]
[ F -> ( E )  ·  , %  ]
}

set 246 = GOTO( set 176 , T ) :
{
[ E -> E + T  ·  , ,  ]
[ E -> E + T  ·  , -  ]
[ E -> E + T  ·  , +  ]
[ T -> T  · * F  , ,  ]
[ T -> T  · * F  , -  ]
[ T -> T  · * F  , +  ]
[ T -> T  · * F  , *  ]
[ T -> T  · * F  , /  ]
[ T -> T  · * F  , %  ]
[ T -> T  · / F  , ,  ]
[ T -> T  · / F  , -  ]
[ T -> T  · / F  , +  ]
[ T -> T  · / F  , *  ]
[ T -> T  · / F  , /  ]
[ T -> T  · / F  , %  ]
[ T -> T  · % F  , ,  ]
[ T -> T  · % F  , -  ]
[ T -> T  · % F  , +  ]
[ T -> T  · % F  , *  ]
[ T -> T  · % F  , /  ]
[ T -> T  · % F  , %  ]
}

set 247 = GOTO( set 177 , E ) :
{
[ E -> E  · - T  , )  ]
[ E -> E  · - T  , -  ]
[ E -> E  · - T  , +  ]
[ E -> E  · + T  , )  ]
[ E -> E  · + T  , -  ]
[ E -> E  · + T  , +  ]
[ F -> coeff ( E , E  · )  , Rel  ]
[ F -> coeff ( E , E  · )  , -  ]
[ F -> coeff ( E , E  · )  , +  ]
[ F -> coeff ( E , E  · )  , *  ]
[ F -> coeff ( E , E  · )  , /  ]
[ F -> coeff ( E , E  · )  , %  ]
}

set 248 = GOTO( set 178 , T ) :
{
[ E -> E - T  ·  , ,  ]
[ E -> E - T  ·  , -  ]
[ E -> E - T  ·  , +  ]
[ T -> T  · * F  , ,  ]
[ T -> T  · * F  , -  ]
[ T -> T  · * F  , +  ]
[ T -> T  · * F  , *  ]
[ T -> T  · * F  , /  ]
[ T -> T  · * F  , %  ]
[ T -> T  · / F  , ,  ]
[ T -> T  · / F  , -  ]
[ T -> T  · / F  , +  ]
[ T -> T  · / F  , *  ]
[ T -> T  · / F  , /  ]
[ T -> T  · / F  , %  ]
[ T -> T  · % F  , ,  ]
[ T -> T  · % F  , -  ]
[ T -> T  · % F  , +  ]
[ T -> T  · % F  , *  ]
[ T -> T  · % F  , /  ]
[ T -> T  · % F  , %  ]
}

set 249 = GOTO( set 179 , F ) :
{
[ T -> T % F  ·  , ,  ]
[ T -> T % F  ·  , -  ]
[ T -> T % F  ·  , +  ]
[ T -> T % F  ·  , *  ]
[ T -> T % F  ·  , /  ]
[ T -> T % F  ·  , %  ]
}

set 250 = GOTO( set 180 , F ) :
{
[ T -> T * F  ·  , ,  ]
[ T -> T * F  ·  , -  ]
[ T -> T * F  ·  , +  ]
[ T -> T * F  ·  , *  ]
[ T -> T * F  ·  , /  ]
[ T -> T * F  ·  , %  ]
}

set 251 = GOTO( set 181 , F ) :
{
[ T -> T / F  ·  , ,  ]
[ T -> T / F  ·  , -  ]
[ T -> T / F  ·  , +  ]
[ T -> T / F  ·  , *  ]
[ T -> T / F  ·  , /  ]
[ T -> T / F  ·  , %  ]
}

set 252 = GOTO( set 182 , E ) :
{
[ E -> E  · - T  , ,  ]
[ E -> E  · - T  , -  ]
[ E -> E  · - T  , +  ]
[ E -> E  · + T  , ,  ]
[ E -> E  · + T  , -  ]
[ E -> E  · + T  , +  ]
[ F -> coeff ( E  · , E )  , ,  ]
[ F -> coeff ( E  · , E )  , -  ]
[ F -> coeff ( E  · , E )  , +  ]
[ F -> coeff ( E  · , E )  , *  ]
[ F -> coeff ( E  · , E )  , /  ]
[ F -> coeff ( E  · , E )  , %  ]
}

set 253 = GOTO( set 183 , E ) :
{
[ E -> E  · - T  , )  ]
[ E -> E  · - T  , -  ]
[ E -> E  · - T  , +  ]
[ E -> E  · + T  , )  ]
[ E -> E  · + T  , -  ]
[ E -> E  · + T  , +  ]
[ F -> deg ( E  · )  , ,  ]
[ F -> deg ( E  · )  , -  ]
[ F -> deg ( E  · )  , +  ]
[ F -> deg ( E  · )  , *  ]
[ F -> deg ( E  · )  , /  ]
[ F -> deg ( E  · )  , %  ]
}

set 254 = GOTO( set 184 , E ) :
{
[ E -> E  · - T  , )  ]
[ E -> E  · - T  , -  ]
[ E -> E  · - T  , +  ]
[ E -> E  · + T  , )  ]
[ E -> E  · + T  , -  ]
[ E -> E  · + T  , +  ]
[ F -> derivative ( E  · )  , ,  ]
[ F -> derivative ( E  · )  , -  ]
[ F -> derivative ( E  · )  , +  ]
[ F -> derivative ( E  · )  , *  ]
[ F -> derivative ( E  · )  , /  ]
[ F -> derivative ( E  · )  , %  ]
}

set 255 = GOTO( set 185 , E ) :
{
[ E -> E  · - T  , ,  ]
[ E -> E  · - T  , -  ]
[ E -> E  · - T  , +  ]
[ E -> E  · + T  , ,  ]
[ E -> E  · + T  , -  ]
[ E -> E  · + T  , +  ]
[ F -> value ( E  · , E )  , ,  ]
[ F -> value ( E  · , E )  , -  ]
[ F -> value ( E  · , E )  , +  ]
[ F -> value ( E  · , E )  , *  ]
[ F -> value ( E  · , E )  , /  ]
[ F -> value ( E  · , E )  , %  ]
}

set 256 = GOTO( set 188 , E ) :
{
[ E -> E  · - T  , )  ]
[ E -> E  · - T  , -  ]
[ E -> E  · - T  , +  ]
[ E -> E  · + T  , )  ]
[ E -> E  · + T  , -  ]
[ E -> E  · + T  , +  ]
[ F -> value ( E , E  · )  , Rel  ]
[ F -> value ( E , E  · )  , -  ]
[ F -> value ( E , E  · )  , +  ]
[ F -> value ( E , E  · )  , *  ]
[ F -> value ( E , E  · )  , /  ]
[ F -> value ( E , E  · )  , %  ]
}

set 257 = GOTO( set 189 , ) ) :
{
[ F -> ( E )  ·  , ;  ]
[ F -> ( E )  ·  , -  ]
[ F -> ( E )  ·  , +  ]
[ F -> ( E )  ·  , *  ]
[ F -> ( E )  ·  , /  ]
[ F -> ( E )  ·  , %  ]
}

set 258 = GOTO( set 190 , T ) :
{
[ E -> E + T  ·  , ;  ]
[ E -> E + T  ·  , -  ]
[ E -> E + T  ·  , +  ]
[ T -> T  · * F  , ;  ]
[ T -> T  · * F  , -  ]
[ T -> T  · * F  , +  ]
[ T -> T  · * F  , *  ]
[ T -> T  · * F  , /  ]
[ T -> T  · * F  , %  ]
[ T -> T  · / F  , ;  ]
[ T -> T  · / F  , -  ]
[ T -> T  · / F  , +  ]
[ T -> T  · / F  , *  ]
[ T -> T  · / F  , /  ]
[ T -> T  · / F  , %  ]
[ T -> T  · % F  , ;  ]
[ T -> T  · % F  , -  ]
[ T -> T  · % F  , +  ]
[ T -> T  · % F  , *  ]
[ T -> T  · % F  , /  ]
[ T -> T  · % F  , %  ]
}

set 259 = GOTO( set 190 , V ) :
{
[ F -> V  ·  , ;  ]
[ F -> V  ·  , -  ]
[ F -> V  ·  , +  ]
[ F -> V  ·  , *  ]
[ F -> V  ·  , /  ]
[ F -> V  ·  , %  ]
}

set 260 = GOTO( set 191 , T ) :
{
[ E -> E - T  ·  , ;  ]
[ E -> E - T  ·  , -  ]
[ E -> E - T  ·  , +  ]
[ T -> T  · * F  , ;  ]
[ T -> T  · * F  , -  ]
[ T -> T  · * F  , +  ]
[ T -> T  · * F  , *  ]
[ T -> T  · * F  , /  ]
[ T -> T  · * F  , %  ]
[ T -> T  · / F  , ;  ]
[ T -> T  · / F  , -  ]
[ T -> T  · / F  , +  ]
[ T -> T  · / F  , *  ]
[ T -> T  · / F  , /  ]
[ T -> T  · / F  , %  ]
[ T -> T  · % F  , ;  ]
[ T -> T  · % F  , -  ]
[ T -> T  · % F  , +  ]
[ T -> T  · % F  , *  ]
[ T -> T  · % F  , /  ]
[ T -> T  · % F  , %  ]
}

set 261 = GOTO( set 193 , F ) :
{
[ T -> T % F  ·  , ;  ]
[ T -> T % F  ·  , -  ]
[ T -> T % F  ·  , +  ]
[ T -> T % F  ·  , *  ]
[ T -> T % F  ·  , /  ]
[ T -> T % F  ·  , %  ]
}

set 262 = GOTO( set 194 , F ) :
{
[ T -> T * F  ·  , ;  ]
[ T -> T * F  ·  , -  ]
[ T -> T * F  ·  , +  ]
[ T -> T * F  ·  , *  ]
[ T -> T * F  ·  , /  ]
[ T -> T * F  ·  , %  ]
}

set 263 = GOTO( set 195 , F ) :
{
[ T -> T / F  ·  , ;  ]
[ T -> T / F  ·  , -  ]
[ T -> T / F  ·  , +  ]
[ T -> T / F  ·  , *  ]
[ T -> T / F  ·  , /  ]
[ T -> T / F  ·  , %  ]
}

set 264 = GOTO( set 197 , E ) :
{
[ E -> E  · - T  , ,  ]
[ E -> E  · - T  , -  ]
[ E -> E  · - T  , +  ]
[ E -> E  · + T  , ,  ]
[ E -> E  · + T  , -  ]
[ E -> E  · + T  , +  ]
[ F -> coeff ( E  · , E )  , ;  ]
[ F -> coeff ( E  · , E )  , -  ]
[ F -> coeff ( E  · , E )  , +  ]
[ F -> coeff ( E  · , E )  , *  ]
[ F -> coeff ( E  · , E )  , /  ]
[ F -> coeff ( E  · , E )  , %  ]
}

set 265 = GOTO( set 198 , E ) :
{
[ E -> E  · - T  , )  ]
[ E -> E  · - T  , -  ]
[ E -> E  · - T  , +  ]
[ E -> E  · + T  , )  ]
[ E -> E  · + T  , -  ]
[ E -> E  · + T  , +  ]
[ F -> deg ( E  · )  , ;  ]
[ F -> deg ( E  · )  , -  ]
[ F -> deg ( E  · )  , +  ]
[ F -> deg ( E  · )  , *  ]
[ F -> deg ( E  · )  , /  ]
[ F -> deg ( E  · )  , %  ]
}

set 266 = GOTO( set 199 , E ) :
{
[ E -> E  · - T  , )  ]
[ E -> E  · - T  , -  ]
[ E -> E  · - T  , +  ]
[ E -> E  · + T  , )  ]
[ E -> E  · + T  , -  ]
[ E -> E  · + T  , +  ]
[ F -> derivative ( E  · )  , ;  ]
[ F -> derivative ( E  · )  , -  ]
[ F -> derivative ( E  · )  , +  ]
[ F -> derivative ( E  · )  , *  ]
[ F -> derivative ( E  · )  , /  ]
[ F -> derivative ( E  · )  , %  ]
}

set 267 = GOTO( set 200 , E ) :
{
[ E -> E  · - T  , ,  ]
[ E -> E  · - T  , -  ]
[ E -> E  · - T  , +  ]
[ E -> E  · + T  , ,  ]
[ E -> E  · + T  , -  ]
[ E -> E  · + T  , +  ]
[ F -> value ( E  · , E )  , ;  ]
[ F -> value ( E  · , E )  , -  ]
[ F -> value ( E  · , E )  , +  ]
[ F -> value ( E  · , E )  , *  ]
[ F -> value ( E  · , E )  , /  ]
[ F -> value ( E  · , E )  , %  ]
}

set 268 = GOTO( set 201 , <listV> ) :
{
[ <listV> -> , V <listV>  ·  , )  ]
}

set 269 = GOTO( set 202 , ; ) :
{
[ <op> -> load ( V <listV> ) ;  ·  ,  ]
[ <op> -> load ( V <listV> ) ;  ·  , ;  ]
[ <op> -> load ( V <listV> ) ;  ·  , V  ]
[ <op> -> load ( V <listV> ) ;  ·  , :  ]
[ <op> -> load ( V <listV> ) ;  ·  , let  ]
[ <op> -> load ( V <listV> ) ;  ·  , if  ]
[ <op> -> load ( V <listV> ) ;  ·  , goto  ]
[ <op> -> load ( V <listV> ) ;  ·  , load  ]
[ <op> -> load ( V <listV> ) ;  ·  , put  ]
[ <op> -> load ( V <listV> ) ;  ·  , switch  ]
[ <op> -> load ( V <listV> ) ;  ·  , error  ]
[ <op> -> load ( V <listV> ) ;  ·  , comment  ]
}

set 270 = GOTO( set 205 , <listE> ) :
{
[ <listE> -> , E <listE>  ·  , )  ]
}

set 271 = GOTO( set 207 , ; ) :
{
[ <op> -> put ( E <listE> ) ;  ·  ,  ]
[ <op> -> put ( E <listE> ) ;  ·  , ;  ]
[ <op> -> put ( E <listE> ) ;  ·  , V  ]
[ <op> -> put ( E <listE> ) ;  ·  , :  ]
[ <op> -> put ( E <listE> ) ;  ·  , let  ]
[ <op> -> put ( E <listE> ) ;  ·  , if  ]
[ <op> -> put ( E <listE> ) ;  ·  , goto  ]
[ <op> -> put ( E <listE> ) ;  ·  , load  ]
[ <op> -> put ( E <listE> ) ;  ·  , put  ]
[ <op> -> put ( E <listE> ) ;  ·  , switch  ]
[ <op> -> put ( E <listE> ) ;  ·  , error  ]
[ <op> -> put ( E <listE> ) ;  ·  , comment  ]
}

set 272 = GOTO( set 211 , , ) :
{
[ E ->  · E - T  , )  ]
[ E ->  · E - T  , -  ]
[ E ->  · E - T  , +  ]
[ E ->  · E + T  , )  ]
[ E ->  · E + T  , -  ]
[ E ->  · E + T  , +  ]
[ E ->  · T  , )  ]
[ E ->  · T  , -  ]
[ E ->  · T  , +  ]
[ T ->  · T * F  , )  ]
[ T ->  · T * F  , -  ]
[ T ->  · T * F  , +  ]
[ T ->  · T * F  , *  ]
[ T ->  · T * F  , /  ]
[ T ->  · T * F  , %  ]
[ T ->  · T / F  , )  ]
[ T ->  · T / F  , -  ]
[ T ->  · T / F  , +  ]
[ T ->  · T / F  , *  ]
[ T ->  · T / F  , /  ]
[ T ->  · T / F  , %  ]
[ T ->  · T % F  , )  ]
[ T ->  · T % F  , -  ]
[ T ->  · T % F  , +  ]
[ T ->  · T % F  , *  ]
[ T ->  · T % F  , /  ]
[ T ->  · T % F  , %  ]
[ T ->  · F  , )  ]
[ T ->  · F  , -  ]
[ T ->  · F  , +  ]
[ T ->  · F  , *  ]
[ T ->  · F  , /  ]
[ T ->  · F  , %  ]
[ F ->  · V  , )  ]
[ F ->  · V  , -  ]
[ F ->  · V  , +  ]
[ F ->  · V  , *  ]
[ F ->  · V  , /  ]
[ F ->  · V  , %  ]
[ F ->  · ( E )  , )  ]
[ F ->  · ( E )  , -  ]
[ F ->  · ( E )  , +  ]
[ F ->  · ( E )  , *  ]
[ F ->  · ( E )  , /  ]
[ F ->  · ( E )  , %  ]
[ F ->  · C  , )  ]
[ F ->  · C  , -  ]
[ F ->  · C  , +  ]
[ F ->  · C  , *  ]
[ F ->  · C  , /  ]
[ F ->  · C  , %  ]
[ F ->  · value ( E , E )  , )  ]
[ F ->  · value ( E , E )  , -  ]
[ F ->  · value ( E , E )  , +  ]
[ F ->  · value ( E , E )  , *  ]
[ F ->  · value ( E , E )  , /  ]
[ F ->  · value ( E , E )  , %  ]
[ F ->  · derivative ( E )  , )  ]
[ F ->  · derivative ( E )  , -  ]
[ F ->  · derivative ( E )  , +  ]
[ F ->  · derivative ( E )  , *  ]
[ F ->  · derivative ( E )  , /  ]
[ F ->  · derivative ( E )  , %  ]
[ F ->  · coeff ( E , E )  , )  ]
[ F ->  · coeff ( E , E )  , -  ]
[ F ->  · coeff ( E , E )  , +  ]
[ F ->  · coeff ( E , E )  , *  ]
[ F ->  · coeff ( E , E )  , /  ]
[ F ->  · coeff ( E , E )  , %  ]
[ F ->  · deg ( E )  , )  ]
[ F ->  · deg ( E )  , -  ]
[ F ->  · deg ( E )  , +  ]
[ F ->  · deg ( E )  , *  ]
[ F ->  · deg ( E )  , /  ]
[ F ->  · deg ( E )  , %  ]
[ F -> coeff ( E ,  · E )  , ,  ]
[ F -> coeff ( E ,  · E )  , )  ]
[ F -> coeff ( E ,  · E )  , -  ]
[ F -> coeff ( E ,  · E )  , +  ]
[ F -> coeff ( E ,  · E )  , *  ]
[ F -> coeff ( E ,  · E )  , /  ]
[ F -> coeff ( E ,  · E )  , %  ]
}

set 273 = GOTO( set 212 , ) ) :
{
[ F -> deg ( E )  ·  , ,  ]
[ F -> deg ( E )  ·  , )  ]
[ F -> deg ( E )  ·  , -  ]
[ F -> deg ( E )  ·  , +  ]
[ F -> deg ( E )  ·  , *  ]
[ F -> deg ( E )  ·  , /  ]
[ F -> deg ( E )  ·  , %  ]
}

set 274 = GOTO( set 213 , ) ) :
{
[ F -> derivative ( E )  ·  , ,  ]
[ F -> derivative ( E )  ·  , )  ]
[ F -> derivative ( E )  ·  , -  ]
[ F -> derivative ( E )  ·  , +  ]
[ F -> derivative ( E )  ·  , *  ]
[ F -> derivative ( E )  ·  , /  ]
[ F -> derivative ( E )  ·  , %  ]
}

set 275 = GOTO( set 214 , , ) :
{
[ E ->  · E - T  , )  ]
[ E ->  · E - T  , -  ]
[ E ->  · E - T  , +  ]
[ E ->  · E + T  , )  ]
[ E ->  · E + T  , -  ]
[ E ->  · E + T  , +  ]
[ E ->  · T  , )  ]
[ E ->  · T  , -  ]
[ E ->  · T  , +  ]
[ T ->  · T * F  , )  ]
[ T ->  · T * F  , -  ]
[ T ->  · T * F  , +  ]
[ T ->  · T * F  , *  ]
[ T ->  · T * F  , /  ]
[ T ->  · T * F  , %  ]
[ T ->  · T / F  , )  ]
[ T ->  · T / F  , -  ]
[ T ->  · T / F  , +  ]
[ T ->  · T / F  , *  ]
[ T ->  · T / F  , /  ]
[ T ->  · T / F  , %  ]
[ T ->  · T % F  , )  ]
[ T ->  · T % F  , -  ]
[ T ->  · T % F  , +  ]
[ T ->  · T % F  , *  ]
[ T ->  · T % F  , /  ]
[ T ->  · T % F  , %  ]
[ T ->  · F  , )  ]
[ T ->  · F  , -  ]
[ T ->  · F  , +  ]
[ T ->  · F  , *  ]
[ T ->  · F  , /  ]
[ T ->  · F  , %  ]
[ F ->  · V  , )  ]
[ F ->  · V  , -  ]
[ F ->  · V  , +  ]
[ F ->  · V  , *  ]
[ F ->  · V  , /  ]
[ F ->  · V  , %  ]
[ F ->  · ( E )  , )  ]
[ F ->  · ( E )  , -  ]
[ F ->  · ( E )  , +  ]
[ F ->  · ( E )  , *  ]
[ F ->  · ( E )  , /  ]
[ F ->  · ( E )  , %  ]
[ F ->  · C  , )  ]
[ F ->  · C  , -  ]
[ F ->  · C  , +  ]
[ F ->  · C  , *  ]
[ F ->  · C  , /  ]
[ F ->  · C  , %  ]
[ F ->  · value ( E , E )  , )  ]
[ F ->  · value ( E , E )  , -  ]
[ F ->  · value ( E , E )  , +  ]
[ F ->  · value ( E , E )  , *  ]
[ F ->  · value ( E , E )  , /  ]
[ F ->  · value ( E , E )  , %  ]
[ F ->  · derivative ( E )  , )  ]
[ F ->  · derivative ( E )  , -  ]
[ F ->  · derivative ( E )  , +  ]
[ F ->  · derivative ( E )  , *  ]
[ F ->  · derivative ( E )  , /  ]
[ F ->  · derivative ( E )  , %  ]
[ F ->  · coeff ( E , E )  , )  ]
[ F ->  · coeff ( E , E )  , -  ]
[ F ->  · coeff ( E , E )  , +  ]
[ F ->  · coeff ( E , E )  , *  ]
[ F ->  · coeff ( E , E )  , /  ]
[ F ->  · coeff ( E , E )  , %  ]
[ F ->  · deg ( E )  , )  ]
[ F ->  · deg ( E )  , -  ]
[ F ->  · deg ( E )  , +  ]
[ F ->  · deg ( E )  , *  ]
[ F ->  · deg ( E )  , /  ]
[ F ->  · deg ( E )  , %  ]
[ F -> value ( E ,  · E )  , ,  ]
[ F -> value ( E ,  · E )  , )  ]
[ F -> value ( E ,  · E )  , -  ]
[ F -> value ( E ,  · E )  , +  ]
[ F -> value ( E ,  · E )  , *  ]
[ F -> value ( E ,  · E )  , /  ]
[ F -> value ( E ,  · E )  , %  ]
}

set 276 = GOTO( set 215 , <default> ) :
{
[ <switch_body> -> <list_case> <default>  ·  , end  ]
}

set 277 = GOTO( set 215 , default ) :
{
[ <default> -> default  · : <pr> <break>  , end  ]
}

set 278 = GOTO( set 216 , end ) :
{
[ <op> -> switch ( E ) <switch_body> end  · switch ;  ,  ]
[ <op> -> switch ( E ) <switch_body> end  · switch ;  , ;  ]
[ <op> -> switch ( E ) <switch_body> end  · switch ;  , V  ]
[ <op> -> switch ( E ) <switch_body> end  · switch ;  , :  ]
[ <op> -> switch ( E ) <switch_body> end  · switch ;  , let  ]
[ <op> -> switch ( E ) <switch_body> end  · switch ;  , if  ]
[ <op> -> switch ( E ) <switch_body> end  · switch ;  , goto  ]
[ <op> -> switch ( E ) <switch_body> end  · switch ;  , load  ]
[ <op> -> switch ( E ) <switch_body> end  · switch ;  , put  ]
[ <op> -> switch ( E ) <switch_body> end  · switch ;  , switch  ]
[ <op> -> switch ( E ) <switch_body> end  · switch ;  , error  ]
[ <op> -> switch ( E ) <switch_body> end  · switch ;  , comment  ]
}

set 279 = GOTO( set 217 , C ) :
{
[ <list_case> -> case C  · : <pr> <break> <list_case>  , end  ]
[ <list_case> -> case C  · : <pr> <break> <list_case>  , default  ]
}

set 280 = GOTO( set 218 , ) ) :
{
[ F -> ( E )  ·  , to  ]
[ F -> ( E )  ·  , -  ]
[ F -> ( E )  ·  , +  ]
[ F -> ( E )  ·  , *  ]
[ F -> ( E )  ·  , /  ]
[ F -> ( E )  ·  , %  ]
}

set 281 = GOTO( set 219 , T ) :
{
[ E -> E + T  ·  , to  ]
[ E -> E + T  ·  , -  ]
[ E -> E + T  ·  , +  ]
[ T -> T  · * F  , to  ]
[ T -> T  · * F  , -  ]
[ T -> T  · * F  , +  ]
[ T -> T  · * F  , *  ]
[ T -> T  · * F  , /  ]
[ T -> T  · * F  , %  ]
[ T -> T  · / F  , to  ]
[ T -> T  · / F  , -  ]
[ T -> T  · / F  , +  ]
[ T -> T  · / F  , *  ]
[ T -> T  · / F  , /  ]
[ T -> T  · / F  , %  ]
[ T -> T  · % F  , to  ]
[ T -> T  · % F  , -  ]
[ T -> T  · % F  , +  ]
[ T -> T  · % F  , *  ]
[ T -> T  · % F  , /  ]
[ T -> T  · % F  , %  ]
}

set 282 = GOTO( set 220 , T ) :
{
[ E -> E - T  ·  , to  ]
[ E -> E - T  ·  , -  ]
[ E -> E - T  ·  , +  ]
[ T -> T  · * F  , to  ]
[ T -> T  · * F  , -  ]
[ T -> T  · * F  , +  ]
[ T -> T  · * F  , *  ]
[ T -> T  · * F  , /  ]
[ T -> T  · * F  , %  ]
[ T -> T  · / F  , to  ]
[ T -> T  · / F  , -  ]
[ T -> T  · / F  , +  ]
[ T -> T  · / F  , *  ]
[ T -> T  · / F  , /  ]
[ T -> T  · / F  , %  ]
[ T -> T  · % F  , to  ]
[ T -> T  · % F  , -  ]
[ T -> T  · % F  , +  ]
[ T -> T  · % F  , *  ]
[ T -> T  · % F  , /  ]
[ T -> T  · % F  , %  ]
}

set 283 = GOTO( set 221 , ( ) :
{
[ E ->  · E - T  , )  ]
[ E ->  · E - T  , -  ]
[ E ->  · E - T  , +  ]
[ E ->  · E + T  , )  ]
[ E ->  · E + T  , -  ]
[ E ->  · E + T  , +  ]
[ E ->  · T  , )  ]
[ E ->  · T  , -  ]
[ E ->  · T  , +  ]
[ T ->  · T * F  , )  ]
[ T ->  · T * F  , -  ]
[ T ->  · T * F  , +  ]
[ T ->  · T * F  , *  ]
[ T ->  · T * F  , /  ]
[ T ->  · T * F  , %  ]
[ T ->  · T / F  , )  ]
[ T ->  · T / F  , -  ]
[ T ->  · T / F  , +  ]
[ T ->  · T / F  , *  ]
[ T ->  · T / F  , /  ]
[ T ->  · T / F  , %  ]
[ T ->  · T % F  , )  ]
[ T ->  · T % F  , -  ]
[ T ->  · T % F  , +  ]
[ T ->  · T % F  , *  ]
[ T ->  · T % F  , /  ]
[ T ->  · T % F  , %  ]
[ T ->  · F  , )  ]
[ T ->  · F  , -  ]
[ T ->  · F  , +  ]
[ T ->  · F  , *  ]
[ T ->  · F  , /  ]
[ T ->  · F  , %  ]
[ F ->  · V  , )  ]
[ F ->  · V  , -  ]
[ F ->  · V  , +  ]
[ F ->  · V  , *  ]
[ F ->  · V  , /  ]
[ F ->  · V  , %  ]
[ F ->  · ( E )  , )  ]
[ F ->  · ( E )  , -  ]
[ F ->  · ( E )  , +  ]
[ F ->  · ( E )  , *  ]
[ F ->  · ( E )  , /  ]
[ F ->  · ( E )  , %  ]
[ F ->  · C  , )  ]
[ F ->  · C  , -  ]
[ F ->  · C  , +  ]
[ F ->  · C  , *  ]
[ F ->  · C  , /  ]
[ F ->  · C  , %  ]
[ F ->  · value ( E , E )  , )  ]
[ F ->  · value ( E , E )  , -  ]
[ F ->  · value ( E , E )  , +  ]
[ F ->  · value ( E , E )  , *  ]
[ F ->  · value ( E , E )  , /  ]
[ F ->  · value ( E , E )  , %  ]
[ F ->  · derivative ( E )  , )  ]
[ F ->  · derivative ( E )  , -  ]
[ F ->  · derivative ( E )  , +  ]
[ F ->  · derivative ( E )  , *  ]
[ F ->  · derivative ( E )  , /  ]
[ F ->  · derivative ( E )  , %  ]
[ F ->  · coeff ( E , E )  , )  ]
[ F ->  · coeff ( E , E )  , -  ]
[ F ->  · coeff ( E , E )  , +  ]
[ F ->  · coeff ( E , E )  , *  ]
[ F ->  · coeff ( E , E )  , /  ]
[ F ->  · coeff ( E , E )  , %  ]
[ F ->  · deg ( E )  , )  ]
[ F ->  · deg ( E )  , -  ]
[ F ->  · deg ( E )  , +  ]
[ F ->  · deg ( E )  , *  ]
[ F ->  · deg ( E )  , /  ]
[ F ->  · deg ( E )  , %  ]
[ F -> (  · E )  , ;  ]
[ F -> (  · E )  , V  ]
[ F -> (  · E )  , :  ]
[ F -> (  · E )  , let  ]
[ F -> (  · E )  , next  ]
[ F -> (  · E )  , adding  ]
[ F -> (  · E )  , if  ]
[ F -> (  · E )  , goto  ]
[ F -> (  · E )  , load  ]
[ F -> (  · E )  , put  ]
[ F -> (  · E )  , switch  ]
[ F -> (  · E )  , error  ]
[ F -> (  · E )  , comment  ]
[ F -> (  · E )  , -  ]
[ F -> (  · E )  , +  ]
[ F -> (  · E )  , *  ]
[ F -> (  · E )  , /  ]
[ F -> (  · E )  , %  ]
}

set 284 = GOTO( set 221 , C ) :
{
[ F -> C  ·  , ;  ]
[ F -> C  ·  , V  ]
[ F -> C  ·  , :  ]
[ F -> C  ·  , let  ]
[ F -> C  ·  , next  ]
[ F -> C  ·  , adding  ]
[ F -> C  ·  , if  ]
[ F -> C  ·  , goto  ]
[ F -> C  ·  , load  ]
[ F -> C  ·  , put  ]
[ F -> C  ·  , switch  ]
[ F -> C  ·  , error  ]
[ F -> C  ·  , comment  ]
[ F -> C  ·  , -  ]
[ F -> C  ·  , +  ]
[ F -> C  ·  , *  ]
[ F -> C  ·  , /  ]
[ F -> C  ·  , %  ]
}

set 285 = GOTO( set 221 , E ) :
{
[ <op> -> V for V = E to E  · <step> <pr> next V  ,  ]
[ <op> -> V for V = E to E  · <step> <pr> next V  , ;  ]
[ <op> -> V for V = E to E  · <step> <pr> next V  , V  ]
[ <op> -> V for V = E to E  · <step> <pr> next V  , :  ]
[ <op> -> V for V = E to E  · <step> <pr> next V  , let  ]
[ <op> -> V for V = E to E  · <step> <pr> next V  , if  ]
[ <op> -> V for V = E to E  · <step> <pr> next V  , goto  ]
[ <op> -> V for V = E to E  · <step> <pr> next V  , load  ]
[ <op> -> V for V = E to E  · <step> <pr> next V  , put  ]
[ <op> -> V for V = E to E  · <step> <pr> next V  , switch  ]
[ <op> -> V for V = E to E  · <step> <pr> next V  , error  ]
[ <op> -> V for V = E to E  · <step> <pr> next V  , comment  ]
[ E -> E  · - T  , ;  ]
[ E -> E  · - T  , V  ]
[ E -> E  · - T  , :  ]
[ E -> E  · - T  , let  ]
[ E -> E  · - T  , next  ]
[ E -> E  · - T  , adding  ]
[ E -> E  · - T  , if  ]
[ E -> E  · - T  , goto  ]
[ E -> E  · - T  , load  ]
[ E -> E  · - T  , put  ]
[ E -> E  · - T  , switch  ]
[ E -> E  · - T  , error  ]
[ E -> E  · - T  , comment  ]
[ E -> E  · - T  , -  ]
[ E -> E  · - T  , +  ]
[ E -> E  · + T  , ;  ]
[ E -> E  · + T  , V  ]
[ E -> E  · + T  , :  ]
[ E -> E  · + T  , let  ]
[ E -> E  · + T  , next  ]
[ E -> E  · + T  , adding  ]
[ E -> E  · + T  , if  ]
[ E -> E  · + T  , goto  ]
[ E -> E  · + T  , load  ]
[ E -> E  · + T  , put  ]
[ E -> E  · + T  , switch  ]
[ E -> E  · + T  , error  ]
[ E -> E  · + T  , comment  ]
[ E -> E  · + T  , -  ]
[ E -> E  · + T  , +  ]
[ <step> ->  ·  , ;  ]
[ <step> ->  ·  , V  ]
[ <step> ->  ·  , :  ]
[ <step> ->  ·  , let  ]
[ <step> ->  ·  , next  ]
[ <step> ->  ·  , if  ]
[ <step> ->  ·  , goto  ]
[ <step> ->  ·  , load  ]
[ <step> ->  ·  , put  ]
[ <step> ->  ·  , switch  ]
[ <step> ->  ·  , error  ]
[ <step> ->  ·  , comment  ]
[ <step> ->  · adding E  , ;  ]
[ <step> ->  · adding E  , V  ]
[ <step> ->  · adding E  , :  ]
[ <step> ->  · adding E  , let  ]
[ <step> ->  · adding E  , next  ]
[ <step> ->  · adding E  , if  ]
[ <step> ->  · adding E  , goto  ]
[ <step> ->  · adding E  , load  ]
[ <step> ->  · adding E  , put  ]
[ <step> ->  · adding E  , switch  ]
[ <step> ->  · adding E  , error  ]
[ <step> ->  · adding E  , comment  ]
}

set 286 = GOTO( set 221 , F ) :
{
[ T -> F  ·  , ;  ]
[ T -> F  ·  , V  ]
[ T -> F  ·  , :  ]
[ T -> F  ·  , let  ]
[ T -> F  ·  , next  ]
[ T -> F  ·  , adding  ]
[ T -> F  ·  , if  ]
[ T -> F  ·  , goto  ]
[ T -> F  ·  , load  ]
[ T -> F  ·  , put  ]
[ T -> F  ·  , switch  ]
[ T -> F  ·  , error  ]
[ T -> F  ·  , comment  ]
[ T -> F  ·  , -  ]
[ T -> F  ·  , +  ]
[ T -> F  ·  , *  ]
[ T -> F  ·  , /  ]
[ T -> F  ·  , %  ]
}

set 287 = GOTO( set 221 , T ) :
{
[ E -> T  ·  , ;  ]
[ E -> T  ·  , V  ]
[ E -> T  ·  , :  ]
[ E -> T  ·  , let  ]
[ E -> T  ·  , next  ]
[ E -> T  ·  , adding  ]
[ E -> T  ·  , if  ]
[ E -> T  ·  , goto  ]
[ E -> T  ·  , load  ]
[ E -> T  ·  , put  ]
[ E -> T  ·  , switch  ]
[ E -> T  ·  , error  ]
[ E -> T  ·  , comment  ]
[ E -> T  ·  , -  ]
[ E -> T  ·  , +  ]
[ T -> T  · * F  , ;  ]
[ T -> T  · * F  , V  ]
[ T -> T  · * F  , :  ]
[ T -> T  · * F  , let  ]
[ T -> T  · * F  , next  ]
[ T -> T  · * F  , adding  ]
[ T -> T  · * F  , if  ]
[ T -> T  · * F  , goto  ]
[ T -> T  · * F  , load  ]
[ T -> T  · * F  , put  ]
[ T -> T  · * F  , switch  ]
[ T -> T  · * F  , error  ]
[ T -> T  · * F  , comment  ]
[ T -> T  · * F  , -  ]
[ T -> T  · * F  , +  ]
[ T -> T  · * F  , *  ]
[ T -> T  · * F  , /  ]
[ T -> T  · * F  , %  ]
[ T -> T  · / F  , ;  ]
[ T -> T  · / F  , V  ]
[ T -> T  · / F  , :  ]
[ T -> T  · / F  , let  ]
[ T -> T  · / F  , next  ]
[ T -> T  · / F  , adding  ]
[ T -> T  · / F  , if  ]
[ T -> T  · / F  , goto  ]
[ T -> T  · / F  , load  ]
[ T -> T  · / F  , put  ]
[ T -> T  · / F  , switch  ]
[ T -> T  · / F  , error  ]
[ T -> T  · / F  , comment  ]
[ T -> T  · / F  , -  ]
[ T -> T  · / F  , +  ]
[ T -> T  · / F  , *  ]
[ T -> T  · / F  , /  ]
[ T -> T  · / F  , %  ]
[ T -> T  · % F  , ;  ]
[ T -> T  · % F  , V  ]
[ T -> T  · % F  , :  ]
[ T -> T  · % F  , let  ]
[ T -> T  · % F  , next  ]
[ T -> T  · % F  , adding  ]
[ T -> T  · % F  , if  ]
[ T -> T  · % F  , goto  ]
[ T -> T  · % F  , load  ]
[ T -> T  · % F  , put  ]
[ T -> T  · % F  , switch  ]
[ T -> T  · % F  , error  ]
[ T -> T  · % F  , comment  ]
[ T -> T  · % F  , -  ]
[ T -> T  · % F  , +  ]
[ T -> T  · % F  , *  ]
[ T -> T  · % F  , /  ]
[ T -> T  · % F  , %  ]
}

set 288 = GOTO( set 221 , V ) :
{
[ F -> V  ·  , ;  ]
[ F -> V  ·  , V  ]
[ F -> V  ·  , :  ]
[ F -> V  ·  , let  ]
[ F -> V  ·  , next  ]
[ F -> V  ·  , adding  ]
[ F -> V  ·  , if  ]
[ F -> V  ·  , goto  ]
[ F -> V  ·  , load  ]
[ F -> V  ·  , put  ]
[ F -> V  ·  , switch  ]
[ F -> V  ·  , error  ]
[ F -> V  ·  , comment  ]
[ F -> V  ·  , -  ]
[ F -> V  ·  , +  ]
[ F -> V  ·  , *  ]
[ F -> V  ·  , /  ]
[ F -> V  ·  , %  ]
}

set 289 = GOTO( set 221 , coeff ) :
{
[ F -> coeff  · ( E , E )  , ;  ]
[ F -> coeff  · ( E , E )  , V  ]
[ F -> coeff  · ( E , E )  , :  ]
[ F -> coeff  · ( E , E )  , let  ]
[ F -> coeff  · ( E , E )  , next  ]
[ F -> coeff  · ( E , E )  , adding  ]
[ F -> coeff  · ( E , E )  , if  ]
[ F -> coeff  · ( E , E )  , goto  ]
[ F -> coeff  · ( E , E )  , load  ]
[ F -> coeff  · ( E , E )  , put  ]
[ F -> coeff  · ( E , E )  , switch  ]
[ F -> coeff  · ( E , E )  , error  ]
[ F -> coeff  · ( E , E )  , comment  ]
[ F -> coeff  · ( E , E )  , -  ]
[ F -> coeff  · ( E , E )  , +  ]
[ F -> coeff  · ( E , E )  , *  ]
[ F -> coeff  · ( E , E )  , /  ]
[ F -> coeff  · ( E , E )  , %  ]
}

set 290 = GOTO( set 221 , deg ) :
{
[ F -> deg  · ( E )  , ;  ]
[ F -> deg  · ( E )  , V  ]
[ F -> deg  · ( E )  , :  ]
[ F -> deg  · ( E )  , let  ]
[ F -> deg  · ( E )  , next  ]
[ F -> deg  · ( E )  , adding  ]
[ F -> deg  · ( E )  , if  ]
[ F -> deg  · ( E )  , goto  ]
[ F -> deg  · ( E )  , load  ]
[ F -> deg  · ( E )  , put  ]
[ F -> deg  · ( E )  , switch  ]
[ F -> deg  · ( E )  , error  ]
[ F -> deg  · ( E )  , comment  ]
[ F -> deg  · ( E )  , -  ]
[ F -> deg  · ( E )  , +  ]
[ F -> deg  · ( E )  , *  ]
[ F -> deg  · ( E )  , /  ]
[ F -> deg  · ( E )  , %  ]
}

set 291 = GOTO( set 221 , derivative ) :
{
[ F -> derivative  · ( E )  , ;  ]
[ F -> derivative  · ( E )  , V  ]
[ F -> derivative  · ( E )  , :  ]
[ F -> derivative  · ( E )  , let  ]
[ F -> derivative  · ( E )  , next  ]
[ F -> derivative  · ( E )  , adding  ]
[ F -> derivative  · ( E )  , if  ]
[ F -> derivative  · ( E )  , goto  ]
[ F -> derivative  · ( E )  , load  ]
[ F -> derivative  · ( E )  , put  ]
[ F -> derivative  · ( E )  , switch  ]
[ F -> derivative  · ( E )  , error  ]
[ F -> derivative  · ( E )  , comment  ]
[ F -> derivative  · ( E )  , -  ]
[ F -> derivative  · ( E )  , +  ]
[ F -> derivative  · ( E )  , *  ]
[ F -> derivative  · ( E )  , /  ]
[ F -> derivative  · ( E )  , %  ]
}

set 292 = GOTO( set 221 , value ) :
{
[ F -> value  · ( E , E )  , ;  ]
[ F -> value  · ( E , E )  , V  ]
[ F -> value  · ( E , E )  , :  ]
[ F -> value  · ( E , E )  , let  ]
[ F -> value  · ( E , E )  , next  ]
[ F -> value  · ( E , E )  , adding  ]
[ F -> value  · ( E , E )  , if  ]
[ F -> value  · ( E , E )  , goto  ]
[ F -> value  · ( E , E )  , load  ]
[ F -> value  · ( E , E )  , put  ]
[ F -> value  · ( E , E )  , switch  ]
[ F -> value  · ( E , E )  , error  ]
[ F -> value  · ( E , E )  , comment  ]
[ F -> value  · ( E , E )  , -  ]
[ F -> value  · ( E , E )  , +  ]
[ F -> value  · ( E , E )  , *  ]
[ F -> value  · ( E , E )  , /  ]
[ F -> value  · ( E , E )  , %  ]
}

set 293 = GOTO( set 222 , F ) :
{
[ T -> T % F  ·  , to  ]
[ T -> T % F  ·  , -  ]
[ T -> T % F  ·  , +  ]
[ T -> T % F  ·  , *  ]
[ T -> T % F  ·  , /  ]
[ T -> T % F  ·  , %  ]
}

set 294 = GOTO( set 223 , F ) :
{
[ T -> T * F  ·  , to  ]
[ T -> T * F  ·  , -  ]
[ T -> T * F  ·  , +  ]
[ T -> T * F  ·  , *  ]
[ T -> T * F  ·  , /  ]
[ T -> T * F  ·  , %  ]
}

set 295 = GOTO( set 224 , F ) :
{
[ T -> T / F  ·  , to  ]
[ T -> T / F  ·  , -  ]
[ T -> T / F  ·  , +  ]
[ T -> T / F  ·  , *  ]
[ T -> T / F  ·  , /  ]
[ T -> T / F  ·  , %  ]
}

set 296 = GOTO( set 225 , E ) :
{
[ E -> E  · - T  , ,  ]
[ E -> E  · - T  , -  ]
[ E -> E  · - T  , +  ]
[ E -> E  · + T  , ,  ]
[ E -> E  · + T  , -  ]
[ E -> E  · + T  , +  ]
[ F -> coeff ( E  · , E )  , to  ]
[ F -> coeff ( E  · , E )  , -  ]
[ F -> coeff ( E  · , E )  , +  ]
[ F -> coeff ( E  · , E )  , *  ]
[ F -> coeff ( E  · , E )  , /  ]
[ F -> coeff ( E  · , E )  , %  ]
}

set 297 = GOTO( set 226 , E ) :
{
[ E -> E  · - T  , )  ]
[ E -> E  · - T  , -  ]
[ E -> E  · - T  , +  ]
[ E -> E  · + T  , )  ]
[ E -> E  · + T  , -  ]
[ E -> E  · + T  , +  ]
[ F -> deg ( E  · )  , to  ]
[ F -> deg ( E  · )  , -  ]
[ F -> deg ( E  · )  , +  ]
[ F -> deg ( E  · )  , *  ]
[ F -> deg ( E  · )  , /  ]
[ F -> deg ( E  · )  , %  ]
}

set 298 = GOTO( set 227 , E ) :
{
[ E -> E  · - T  , )  ]
[ E -> E  · - T  , -  ]
[ E -> E  · - T  , +  ]
[ E -> E  · + T  , )  ]
[ E -> E  · + T  , -  ]
[ E -> E  · + T  , +  ]
[ F -> derivative ( E  · )  , to  ]
[ F -> derivative ( E  · )  , -  ]
[ F -> derivative ( E  · )  , +  ]
[ F -> derivative ( E  · )  , *  ]
[ F -> derivative ( E  · )  , /  ]
[ F -> derivative ( E  · )  , %  ]
}

set 299 = GOTO( set 228 , E ) :
{
[ E -> E  · - T  , ,  ]
[ E -> E  · - T  , -  ]
[ E -> E  · - T  , +  ]
[ E -> E  · + T  , ,  ]
[ E -> E  · + T  , -  ]
[ E -> E  · + T  , +  ]
[ F -> value ( E  · , E )  , to  ]
[ F -> value ( E  · , E )  , -  ]
[ F -> value ( E  · , E )  , +  ]
[ F -> value ( E  · , E )  , *  ]
[ F -> value ( E  · , E )  , /  ]
[ F -> value ( E  · , E )  , %  ]
}

set 300 = GOTO( set 229 , E ) :
{
[ E -> E  · - T  , )  ]
[ E -> E  · - T  , -  ]
[ E -> E  · - T  , +  ]
[ E -> E  · + T  , )  ]
[ E -> E  · + T  , -  ]
[ E -> E  · + T  , +  ]
[ F -> coeff ( E , E  · )  , )  ]
[ F -> coeff ( E , E  · )  , -  ]
[ F -> coeff ( E , E  · )  , +  ]
[ F -> coeff ( E , E  · )  , *  ]
[ F -> coeff ( E , E  · )  , /  ]
[ F -> coeff ( E , E  · )  , %  ]
}

set 301 = GOTO( set 232 , E ) :
{
[ E -> E  · - T  , )  ]
[ E -> E  · - T  , -  ]
[ E -> E  · - T  , +  ]
[ E -> E  · + T  , )  ]
[ E -> E  · + T  , -  ]
[ E -> E  · + T  , +  ]
[ F -> value ( E , E  · )  , )  ]
[ F -> value ( E , E  · )  , -  ]
[ F -> value ( E , E  · )  , +  ]
[ F -> value ( E , E  · )  , *  ]
[ F -> value ( E , E  · )  , /  ]
[ F -> value ( E , E  · )  , %  ]
}

set 302 = GOTO( set 234 , V ) :
{
[ <else> -> else goto V  ·  , ;  ]
}

set 303 = GOTO( set 241 , , ) :
{
[ E ->  · E - T  , )  ]
[ E ->  · E - T  , -  ]
[ E ->  · E - T  , +  ]
[ E ->  · E + T  , )  ]
[ E ->  · E + T  , -  ]
[ E ->  · E + T  , +  ]
[ E ->  · T  , )  ]
[ E ->  · T  , -  ]
[ E ->  · T  , +  ]
[ T ->  · T * F  , )  ]
[ T ->  · T * F  , -  ]
[ T ->  · T * F  , +  ]
[ T ->  · T * F  , *  ]
[ T ->  · T * F  , /  ]
[ T ->  · T * F  , %  ]
[ T ->  · T / F  , )  ]
[ T ->  · T / F  , -  ]
[ T ->  · T / F  , +  ]
[ T ->  · T / F  , *  ]
[ T ->  · T / F  , /  ]
[ T ->  · T / F  , %  ]
[ T ->  · T % F  , )  ]
[ T ->  · T % F  , -  ]
[ T ->  · T % F  , +  ]
[ T ->  · T % F  , *  ]
[ T ->  · T % F  , /  ]
[ T ->  · T % F  , %  ]
[ T ->  · F  , )  ]
[ T ->  · F  , -  ]
[ T ->  · F  , +  ]
[ T ->  · F  , *  ]
[ T ->  · F  , /  ]
[ T ->  · F  , %  ]
[ F ->  · V  , )  ]
[ F ->  · V  , -  ]
[ F ->  · V  , +  ]
[ F ->  · V  , *  ]
[ F ->  · V  , /  ]
[ F ->  · V  , %  ]
[ F ->  · ( E )  , )  ]
[ F ->  · ( E )  , -  ]
[ F ->  · ( E )  , +  ]
[ F ->  · ( E )  , *  ]
[ F ->  · ( E )  , /  ]
[ F ->  · ( E )  , %  ]
[ F ->  · C  , )  ]
[ F ->  · C  , -  ]
[ F ->  · C  , +  ]
[ F ->  · C  , *  ]
[ F ->  · C  , /  ]
[ F ->  · C  , %  ]
[ F ->  · value ( E , E )  , )  ]
[ F ->  · value ( E , E )  , -  ]
[ F ->  · value ( E , E )  , +  ]
[ F ->  · value ( E , E )  , *  ]
[ F ->  · value ( E , E )  , /  ]
[ F ->  · value ( E , E )  , %  ]
[ F ->  · derivative ( E )  , )  ]
[ F ->  · derivative ( E )  , -  ]
[ F ->  · derivative ( E )  , +  ]
[ F ->  · derivative ( E )  , *  ]
[ F ->  · derivative ( E )  , /  ]
[ F ->  · derivative ( E )  , %  ]
[ F ->  · coeff ( E , E )  , )  ]
[ F ->  · coeff ( E , E )  , -  ]
[ F ->  · coeff ( E , E )  , +  ]
[ F ->  · coeff ( E , E )  , *  ]
[ F ->  · coeff ( E , E )  , /  ]
[ F ->  · coeff ( E , E )  , %  ]
[ F ->  · deg ( E )  , )  ]
[ F ->  · deg ( E )  , -  ]
[ F ->  · deg ( E )  , +  ]
[ F ->  · deg ( E )  , *  ]
[ F ->  · deg ( E )  , /  ]
[ F ->  · deg ( E )  , %  ]
[ F -> coeff ( E ,  · E )  , goto  ]
[ F -> coeff ( E ,  · E )  , -  ]
[ F -> coeff ( E ,  · E )  , +  ]
[ F -> coeff ( E ,  · E )  , *  ]
[ F -> coeff ( E ,  · E )  , /  ]
[ F -> coeff ( E ,  · E )  , %  ]
}

set 304 = GOTO( set 242 , ) ) :
{
[ F -> deg ( E )  ·  , goto  ]
[ F -> deg ( E )  ·  , -  ]
[ F -> deg ( E )  ·  , +  ]
[ F -> deg ( E )  ·  , *  ]
[ F -> deg ( E )  ·  , /  ]
[ F -> deg ( E )  ·  , %  ]
}

set 305 = GOTO( set 243 , ) ) :
{
[ F -> derivative ( E )  ·  , goto  ]
[ F -> derivative ( E )  ·  , -  ]
[ F -> derivative ( E )  ·  , +  ]
[ F -> derivative ( E )  ·  , *  ]
[ F -> derivative ( E )  ·  , /  ]
[ F -> derivative ( E )  ·  , %  ]
}

set 306 = GOTO( set 244 , , ) :
{
[ E ->  · E - T  , )  ]
[ E ->  · E - T  , -  ]
[ E ->  · E - T  , +  ]
[ E ->  · E + T  , )  ]
[ E ->  · E + T  , -  ]
[ E ->  · E + T  , +  ]
[ E ->  · T  , )  ]
[ E ->  · T  , -  ]
[ E ->  · T  , +  ]
[ T ->  · T * F  , )  ]
[ T ->  · T * F  , -  ]
[ T ->  · T * F  , +  ]
[ T ->  · T * F  , *  ]
[ T ->  · T * F  , /  ]
[ T ->  · T * F  , %  ]
[ T ->  · T / F  , )  ]
[ T ->  · T / F  , -  ]
[ T ->  · T / F  , +  ]
[ T ->  · T / F  , *  ]
[ T ->  · T / F  , /  ]
[ T ->  · T / F  , %  ]
[ T ->  · T % F  , )  ]
[ T ->  · T % F  , -  ]
[ T ->  · T % F  , +  ]
[ T ->  · T % F  , *  ]
[ T ->  · T % F  , /  ]
[ T ->  · T % F  , %  ]
[ T ->  · F  , )  ]
[ T ->  · F  , -  ]
[ T ->  · F  , +  ]
[ T ->  · F  , *  ]
[ T ->  · F  , /  ]
[ T ->  · F  , %  ]
[ F ->  · V  , )  ]
[ F ->  · V  , -  ]
[ F ->  · V  , +  ]
[ F ->  · V  , *  ]
[ F ->  · V  , /  ]
[ F ->  · V  , %  ]
[ F ->  · ( E )  , )  ]
[ F ->  · ( E )  , -  ]
[ F ->  · ( E )  , +  ]
[ F ->  · ( E )  , *  ]
[ F ->  · ( E )  , /  ]
[ F ->  · ( E )  , %  ]
[ F ->  · C  , )  ]
[ F ->  · C  , -  ]
[ F ->  · C  , +  ]
[ F ->  · C  , *  ]
[ F ->  · C  , /  ]
[ F ->  · C  , %  ]
[ F ->  · value ( E , E )  , )  ]
[ F ->  · value ( E , E )  , -  ]
[ F ->  · value ( E , E )  , +  ]
[ F ->  · value ( E , E )  , *  ]
[ F ->  · value ( E , E )  , /  ]
[ F ->  · value ( E , E )  , %  ]
[ F ->  · derivative ( E )  , )  ]
[ F ->  · derivative ( E )  , -  ]
[ F ->  · derivative ( E )  , +  ]
[ F ->  · derivative ( E )  , *  ]
[ F ->  · derivative ( E )  , /  ]
[ F ->  · derivative ( E )  , %  ]
[ F ->  · coeff ( E , E )  , )  ]
[ F ->  · coeff ( E , E )  , -  ]
[ F ->  · coeff ( E , E )  , +  ]
[ F ->  · coeff ( E , E )  , *  ]
[ F ->  · coeff ( E , E )  , /  ]
[ F ->  · coeff ( E , E )  , %  ]
[ F ->  · deg ( E )  , )  ]
[ F ->  · deg ( E )  , -  ]
[ F ->  · deg ( E )  , +  ]
[ F ->  · deg ( E )  , *  ]
[ F ->  · deg ( E )  , /  ]
[ F ->  · deg ( E )  , %  ]
[ F -> value ( E ,  · E )  , goto  ]
[ F -> value ( E ,  · E )  , -  ]
[ F -> value ( E ,  · E )  , +  ]
[ F -> value ( E ,  · E )  , *  ]
[ F -> value ( E ,  · E )  , /  ]
[ F -> value ( E ,  · E )  , %  ]
}

set 307 = GOTO( set 247 , ) ) :
{
[ F -> coeff ( E , E )  ·  , Rel  ]
[ F -> coeff ( E , E )  ·  , -  ]
[ F -> coeff ( E , E )  ·  , +  ]
[ F -> coeff ( E , E )  ·  , *  ]
[ F -> coeff ( E , E )  ·  , /  ]
[ F -> coeff ( E , E )  ·  , %  ]
}

set 308 = GOTO( set 252 , , ) :
{
[ E ->  · E - T  , )  ]
[ E ->  · E - T  , -  ]
[ E ->  · E - T  , +  ]
[ E ->  · E + T  , )  ]
[ E ->  · E + T  , -  ]
[ E ->  · E + T  , +  ]
[ E ->  · T  , )  ]
[ E ->  · T  , -  ]
[ E ->  · T  , +  ]
[ T ->  · T * F  , )  ]
[ T ->  · T * F  , -  ]
[ T ->  · T * F  , +  ]
[ T ->  · T * F  , *  ]
[ T ->  · T * F  , /  ]
[ T ->  · T * F  , %  ]
[ T ->  · T / F  , )  ]
[ T ->  · T / F  , -  ]
[ T ->  · T / F  , +  ]
[ T ->  · T / F  , *  ]
[ T ->  · T / F  , /  ]
[ T ->  · T / F  , %  ]
[ T ->  · T % F  , )  ]
[ T ->  · T % F  , -  ]
[ T ->  · T % F  , +  ]
[ T ->  · T % F  , *  ]
[ T ->  · T % F  , /  ]
[ T ->  · T % F  , %  ]
[ T ->  · F  , )  ]
[ T ->  · F  , -  ]
[ T ->  · F  , +  ]
[ T ->  · F  , *  ]
[ T ->  · F  , /  ]
[ T ->  · F  , %  ]
[ F ->  · V  , )  ]
[ F ->  · V  , -  ]
[ F ->  · V  , +  ]
[ F ->  · V  , *  ]
[ F ->  · V  , /  ]
[ F ->  · V  , %  ]
[ F ->  · ( E )  , )  ]
[ F ->  · ( E )  , -  ]
[ F ->  · ( E )  , +  ]
[ F ->  · ( E )  , *  ]
[ F ->  · ( E )  , /  ]
[ F ->  · ( E )  , %  ]
[ F ->  · C  , )  ]
[ F ->  · C  , -  ]
[ F ->  · C  , +  ]
[ F ->  · C  , *  ]
[ F ->  · C  , /  ]
[ F ->  · C  , %  ]
[ F ->  · value ( E , E )  , )  ]
[ F ->  · value ( E , E )  , -  ]
[ F ->  · value ( E , E )  , +  ]
[ F ->  · value ( E , E )  , *  ]
[ F ->  · value ( E , E )  , /  ]
[ F ->  · value ( E , E )  , %  ]
[ F ->  · derivative ( E )  , )  ]
[ F ->  · derivative ( E )  , -  ]
[ F ->  · derivative ( E )  , +  ]
[ F ->  · derivative ( E )  , *  ]
[ F ->  · derivative ( E )  , /  ]
[ F ->  · derivative ( E )  , %  ]
[ F ->  · coeff ( E , E )  , )  ]
[ F ->  · coeff ( E , E )  , -  ]
[ F ->  · coeff ( E , E )  , +  ]
[ F ->  · coeff ( E , E )  , *  ]
[ F ->  · coeff ( E , E )  , /  ]
[ F ->  · coeff ( E , E )  , %  ]
[ F ->  · deg ( E )  , )  ]
[ F ->  · deg ( E )  , -  ]
[ F ->  · deg ( E )  , +  ]
[ F ->  · deg ( E )  , *  ]
[ F ->  · deg ( E )  , /  ]
[ F ->  · deg ( E )  , %  ]
[ F -> coeff ( E ,  · E )  , ,  ]
[ F -> coeff ( E ,  · E )  , -  ]
[ F -> coeff ( E ,  · E )  , +  ]
[ F -> coeff ( E ,  · E )  , *  ]
[ F -> coeff ( E ,  · E )  , /  ]
[ F -> coeff ( E ,  · E )  , %  ]
}

set 309 = GOTO( set 253 , ) ) :
{
[ F -> deg ( E )  ·  , ,  ]
[ F -> deg ( E )  ·  , -  ]
[ F -> deg ( E )  ·  , +  ]
[ F -> deg ( E )  ·  , *  ]
[ F -> deg ( E )  ·  , /  ]
[ F -> deg ( E )  ·  , %  ]
}

set 310 = GOTO( set 254 , ) ) :
{
[ F -> derivative ( E )  ·  , ,  ]
[ F -> derivative ( E )  ·  , -  ]
[ F -> derivative ( E )  ·  , +  ]
[ F -> derivative ( E )  ·  , *  ]
[ F -> derivative ( E )  ·  , /  ]
[ F -> derivative ( E )  ·  , %  ]
}

set 311 = GOTO( set 255 , , ) :
{
[ E ->  · E - T  , )  ]
[ E ->  · E - T  , -  ]
[ E ->  · E - T  , +  ]
[ E ->  · E + T  , )  ]
[ E ->  · E + T  , -  ]
[ E ->  · E + T  , +  ]
[ E ->  · T  , )  ]
[ E ->  · T  , -  ]
[ E ->  · T  , +  ]
[ T ->  · T * F  , )  ]
[ T ->  · T * F  , -  ]
[ T ->  · T * F  , +  ]
[ T ->  · T * F  , *  ]
[ T ->  · T * F  , /  ]
[ T ->  · T * F  , %  ]
[ T ->  · T / F  , )  ]
[ T ->  · T / F  , -  ]
[ T ->  · T / F  , +  ]
[ T ->  · T / F  , *  ]
[ T ->  · T / F  , /  ]
[ T ->  · T / F  , %  ]
[ T ->  · T % F  , )  ]
[ T ->  · T % F  , -  ]
[ T ->  · T % F  , +  ]
[ T ->  · T % F  , *  ]
[ T ->  · T % F  , /  ]
[ T ->  · T % F  , %  ]
[ T ->  · F  , )  ]
[ T ->  · F  , -  ]
[ T ->  · F  , +  ]
[ T ->  · F  , *  ]
[ T ->  · F  , /  ]
[ T ->  · F  , %  ]
[ F ->  · V  , )  ]
[ F ->  · V  , -  ]
[ F ->  · V  , +  ]
[ F ->  · V  , *  ]
[ F ->  · V  , /  ]
[ F ->  · V  , %  ]
[ F ->  · ( E )  , )  ]
[ F ->  · ( E )  , -  ]
[ F ->  · ( E )  , +  ]
[ F ->  · ( E )  , *  ]
[ F ->  · ( E )  , /  ]
[ F ->  · ( E )  , %  ]
[ F ->  · C  , )  ]
[ F ->  · C  , -  ]
[ F ->  · C  , +  ]
[ F ->  · C  , *  ]
[ F ->  · C  , /  ]
[ F ->  · C  , %  ]
[ F ->  · value ( E , E )  , )  ]
[ F ->  · value ( E , E )  , -  ]
[ F ->  · value ( E , E )  , +  ]
[ F ->  · value ( E , E )  , *  ]
[ F ->  · value ( E , E )  , /  ]
[ F ->  · value ( E , E )  , %  ]
[ F ->  · derivative ( E )  , )  ]
[ F ->  · derivative ( E )  , -  ]
[ F ->  · derivative ( E )  , +  ]
[ F ->  · derivative ( E )  , *  ]
[ F ->  · derivative ( E )  , /  ]
[ F ->  · derivative ( E )  , %  ]
[ F ->  · coeff ( E , E )  , )  ]
[ F ->  · coeff ( E , E )  , -  ]
[ F ->  · coeff ( E , E )  , +  ]
[ F ->  · coeff ( E , E )  , *  ]
[ F ->  · coeff ( E , E )  , /  ]
[ F ->  · coeff ( E , E )  , %  ]
[ F ->  · deg ( E )  , )  ]
[ F ->  · deg ( E )  , -  ]
[ F ->  · deg ( E )  , +  ]
[ F ->  · deg ( E )  , *  ]
[ F ->  · deg ( E )  , /  ]
[ F ->  · deg ( E )  , %  ]
[ F -> value ( E ,  · E )  , ,  ]
[ F -> value ( E ,  · E )  , -  ]
[ F -> value ( E ,  · E )  , +  ]
[ F -> value ( E ,  · E )  , *  ]
[ F -> value ( E ,  · E )  , /  ]
[ F -> value ( E ,  · E )  , %  ]
}

set 312 = GOTO( set 256 , ) ) :
{
[ F -> value ( E , E )  ·  , Rel  ]
[ F -> value ( E , E )  ·  , -  ]
[ F -> value ( E , E )  ·  , +  ]
[ F -> value ( E , E )  ·  , *  ]
[ F -> value ( E , E )  ·  , /  ]
[ F -> value ( E , E )  ·  , %  ]
}

set 313 = GOTO( set 264 , , ) :
{
[ E ->  · E - T  , )  ]
[ E ->  · E - T  , -  ]
[ E ->  · E - T  , +  ]
[ E ->  · E + T  , )  ]
[ E ->  · E + T  , -  ]
[ E ->  · E + T  , +  ]
[ E ->  · T  , )  ]
[ E ->  · T  , -  ]
[ E ->  · T  , +  ]
[ T ->  · T * F  , )  ]
[ T ->  · T * F  , -  ]
[ T ->  · T * F  , +  ]
[ T ->  · T * F  , *  ]
[ T ->  · T * F  , /  ]
[ T ->  · T * F  , %  ]
[ T ->  · T / F  , )  ]
[ T ->  · T / F  , -  ]
[ T ->  · T / F  , +  ]
[ T ->  · T / F  , *  ]
[ T ->  · T / F  , /  ]
[ T ->  · T / F  , %  ]
[ T ->  · T % F  , )  ]
[ T ->  · T % F  , -  ]
[ T ->  · T % F  , +  ]
[ T ->  · T % F  , *  ]
[ T ->  · T % F  , /  ]
[ T ->  · T % F  , %  ]
[ T ->  · F  , )  ]
[ T ->  · F  , -  ]
[ T ->  · F  , +  ]
[ T ->  · F  , *  ]
[ T ->  · F  , /  ]
[ T ->  · F  , %  ]
[ F ->  · V  , )  ]
[ F ->  · V  , -  ]
[ F ->  · V  , +  ]
[ F ->  · V  , *  ]
[ F ->  · V  , /  ]
[ F ->  · V  , %  ]
[ F ->  · ( E )  , )  ]
[ F ->  · ( E )  , -  ]
[ F ->  · ( E )  , +  ]
[ F ->  · ( E )  , *  ]
[ F ->  · ( E )  , /  ]
[ F ->  · ( E )  , %  ]
[ F ->  · C  , )  ]
[ F ->  · C  , -  ]
[ F ->  · C  , +  ]
[ F ->  · C  , *  ]
[ F ->  · C  , /  ]
[ F ->  · C  , %  ]
[ F ->  · value ( E , E )  , )  ]
[ F ->  · value ( E , E )  , -  ]
[ F ->  · value ( E , E )  , +  ]
[ F ->  · value ( E , E )  , *  ]
[ F ->  · value ( E , E )  , /  ]
[ F ->  · value ( E , E )  , %  ]
[ F ->  · derivative ( E )  , )  ]
[ F ->  · derivative ( E )  , -  ]
[ F ->  · derivative ( E )  , +  ]
[ F ->  · derivative ( E )  , *  ]
[ F ->  · derivative ( E )  , /  ]
[ F ->  · derivative ( E )  , %  ]
[ F ->  · coeff ( E , E )  , )  ]
[ F ->  · coeff ( E , E )  , -  ]
[ F ->  · coeff ( E , E )  , +  ]
[ F ->  · coeff ( E , E )  , *  ]
[ F ->  · coeff ( E , E )  , /  ]
[ F ->  · coeff ( E , E )  , %  ]
[ F ->  · deg ( E )  , )  ]
[ F ->  · deg ( E )  , -  ]
[ F ->  · deg ( E )  , +  ]
[ F ->  · deg ( E )  , *  ]
[ F ->  · deg ( E )  , /  ]
[ F ->  · deg ( E )  , %  ]
[ F -> coeff ( E ,  · E )  , ;  ]
[ F -> coeff ( E ,  · E )  , -  ]
[ F -> coeff ( E ,  · E )  , +  ]
[ F -> coeff ( E ,  · E )  , *  ]
[ F -> coeff ( E ,  · E )  , /  ]
[ F -> coeff ( E ,  · E )  , %  ]
}

set 314 = GOTO( set 265 , ) ) :
{
[ F -> deg ( E )  ·  , ;  ]
[ F -> deg ( E )  ·  , -  ]
[ F -> deg ( E )  ·  , +  ]
[ F -> deg ( E )  ·  , *  ]
[ F -> deg ( E )  ·  , /  ]
[ F -> deg ( E )  ·  , %  ]
}

set 315 = GOTO( set 266 , ) ) :
{
[ F -> derivative ( E )  ·  , ;  ]
[ F -> derivative ( E )  ·  , -  ]
[ F -> derivative ( E )  ·  , +  ]
[ F -> derivative ( E )  ·  , *  ]
[ F -> derivative ( E )  ·  , /  ]
[ F -> derivative ( E )  ·  , %  ]
}

set 316 = GOTO( set 267 , , ) :
{
[ E ->  · E - T  , )  ]
[ E ->  · E - T  , -  ]
[ E ->  · E - T  , +  ]
[ E ->  · E + T  , )  ]
[ E ->  · E + T  , -  ]
[ E ->  · E + T  , +  ]
[ E ->  · T  , )  ]
[ E ->  · T  , -  ]
[ E ->  · T  , +  ]
[ T ->  · T * F  , )  ]
[ T ->  · T * F  , -  ]
[ T ->  · T * F  , +  ]
[ T ->  · T * F  , *  ]
[ T ->  · T * F  , /  ]
[ T ->  · T * F  , %  ]
[ T ->  · T / F  , )  ]
[ T ->  · T / F  , -  ]
[ T ->  · T / F  , +  ]
[ T ->  · T / F  , *  ]
[ T ->  · T / F  , /  ]
[ T ->  · T / F  , %  ]
[ T ->  · T % F  , )  ]
[ T ->  · T % F  , -  ]
[ T ->  · T % F  , +  ]
[ T ->  · T % F  , *  ]
[ T ->  · T % F  , /  ]
[ T ->  · T % F  , %  ]
[ T ->  · F  , )  ]
[ T ->  · F  , -  ]
[ T ->  · F  , +  ]
[ T ->  · F  , *  ]
[ T ->  · F  , /  ]
[ T ->  · F  , %  ]
[ F ->  · V  , )  ]
[ F ->  · V  , -  ]
[ F ->  · V  , +  ]
[ F ->  · V  , *  ]
[ F ->  · V  , /  ]
[ F ->  · V  , %  ]
[ F ->  · ( E )  , )  ]
[ F ->  · ( E )  , -  ]
[ F ->  · ( E )  , +  ]
[ F ->  · ( E )  , *  ]
[ F ->  · ( E )  , /  ]
[ F ->  · ( E )  , %  ]
[ F ->  · C  , )  ]
[ F ->  · C  , -  ]
[ F ->  · C  , +  ]
[ F ->  · C  , *  ]
[ F ->  · C  , /  ]
[ F ->  · C  , %  ]
[ F ->  · value ( E , E )  , )  ]
[ F ->  · value ( E , E )  , -  ]
[ F ->  · value ( E , E )  , +  ]
[ F ->  · value ( E , E )  , *  ]
[ F ->  · value ( E , E )  , /  ]
[ F ->  · value ( E , E )  , %  ]
[ F ->  · derivative ( E )  , )  ]
[ F ->  · derivative ( E )  , -  ]
[ F ->  · derivative ( E )  , +  ]
[ F ->  · derivative ( E )  , *  ]
[ F ->  · derivative ( E )  , /  ]
[ F ->  · derivative ( E )  , %  ]
[ F ->  · coeff ( E , E )  , )  ]
[ F ->  · coeff ( E , E )  , -  ]
[ F ->  · coeff ( E , E )  , +  ]
[ F ->  · coeff ( E , E )  , *  ]
[ F ->  · coeff ( E , E )  , /  ]
[ F ->  · coeff ( E , E )  , %  ]
[ F ->  · deg ( E )  , )  ]
[ F ->  · deg ( E )  , -  ]
[ F ->  · deg ( E )  , +  ]
[ F ->  · deg ( E )  , *  ]
[ F ->  · deg ( E )  , /  ]
[ F ->  · deg ( E )  , %  ]
[ F -> value ( E ,  · E )  , ;  ]
[ F -> value ( E ,  · E )  , -  ]
[ F -> value ( E ,  · E )  , +  ]
[ F -> value ( E ,  · E )  , *  ]
[ F -> value ( E ,  · E )  , /  ]
[ F -> value ( E ,  · E )  , %  ]
}

set 317 = GOTO( set 272 , E ) :
{
[ E -> E  · - T  , )  ]
[ E -> E  · - T  , -  ]
[ E -> E  · - T  , +  ]
[ E -> E  · + T  , )  ]
[ E -> E  · + T  , -  ]
[ E -> E  · + T  , +  ]
[ F -> coeff ( E , E  · )  , ,  ]
[ F -> coeff ( E , E  · )  , )  ]
[ F -> coeff ( E , E  · )  , -  ]
[ F -> coeff ( E , E  · )  , +  ]
[ F -> coeff ( E , E  · )  , *  ]
[ F -> coeff ( E , E  · )  , /  ]
[ F -> coeff ( E , E  · )  , %  ]
}

set 318 = GOTO( set 275 , E ) :
{
[ E -> E  · - T  , )  ]
[ E -> E  · - T  , -  ]
[ E -> E  · - T  , +  ]
[ E -> E  · + T  , )  ]
[ E -> E  · + T  , -  ]
[ E -> E  · + T  , +  ]
[ F -> value ( E , E  · )  , ,  ]
[ F -> value ( E , E  · )  , )  ]
[ F -> value ( E , E  · )  , -  ]
[ F -> value ( E , E  · )  , +  ]
[ F -> value ( E , E  · )  , *  ]
[ F -> value ( E , E  · )  , /  ]
[ F -> value ( E , E  · )  , %  ]
}

set 319 = GOTO( set 277 , : ) :
{
[ <pr> ->  ·  , end  ]
[ <pr> ->  ·  , break  ]
[ <pr> ->  · <op> <pr>  , end  ]
[ <pr> ->  · <op> <pr>  , break  ]
[ <op> ->  · ;  , ;  ]
[ <op> ->  · ;  , V  ]
[ <op> ->  · ;  , :  ]
[ <op> ->  · ;  , let  ]
[ <op> ->  · ;  , if  ]
[ <op> ->  · ;  , goto  ]
[ <op> ->  · ;  , load  ]
[ <op> ->  · ;  , put  ]
[ <op> ->  · ;  , switch  ]
[ <op> ->  · ;  , end  ]
[ <op> ->  · ;  , break  ]
[ <op> ->  · ;  , error  ]
[ <op> ->  · ;  , comment  ]
[ <op> ->  · V <listV> : TYPE ;  , ;  ]
[ <op> ->  · V <listV> : TYPE ;  , V  ]
[ <op> ->  · V <listV> : TYPE ;  , :  ]
[ <op> ->  · V <listV> : TYPE ;  , let  ]
[ <op> ->  · V <listV> : TYPE ;  , if  ]
[ <op> ->  · V <listV> : TYPE ;  , goto  ]
[ <op> ->  · V <listV> : TYPE ;  , load  ]
[ <op> ->  · V <listV> : TYPE ;  , put  ]
[ <op> ->  · V <listV> : TYPE ;  , switch  ]
[ <op> ->  · V <listV> : TYPE ;  , end  ]
[ <op> ->  · V <listV> : TYPE ;  , break  ]
[ <op> ->  · V <listV> : TYPE ;  , error  ]
[ <op> ->  · V <listV> : TYPE ;  , comment  ]
[ <op> ->  · V for V = E to E <step> <pr> next V  , ;  ]
[ <op> ->  · V for V = E to E <step> <pr> next V  , V  ]
[ <op> ->  · V for V = E to E <step> <pr> next V  , :  ]
[ <op> ->  · V for V = E to E <step> <pr> next V  , let  ]
[ <op> ->  · V for V = E to E <step> <pr> next V  , if  ]
[ <op> ->  · V for V = E to E <step> <pr> next V  , goto  ]
[ <op> ->  · V for V = E to E <step> <pr> next V  , load  ]
[ <op> ->  · V for V = E to E <step> <pr> next V  , put  ]
[ <op> ->  · V for V = E to E <step> <pr> next V  , switch  ]
[ <op> ->  · V for V = E to E <step> <pr> next V  , end  ]
[ <op> ->  · V for V = E to E <step> <pr> next V  , break  ]
[ <op> ->  · V for V = E to E <step> <pr> next V  , error  ]
[ <op> ->  · V for V = E to E <step> <pr> next V  , comment  ]
[ <op> ->  · : V  , ;  ]
[ <op> ->  · : V  , V  ]
[ <op> ->  · : V  , :  ]
[ <op> ->  · : V  , let  ]
[ <op> ->  · : V  , if  ]
[ <op> ->  · : V  , goto  ]
[ <op> ->  · : V  , load  ]
[ <op> ->  · : V  , put  ]
[ <op> ->  · : V  , switch  ]
[ <op> ->  · : V  , end  ]
[ <op> ->  · : V  , break  ]
[ <op> ->  · : V  , error  ]
[ <op> ->  · : V  , comment  ]
[ <op> ->  · let V <listA>  , ;  ]
[ <op> ->  · let V <listA>  , V  ]
[ <op> ->  · let V <listA>  , :  ]
[ <op> ->  · let V <listA>  , let  ]
[ <op> ->  · let V <listA>  , if  ]
[ <op> ->  · let V <listA>  , goto  ]
[ <op> ->  · let V <listA>  , load  ]
[ <op> ->  · let V <listA>  , put  ]
[ <op> ->  · let V <listA>  , switch  ]
[ <op> ->  · let V <listA>  , end  ]
[ <op> ->  · let V <listA>  , break  ]
[ <op> ->  · let V <listA>  , error  ]
[ <op> ->  · let V <listA>  , comment  ]
[ <op> ->  · if <test> goto V <else> ;  , ;  ]
[ <op> ->  · if <test> goto V <else> ;  , V  ]
[ <op> ->  · if <test> goto V <else> ;  , :  ]
[ <op> ->  · if <test> goto V <else> ;  , let  ]
[ <op> ->  · if <test> goto V <else> ;  , if  ]
[ <op> ->  · if <test> goto V <else> ;  , goto  ]
[ <op> ->  · if <test> goto V <else> ;  , load  ]
[ <op> ->  · if <test> goto V <else> ;  , put  ]
[ <op> ->  · if <test> goto V <else> ;  , switch  ]
[ <op> ->  · if <test> goto V <else> ;  , end  ]
[ <op> ->  · if <test> goto V <else> ;  , break  ]
[ <op> ->  · if <test> goto V <else> ;  , error  ]
[ <op> ->  · if <test> goto V <else> ;  , comment  ]
[ <op> ->  · goto V  , ;  ]
[ <op> ->  · goto V  , V  ]
[ <op> ->  · goto V  , :  ]
[ <op> ->  · goto V  , let  ]
[ <op> ->  · goto V  , if  ]
[ <op> ->  · goto V  , goto  ]
[ <op> ->  · goto V  , load  ]
[ <op> ->  · goto V  , put  ]
[ <op> ->  · goto V  , switch  ]
[ <op> ->  · goto V  , end  ]
[ <op> ->  · goto V  , break  ]
[ <op> ->  · goto V  , error  ]
[ <op> ->  · goto V  , comment  ]
[ <op> ->  · load ( V <listV> ) ;  , ;  ]
[ <op> ->  · load ( V <listV> ) ;  , V  ]
[ <op> ->  · load ( V <listV> ) ;  , :  ]
[ <op> ->  · load ( V <listV> ) ;  , let  ]
[ <op> ->  · load ( V <listV> ) ;  , if  ]
[ <op> ->  · load ( V <listV> ) ;  , goto  ]
[ <op> ->  · load ( V <listV> ) ;  , load  ]
[ <op> ->  · load ( V <listV> ) ;  , put  ]
[ <op> ->  · load ( V <listV> ) ;  , switch  ]
[ <op> ->  · load ( V <listV> ) ;  , end  ]
[ <op> ->  · load ( V <listV> ) ;  , break  ]
[ <op> ->  · load ( V <listV> ) ;  , error  ]
[ <op> ->  · load ( V <listV> ) ;  , comment  ]
[ <op> ->  · put ( E <listE> ) ;  , ;  ]
[ <op> ->  · put ( E <listE> ) ;  , V  ]
[ <op> ->  · put ( E <listE> ) ;  , :  ]
[ <op> ->  · put ( E <listE> ) ;  , let  ]
[ <op> ->  · put ( E <listE> ) ;  , if  ]
[ <op> ->  · put ( E <listE> ) ;  , goto  ]
[ <op> ->  · put ( E <listE> ) ;  , load  ]
[ <op> ->  · put ( E <listE> ) ;  , put  ]
[ <op> ->  · put ( E <listE> ) ;  , switch  ]
[ <op> ->  · put ( E <listE> ) ;  , end  ]
[ <op> ->  · put ( E <listE> ) ;  , break  ]
[ <op> ->  · put ( E <listE> ) ;  , error  ]
[ <op> ->  · put ( E <listE> ) ;  , comment  ]
[ <op> ->  · switch ( E ) <switch_body> end switch ;  , ;  ]
[ <op> ->  · switch ( E ) <switch_body> end switch ;  , V  ]
[ <op> ->  · switch ( E ) <switch_body> end switch ;  , :  ]
[ <op> ->  · switch ( E ) <switch_body> end switch ;  , let  ]
[ <op> ->  · switch ( E ) <switch_body> end switch ;  , if  ]
[ <op> ->  · switch ( E ) <switch_body> end switch ;  , goto  ]
[ <op> ->  · switch ( E ) <switch_body> end switch ;  , load  ]
[ <op> ->  · switch ( E ) <switch_body> end switch ;  , put  ]
[ <op> ->  · switch ( E ) <switch_body> end switch ;  , switch  ]
[ <op> ->  · switch ( E ) <switch_body> end switch ;  , end  ]
[ <op> ->  · switch ( E ) <switch_body> end switch ;  , break  ]
[ <op> ->  · switch ( E ) <switch_body> end switch ;  , error  ]
[ <op> ->  · switch ( E ) <switch_body> end switch ;  , comment  ]
[ <op> ->  · error ;  , ;  ]
[ <op> ->  · error ;  , V  ]
[ <op> ->  · error ;  , :  ]
[ <op> ->  · error ;  , let  ]
[ <op> ->  · error ;  , if  ]
[ <op> ->  · error ;  , goto  ]
[ <op> ->  · error ;  , load  ]
[ <op> ->  · error ;  , put  ]
[ <op> ->  · error ;  , switch  ]
[ <op> ->  · error ;  , end  ]
[ <op> ->  · error ;  , break  ]
[ <op> ->  · error ;  , error  ]
[ <op> ->  · error ;  , comment  ]
[ <op> ->  · comment  , ;  ]
[ <op> ->  · comment  , V  ]
[ <op> ->  · comment  , :  ]
[ <op> ->  · comment  , let  ]
[ <op> ->  · comment  , if  ]
[ <op> ->  · comment  , goto  ]
[ <op> ->  · comment  , load  ]
[ <op> ->  · comment  , put  ]
[ <op> ->  · comment  , switch  ]
[ <op> ->  · comment  , end  ]
[ <op> ->  · comment  , break  ]
[ <op> ->  · comment  , error  ]
[ <op> ->  · comment  , comment  ]
[ <default> -> default :  · <pr> <break>  , end  ]
}

set 320 = GOTO( set 278 , switch ) :
{
[ <op> -> switch ( E ) <switch_body> end switch  · ;  ,  ]
[ <op> -> switch ( E ) <switch_body> end switch  · ;  , ;  ]
[ <op> -> switch ( E ) <switch_body> end switch  · ;  , V  ]
[ <op> -> switch ( E ) <switch_body> end switch  · ;  , :  ]
[ <op> -> switch ( E ) <switch_body> end switch  · ;  , let  ]
[ <op> -> switch ( E ) <switch_body> end switch  · ;  , if  ]
[ <op> -> switch ( E ) <switch_body> end switch  · ;  , goto  ]
[ <op> -> switch ( E ) <switch_body> end switch  · ;  , load  ]
[ <op> -> switch ( E ) <switch_body> end switch  · ;  , put  ]
[ <op> -> switch ( E ) <switch_body> end switch  · ;  , switch  ]
[ <op> -> switch ( E ) <switch_body> end switch  · ;  , error  ]
[ <op> -> switch ( E ) <switch_body> end switch  · ;  , comment  ]
}

set 321 = GOTO( set 279 , : ) :
{
[ <pr> ->  ·  , end  ]
[ <pr> ->  ·  , case  ]
[ <pr> ->  ·  , break  ]
[ <pr> ->  ·  , default  ]
[ <pr> ->  · <op> <pr>  , end  ]
[ <pr> ->  · <op> <pr>  , case  ]
[ <pr> ->  · <op> <pr>  , break  ]
[ <pr> ->  · <op> <pr>  , default  ]
[ <op> ->  · ;  , ;  ]
[ <op> ->  · ;  , V  ]
[ <op> ->  · ;  , :  ]
[ <op> ->  · ;  , let  ]
[ <op> ->  · ;  , if  ]
[ <op> ->  · ;  , goto  ]
[ <op> ->  · ;  , load  ]
[ <op> ->  · ;  , put  ]
[ <op> ->  · ;  , switch  ]
[ <op> ->  · ;  , end  ]
[ <op> ->  · ;  , case  ]
[ <op> ->  · ;  , break  ]
[ <op> ->  · ;  , default  ]
[ <op> ->  · ;  , error  ]
[ <op> ->  · ;  , comment  ]
[ <op> ->  · V <listV> : TYPE ;  , ;  ]
[ <op> ->  · V <listV> : TYPE ;  , V  ]
[ <op> ->  · V <listV> : TYPE ;  , :  ]
[ <op> ->  · V <listV> : TYPE ;  , let  ]
[ <op> ->  · V <listV> : TYPE ;  , if  ]
[ <op> ->  · V <listV> : TYPE ;  , goto  ]
[ <op> ->  · V <listV> : TYPE ;  , load  ]
[ <op> ->  · V <listV> : TYPE ;  , put  ]
[ <op> ->  · V <listV> : TYPE ;  , switch  ]
[ <op> ->  · V <listV> : TYPE ;  , end  ]
[ <op> ->  · V <listV> : TYPE ;  , case  ]
[ <op> ->  · V <listV> : TYPE ;  , break  ]
[ <op> ->  · V <listV> : TYPE ;  , default  ]
[ <op> ->  · V <listV> : TYPE ;  , error  ]
[ <op> ->  · V <listV> : TYPE ;  , comment  ]
[ <op> ->  · V for V = E to E <step> <pr> next V  , ;  ]
[ <op> ->  · V for V = E to E <step> <pr> next V  , V  ]
[ <op> ->  · V for V = E to E <step> <pr> next V  , :  ]
[ <op> ->  · V for V = E to E <step> <pr> next V  , let  ]
[ <op> ->  · V for V = E to E <step> <pr> next V  , if  ]
[ <op> ->  · V for V = E to E <step> <pr> next V  , goto  ]
[ <op> ->  · V for V = E to E <step> <pr> next V  , load  ]
[ <op> ->  · V for V = E to E <step> <pr> next V  , put  ]
[ <op> ->  · V for V = E to E <step> <pr> next V  , switch  ]
[ <op> ->  · V for V = E to E <step> <pr> next V  , end  ]
[ <op> ->  · V for V = E to E <step> <pr> next V  , case  ]
[ <op> ->  · V for V = E to E <step> <pr> next V  , break  ]
[ <op> ->  · V for V = E to E <step> <pr> next V  , default  ]
[ <op> ->  · V for V = E to E <step> <pr> next V  , error  ]
[ <op> ->  · V for V = E to E <step> <pr> next V  , comment  ]
[ <op> ->  · : V  , ;  ]
[ <op> ->  · : V  , V  ]
[ <op> ->  · : V  , :  ]
[ <op> ->  · : V  , let  ]
[ <op> ->  · : V  , if  ]
[ <op> ->  · : V  , goto  ]
[ <op> ->  · : V  , load  ]
[ <op> ->  · : V  , put  ]
[ <op> ->  · : V  , switch  ]
[ <op> ->  · : V  , end  ]
[ <op> ->  · : V  , case  ]
[ <op> ->  · : V  , break  ]
[ <op> ->  · : V  , default  ]
[ <op> ->  · : V  , error  ]
[ <op> ->  · : V  , comment  ]
[ <op> ->  · let V <listA>  , ;  ]
[ <op> ->  · let V <listA>  , V  ]
[ <op> ->  · let V <listA>  , :  ]
[ <op> ->  · let V <listA>  , let  ]
[ <op> ->  · let V <listA>  , if  ]
[ <op> ->  · let V <listA>  , goto  ]
[ <op> ->  · let V <listA>  , load  ]
[ <op> ->  · let V <listA>  , put  ]
[ <op> ->  · let V <listA>  , switch  ]
[ <op> ->  · let V <listA>  , end  ]
[ <op> ->  · let V <listA>  , case  ]
[ <op> ->  · let V <listA>  , break  ]
[ <op> ->  · let V <listA>  , default  ]
[ <op> ->  · let V <listA>  , error  ]
[ <op> ->  · let V <listA>  , comment  ]
[ <op> ->  · if <test> goto V <else> ;  , ;  ]
[ <op> ->  · if <test> goto V <else> ;  , V  ]
[ <op> ->  · if <test> goto V <else> ;  , :  ]
[ <op> ->  · if <test> goto V <else> ;  , let  ]
[ <op> ->  · if <test> goto V <else> ;  , if  ]
[ <op> ->  · if <test> goto V <else> ;  , goto  ]
[ <op> ->  · if <test> goto V <else> ;  , load  ]
[ <op> ->  · if <test> goto V <else> ;  , put  ]
[ <op> ->  · if <test> goto V <else> ;  , switch  ]
[ <op> ->  · if <test> goto V <else> ;  , end  ]
[ <op> ->  · if <test> goto V <else> ;  , case  ]
[ <op> ->  · if <test> goto V <else> ;  , break  ]
[ <op> ->  · if <test> goto V <else> ;  , default  ]
[ <op> ->  · if <test> goto V <else> ;  , error  ]
[ <op> ->  · if <test> goto V <else> ;  , comment  ]
[ <op> ->  · goto V  , ;  ]
[ <op> ->  · goto V  , V  ]
[ <op> ->  · goto V  , :  ]
[ <op> ->  · goto V  , let  ]
[ <op> ->  · goto V  , if  ]
[ <op> ->  · goto V  , goto  ]
[ <op> ->  · goto V  , load  ]
[ <op> ->  · goto V  , put  ]
[ <op> ->  · goto V  , switch  ]
[ <op> ->  · goto V  , end  ]
[ <op> ->  · goto V  , case  ]
[ <op> ->  · goto V  , break  ]
[ <op> ->  · goto V  , default  ]
[ <op> ->  · goto V  , error  ]
[ <op> ->  · goto V  , comment  ]
[ <op> ->  · load ( V <listV> ) ;  , ;  ]
[ <op> ->  · load ( V <listV> ) ;  , V  ]
[ <op> ->  · load ( V <listV> ) ;  , :  ]
[ <op> ->  · load ( V <listV> ) ;  , let  ]
[ <op> ->  · load ( V <listV> ) ;  , if  ]
[ <op> ->  · load ( V <listV> ) ;  , goto  ]
[ <op> ->  · load ( V <listV> ) ;  , load  ]
[ <op> ->  · load ( V <listV> ) ;  , put  ]
[ <op> ->  · load ( V <listV> ) ;  , switch  ]
[ <op> ->  · load ( V <listV> ) ;  , end  ]
[ <op> ->  · load ( V <listV> ) ;  , case  ]
[ <op> ->  · load ( V <listV> ) ;  , break  ]
[ <op> ->  · load ( V <listV> ) ;  , default  ]
[ <op> ->  · load ( V <listV> ) ;  , error  ]
[ <op> ->  · load ( V <listV> ) ;  , comment  ]
[ <op> ->  · put ( E <listE> ) ;  , ;  ]
[ <op> ->  · put ( E <listE> ) ;  , V  ]
[ <op> ->  · put ( E <listE> ) ;  , :  ]
[ <op> ->  · put ( E <listE> ) ;  , let  ]
[ <op> ->  · put ( E <listE> ) ;  , if  ]
[ <op> ->  · put ( E <listE> ) ;  , goto  ]
[ <op> ->  · put ( E <listE> ) ;  , load  ]
[ <op> ->  · put ( E <listE> ) ;  , put  ]
[ <op> ->  · put ( E <listE> ) ;  , switch  ]
[ <op> ->  · put ( E <listE> ) ;  , end  ]
[ <op> ->  · put ( E <listE> ) ;  , case  ]
[ <op> ->  · put ( E <listE> ) ;  , break  ]
[ <op> ->  · put ( E <listE> ) ;  , default  ]
[ <op> ->  · put ( E <listE> ) ;  , error  ]
[ <op> ->  · put ( E <listE> ) ;  , comment  ]
[ <op> ->  · switch ( E ) <switch_body> end switch ;  , ;  ]
[ <op> ->  · switch ( E ) <switch_body> end switch ;  , V  ]
[ <op> ->  · switch ( E ) <switch_body> end switch ;  , :  ]
[ <op> ->  · switch ( E ) <switch_body> end switch ;  , let  ]
[ <op> ->  · switch ( E ) <switch_body> end switch ;  , if  ]
[ <op> ->  · switch ( E ) <switch_body> end switch ;  , goto  ]
[ <op> ->  · switch ( E ) <switch_body> end switch ;  , load  ]
[ <op> ->  · switch ( E ) <switch_body> end switch ;  , put  ]
[ <op> ->  · switch ( E ) <switch_body> end switch ;  , switch  ]
[ <op> ->  · switch ( E ) <switch_body> end switch ;  , end  ]
[ <op> ->  · switch ( E ) <switch_body> end switch ;  , case  ]
[ <op> ->  · switch ( E ) <switch_body> end switch ;  , break  ]
[ <op> ->  · switch ( E ) <switch_body> end switch ;  , default  ]
[ <op> ->  · switch ( E ) <switch_body> end switch ;  , error  ]
[ <op> ->  · switch ( E ) <switch_body> end switch ;  , comment  ]
[ <op> ->  · error ;  , ;  ]
[ <op> ->  · error ;  , V  ]
[ <op> ->  · error ;  , :  ]
[ <op> ->  · error ;  , let  ]
[ <op> ->  · error ;  , if  ]
[ <op> ->  · error ;  , goto  ]
[ <op> ->  · error ;  , load  ]
[ <op> ->  · error ;  , put  ]
[ <op> ->  · error ;  , switch  ]
[ <op> ->  · error ;  , end  ]
[ <op> ->  · error ;  , case  ]
[ <op> ->  · error ;  , break  ]
[ <op> ->  · error ;  , default  ]
[ <op> ->  · error ;  , error  ]
[ <op> ->  · error ;  , comment  ]
[ <op> ->  · comment  , ;  ]
[ <op> ->  · comment  , V  ]
[ <op> ->  · comment  , :  ]
[ <op> ->  · comment  , let  ]
[ <op> ->  · comment  , if  ]
[ <op> ->  · comment  , goto  ]
[ <op> ->  · comment  , load  ]
[ <op> ->  · comment  , put  ]
[ <op> ->  · comment  , switch  ]
[ <op> ->  · comment  , end  ]
[ <op> ->  · comment  , case  ]
[ <op> ->  · comment  , break  ]
[ <op> ->  · comment  , default  ]
[ <op> ->  · comment  , error  ]
[ <op> ->  · comment  , comment  ]
[ <list_case> -> case C :  · <pr> <break> <list_case>  , end  ]
[ <list_case> -> case C :  · <pr> <break> <list_case>  , default  ]
}

set 322 = GOTO( set 283 , E ) :
{
[ E -> E  · - T  , )  ]
[ E -> E  · - T  , -  ]
[ E -> E  · - T  , +  ]
[ E -> E  · + T  , )  ]
[ E -> E  · + T  , -  ]
[ E -> E  · + T  , +  ]
[ F -> ( E  · )  , ;  ]
[ F -> ( E  · )  , V  ]
[ F -> ( E  · )  , :  ]
[ F -> ( E  · )  , let  ]
[ F -> ( E  · )  , next  ]
[ F -> ( E  · )  , adding  ]
[ F -> ( E  · )  , if  ]
[ F -> ( E  · )  , goto  ]
[ F -> ( E  · )  , load  ]
[ F -> ( E  · )  , put  ]
[ F -> ( E  · )  , switch  ]
[ F -> ( E  · )  , error  ]
[ F -> ( E  · )  , comment  ]
[ F -> ( E  · )  , -  ]
[ F -> ( E  · )  , +  ]
[ F -> ( E  · )  , *  ]
[ F -> ( E  · )  , /  ]
[ F -> ( E  · )  , %  ]
}

set 323 = GOTO( set 285 , + ) :
{
[ E -> E +  · T  , ;  ]
[ E -> E +  · T  , V  ]
[ E -> E +  · T  , :  ]
[ E -> E +  · T  , let  ]
[ E -> E +  · T  , next  ]
[ E -> E +  · T  , adding  ]
[ E -> E +  · T  , if  ]
[ E -> E +  · T  , goto  ]
[ E -> E +  · T  , load  ]
[ E -> E +  · T  , put  ]
[ E -> E +  · T  , switch  ]
[ E -> E +  · T  , error  ]
[ E -> E +  · T  , comment  ]
[ E -> E +  · T  , -  ]
[ E -> E +  · T  , +  ]
[ T ->  · T * F  , ;  ]
[ T ->  · T * F  , V  ]
[ T ->  · T * F  , :  ]
[ T ->  · T * F  , let  ]
[ T ->  · T * F  , next  ]
[ T ->  · T * F  , adding  ]
[ T ->  · T * F  , if  ]
[ T ->  · T * F  , goto  ]
[ T ->  · T * F  , load  ]
[ T ->  · T * F  , put  ]
[ T ->  · T * F  , switch  ]
[ T ->  · T * F  , error  ]
[ T ->  · T * F  , comment  ]
[ T ->  · T * F  , -  ]
[ T ->  · T * F  , +  ]
[ T ->  · T * F  , *  ]
[ T ->  · T * F  , /  ]
[ T ->  · T * F  , %  ]
[ T ->  · T / F  , ;  ]
[ T ->  · T / F  , V  ]
[ T ->  · T / F  , :  ]
[ T ->  · T / F  , let  ]
[ T ->  · T / F  , next  ]
[ T ->  · T / F  , adding  ]
[ T ->  · T / F  , if  ]
[ T ->  · T / F  , goto  ]
[ T ->  · T / F  , load  ]
[ T ->  · T / F  , put  ]
[ T ->  · T / F  , switch  ]
[ T ->  · T / F  , error  ]
[ T ->  · T / F  , comment  ]
[ T ->  · T / F  , -  ]
[ T ->  · T / F  , +  ]
[ T ->  · T / F  , *  ]
[ T ->  · T / F  , /  ]
[ T ->  · T / F  , %  ]
[ T ->  · T % F  , ;  ]
[ T ->  · T % F  , V  ]
[ T ->  · T % F  , :  ]
[ T ->  · T % F  , let  ]
[ T ->  · T % F  , next  ]
[ T ->  · T % F  , adding  ]
[ T ->  · T % F  , if  ]
[ T ->  · T % F  , goto  ]
[ T ->  · T % F  , load  ]
[ T ->  · T % F  , put  ]
[ T ->  · T % F  , switch  ]
[ T ->  · T % F  , error  ]
[ T ->  · T % F  , comment  ]
[ T ->  · T % F  , -  ]
[ T ->  · T % F  , +  ]
[ T ->  · T % F  , *  ]
[ T ->  · T % F  , /  ]
[ T ->  · T % F  , %  ]
[ T ->  · F  , ;  ]
[ T ->  · F  , V  ]
[ T ->  · F  , :  ]
[ T ->  · F  , let  ]
[ T ->  · F  , next  ]
[ T ->  · F  , adding  ]
[ T ->  · F  , if  ]
[ T ->  · F  , goto  ]
[ T ->  · F  , load  ]
[ T ->  · F  , put  ]
[ T ->  · F  , switch  ]
[ T ->  · F  , error  ]
[ T ->  · F  , comment  ]
[ T ->  · F  , -  ]
[ T ->  · F  , +  ]
[ T ->  · F  , *  ]
[ T ->  · F  , /  ]
[ T ->  · F  , %  ]
[ F ->  · V  , ;  ]
[ F ->  · V  , V  ]
[ F ->  · V  , :  ]
[ F ->  · V  , let  ]
[ F ->  · V  , next  ]
[ F ->  · V  , adding  ]
[ F ->  · V  , if  ]
[ F ->  · V  , goto  ]
[ F ->  · V  , load  ]
[ F ->  · V  , put  ]
[ F ->  · V  , switch  ]
[ F ->  · V  , error  ]
[ F ->  · V  , comment  ]
[ F ->  · V  , -  ]
[ F ->  · V  , +  ]
[ F ->  · V  , *  ]
[ F ->  · V  , /  ]
[ F ->  · V  , %  ]
[ F ->  · ( E )  , ;  ]
[ F ->  · ( E )  , V  ]
[ F ->  · ( E )  , :  ]
[ F ->  · ( E )  , let  ]
[ F ->  · ( E )  , next  ]
[ F ->  · ( E )  , adding  ]
[ F ->  · ( E )  , if  ]
[ F ->  · ( E )  , goto  ]
[ F ->  · ( E )  , load  ]
[ F ->  · ( E )  , put  ]
[ F ->  · ( E )  , switch  ]
[ F ->  · ( E )  , error  ]
[ F ->  · ( E )  , comment  ]
[ F ->  · ( E )  , -  ]
[ F ->  · ( E )  , +  ]
[ F ->  · ( E )  , *  ]
[ F ->  · ( E )  , /  ]
[ F ->  · ( E )  , %  ]
[ F ->  · C  , ;  ]
[ F ->  · C  , V  ]
[ F ->  · C  , :  ]
[ F ->  · C  , let  ]
[ F ->  · C  , next  ]
[ F ->  · C  , adding  ]
[ F ->  · C  , if  ]
[ F ->  · C  , goto  ]
[ F ->  · C  , load  ]
[ F ->  · C  , put  ]
[ F ->  · C  , switch  ]
[ F ->  · C  , error  ]
[ F ->  · C  , comment  ]
[ F ->  · C  , -  ]
[ F ->  · C  , +  ]
[ F ->  · C  , *  ]
[ F ->  · C  , /  ]
[ F ->  · C  , %  ]
[ F ->  · value ( E , E )  , ;  ]
[ F ->  · value ( E , E )  , V  ]
[ F ->  · value ( E , E )  , :  ]
[ F ->  · value ( E , E )  , let  ]
[ F ->  · value ( E , E )  , next  ]
[ F ->  · value ( E , E )  , adding  ]
[ F ->  · value ( E , E )  , if  ]
[ F ->  · value ( E , E )  , goto  ]
[ F ->  · value ( E , E )  , load  ]
[ F ->  · value ( E , E )  , put  ]
[ F ->  · value ( E , E )  , switch  ]
[ F ->  · value ( E , E )  , error  ]
[ F ->  · value ( E , E )  , comment  ]
[ F ->  · value ( E , E )  , -  ]
[ F ->  · value ( E , E )  , +  ]
[ F ->  · value ( E , E )  , *  ]
[ F ->  · value ( E , E )  , /  ]
[ F ->  · value ( E , E )  , %  ]
[ F ->  · derivative ( E )  , ;  ]
[ F ->  · derivative ( E )  , V  ]
[ F ->  · derivative ( E )  , :  ]
[ F ->  · derivative ( E )  , let  ]
[ F ->  · derivative ( E )  , next  ]
[ F ->  · derivative ( E )  , adding  ]
[ F ->  · derivative ( E )  , if  ]
[ F ->  · derivative ( E )  , goto  ]
[ F ->  · derivative ( E )  , load  ]
[ F ->  · derivative ( E )  , put  ]
[ F ->  · derivative ( E )  , switch  ]
[ F ->  · derivative ( E )  , error  ]
[ F ->  · derivative ( E )  , comment  ]
[ F ->  · derivative ( E )  , -  ]
[ F ->  · derivative ( E )  , +  ]
[ F ->  · derivative ( E )  , *  ]
[ F ->  · derivative ( E )  , /  ]
[ F ->  · derivative ( E )  , %  ]
[ F ->  · coeff ( E , E )  , ;  ]
[ F ->  · coeff ( E , E )  , V  ]
[ F ->  · coeff ( E , E )  , :  ]
[ F ->  · coeff ( E , E )  , let  ]
[ F ->  · coeff ( E , E )  , next  ]
[ F ->  · coeff ( E , E )  , adding  ]
[ F ->  · coeff ( E , E )  , if  ]
[ F ->  · coeff ( E , E )  , goto  ]
[ F ->  · coeff ( E , E )  , load  ]
[ F ->  · coeff ( E , E )  , put  ]
[ F ->  · coeff ( E , E )  , switch  ]
[ F ->  · coeff ( E , E )  , error  ]
[ F ->  · coeff ( E , E )  , comment  ]
[ F ->  · coeff ( E , E )  , -  ]
[ F ->  · coeff ( E , E )  , +  ]
[ F ->  · coeff ( E , E )  , *  ]
[ F ->  · coeff ( E , E )  , /  ]
[ F ->  · coeff ( E , E )  , %  ]
[ F ->  · deg ( E )  , ;  ]
[ F ->  · deg ( E )  , V  ]
[ F ->  · deg ( E )  , :  ]
[ F ->  · deg ( E )  , let  ]
[ F ->  · deg ( E )  , next  ]
[ F ->  · deg ( E )  , adding  ]
[ F ->  · deg ( E )  , if  ]
[ F ->  · deg ( E )  , goto  ]
[ F ->  · deg ( E )  , load  ]
[ F ->  · deg ( E )  , put  ]
[ F ->  · deg ( E )  , switch  ]
[ F ->  · deg ( E )  , error  ]
[ F ->  · deg ( E )  , comment  ]
[ F ->  · deg ( E )  , -  ]
[ F ->  · deg ( E )  , +  ]
[ F ->  · deg ( E )  , *  ]
[ F ->  · deg ( E )  , /  ]
[ F ->  · deg ( E )  , %  ]
}

set 324 = GOTO( set 285 , - ) :
{
[ E -> E -  · T  , ;  ]
[ E -> E -  · T  , V  ]
[ E -> E -  · T  , :  ]
[ E -> E -  · T  , let  ]
[ E -> E -  · T  , next  ]
[ E -> E -  · T  , adding  ]
[ E -> E -  · T  , if  ]
[ E -> E -  · T  , goto  ]
[ E -> E -  · T  , load  ]
[ E -> E -  · T  , put  ]
[ E -> E -  · T  , switch  ]
[ E -> E -  · T  , error  ]
[ E -> E -  · T  , comment  ]
[ E -> E -  · T  , -  ]
[ E -> E -  · T  , +  ]
[ T ->  · T * F  , ;  ]
[ T ->  · T * F  , V  ]
[ T ->  · T * F  , :  ]
[ T ->  · T * F  , let  ]
[ T ->  · T * F  , next  ]
[ T ->  · T * F  , adding  ]
[ T ->  · T * F  , if  ]
[ T ->  · T * F  , goto  ]
[ T ->  · T * F  , load  ]
[ T ->  · T * F  , put  ]
[ T ->  · T * F  , switch  ]
[ T ->  · T * F  , error  ]
[ T ->  · T * F  , comment  ]
[ T ->  · T * F  , -  ]
[ T ->  · T * F  , +  ]
[ T ->  · T * F  , *  ]
[ T ->  · T * F  , /  ]
[ T ->  · T * F  , %  ]
[ T ->  · T / F  , ;  ]
[ T ->  · T / F  , V  ]
[ T ->  · T / F  , :  ]
[ T ->  · T / F  , let  ]
[ T ->  · T / F  , next  ]
[ T ->  · T / F  , adding  ]
[ T ->  · T / F  , if  ]
[ T ->  · T / F  , goto  ]
[ T ->  · T / F  , load  ]
[ T ->  · T / F  , put  ]
[ T ->  · T / F  , switch  ]
[ T ->  · T / F  , error  ]
[ T ->  · T / F  , comment  ]
[ T ->  · T / F  , -  ]
[ T ->  · T / F  , +  ]
[ T ->  · T / F  , *  ]
[ T ->  · T / F  , /  ]
[ T ->  · T / F  , %  ]
[ T ->  · T % F  , ;  ]
[ T ->  · T % F  , V  ]
[ T ->  · T % F  , :  ]
[ T ->  · T % F  , let  ]
[ T ->  · T % F  , next  ]
[ T ->  · T % F  , adding  ]
[ T ->  · T % F  , if  ]
[ T ->  · T % F  , goto  ]
[ T ->  · T % F  , load  ]
[ T ->  · T % F  , put  ]
[ T ->  · T % F  , switch  ]
[ T ->  · T % F  , error  ]
[ T ->  · T % F  , comment  ]
[ T ->  · T % F  , -  ]
[ T ->  · T % F  , +  ]
[ T ->  · T % F  , *  ]
[ T ->  · T % F  , /  ]
[ T ->  · T % F  , %  ]
[ T ->  · F  , ;  ]
[ T ->  · F  , V  ]
[ T ->  · F  , :  ]
[ T ->  · F  , let  ]
[ T ->  · F  , next  ]
[ T ->  · F  , adding  ]
[ T ->  · F  , if  ]
[ T ->  · F  , goto  ]
[ T ->  · F  , load  ]
[ T ->  · F  , put  ]
[ T ->  · F  , switch  ]
[ T ->  · F  , error  ]
[ T ->  · F  , comment  ]
[ T ->  · F  , -  ]
[ T ->  · F  , +  ]
[ T ->  · F  , *  ]
[ T ->  · F  , /  ]
[ T ->  · F  , %  ]
[ F ->  · V  , ;  ]
[ F ->  · V  , V  ]
[ F ->  · V  , :  ]
[ F ->  · V  , let  ]
[ F ->  · V  , next  ]
[ F ->  · V  , adding  ]
[ F ->  · V  , if  ]
[ F ->  · V  , goto  ]
[ F ->  · V  , load  ]
[ F ->  · V  , put  ]
[ F ->  · V  , switch  ]
[ F ->  · V  , error  ]
[ F ->  · V  , comment  ]
[ F ->  · V  , -  ]
[ F ->  · V  , +  ]
[ F ->  · V  , *  ]
[ F ->  · V  , /  ]
[ F ->  · V  , %  ]
[ F ->  · ( E )  , ;  ]
[ F ->  · ( E )  , V  ]
[ F ->  · ( E )  , :  ]
[ F ->  · ( E )  , let  ]
[ F ->  · ( E )  , next  ]
[ F ->  · ( E )  , adding  ]
[ F ->  · ( E )  , if  ]
[ F ->  · ( E )  , goto  ]
[ F ->  · ( E )  , load  ]
[ F ->  · ( E )  , put  ]
[ F ->  · ( E )  , switch  ]
[ F ->  · ( E )  , error  ]
[ F ->  · ( E )  , comment  ]
[ F ->  · ( E )  , -  ]
[ F ->  · ( E )  , +  ]
[ F ->  · ( E )  , *  ]
[ F ->  · ( E )  , /  ]
[ F ->  · ( E )  , %  ]
[ F ->  · C  , ;  ]
[ F ->  · C  , V  ]
[ F ->  · C  , :  ]
[ F ->  · C  , let  ]
[ F ->  · C  , next  ]
[ F ->  · C  , adding  ]
[ F ->  · C  , if  ]
[ F ->  · C  , goto  ]
[ F ->  · C  , load  ]
[ F ->  · C  , put  ]
[ F ->  · C  , switch  ]
[ F ->  · C  , error  ]
[ F ->  · C  , comment  ]
[ F ->  · C  , -  ]
[ F ->  · C  , +  ]
[ F ->  · C  , *  ]
[ F ->  · C  , /  ]
[ F ->  · C  , %  ]
[ F ->  · value ( E , E )  , ;  ]
[ F ->  · value ( E , E )  , V  ]
[ F ->  · value ( E , E )  , :  ]
[ F ->  · value ( E , E )  , let  ]
[ F ->  · value ( E , E )  , next  ]
[ F ->  · value ( E , E )  , adding  ]
[ F ->  · value ( E , E )  , if  ]
[ F ->  · value ( E , E )  , goto  ]
[ F ->  · value ( E , E )  , load  ]
[ F ->  · value ( E , E )  , put  ]
[ F ->  · value ( E , E )  , switch  ]
[ F ->  · value ( E , E )  , error  ]
[ F ->  · value ( E , E )  , comment  ]
[ F ->  · value ( E , E )  , -  ]
[ F ->  · value ( E , E )  , +  ]
[ F ->  · value ( E , E )  , *  ]
[ F ->  · value ( E , E )  , /  ]
[ F ->  · value ( E , E )  , %  ]
[ F ->  · derivative ( E )  , ;  ]
[ F ->  · derivative ( E )  , V  ]
[ F ->  · derivative ( E )  , :  ]
[ F ->  · derivative ( E )  , let  ]
[ F ->  · derivative ( E )  , next  ]
[ F ->  · derivative ( E )  , adding  ]
[ F ->  · derivative ( E )  , if  ]
[ F ->  · derivative ( E )  , goto  ]
[ F ->  · derivative ( E )  , load  ]
[ F ->  · derivative ( E )  , put  ]
[ F ->  · derivative ( E )  , switch  ]
[ F ->  · derivative ( E )  , error  ]
[ F ->  · derivative ( E )  , comment  ]
[ F ->  · derivative ( E )  , -  ]
[ F ->  · derivative ( E )  , +  ]
[ F ->  · derivative ( E )  , *  ]
[ F ->  · derivative ( E )  , /  ]
[ F ->  · derivative ( E )  , %  ]
[ F ->  · coeff ( E , E )  , ;  ]
[ F ->  · coeff ( E , E )  , V  ]
[ F ->  · coeff ( E , E )  , :  ]
[ F ->  · coeff ( E , E )  , let  ]
[ F ->  · coeff ( E , E )  , next  ]
[ F ->  · coeff ( E , E )  , adding  ]
[ F ->  · coeff ( E , E )  , if  ]
[ F ->  · coeff ( E , E )  , goto  ]
[ F ->  · coeff ( E , E )  , load  ]
[ F ->  · coeff ( E , E )  , put  ]
[ F ->  · coeff ( E , E )  , switch  ]
[ F ->  · coeff ( E , E )  , error  ]
[ F ->  · coeff ( E , E )  , comment  ]
[ F ->  · coeff ( E , E )  , -  ]
[ F ->  · coeff ( E , E )  , +  ]
[ F ->  · coeff ( E , E )  , *  ]
[ F ->  · coeff ( E , E )  , /  ]
[ F ->  · coeff ( E , E )  , %  ]
[ F ->  · deg ( E )  , ;  ]
[ F ->  · deg ( E )  , V  ]
[ F ->  · deg ( E )  , :  ]
[ F ->  · deg ( E )  , let  ]
[ F ->  · deg ( E )  , next  ]
[ F ->  · deg ( E )  , adding  ]
[ F ->  · deg ( E )  , if  ]
[ F ->  · deg ( E )  , goto  ]
[ F ->  · deg ( E )  , load  ]
[ F ->  · deg ( E )  , put  ]
[ F ->  · deg ( E )  , switch  ]
[ F ->  · deg ( E )  , error  ]
[ F ->  · deg ( E )  , comment  ]
[ F ->  · deg ( E )  , -  ]
[ F ->  · deg ( E )  , +  ]
[ F ->  · deg ( E )  , *  ]
[ F ->  · deg ( E )  , /  ]
[ F ->  · deg ( E )  , %  ]
}

set 325 = GOTO( set 285 , <step> ) :
{
[ <pr> ->  ·  , next  ]
[ <pr> ->  · <op> <pr>  , next  ]
[ <op> ->  · ;  , ;  ]
[ <op> ->  · ;  , V  ]
[ <op> ->  · ;  , :  ]
[ <op> ->  · ;  , let  ]
[ <op> ->  · ;  , next  ]
[ <op> ->  · ;  , if  ]
[ <op> ->  · ;  , goto  ]
[ <op> ->  · ;  , load  ]
[ <op> ->  · ;  , put  ]
[ <op> ->  · ;  , switch  ]
[ <op> ->  · ;  , error  ]
[ <op> ->  · ;  , comment  ]
[ <op> ->  · V <listV> : TYPE ;  , ;  ]
[ <op> ->  · V <listV> : TYPE ;  , V  ]
[ <op> ->  · V <listV> : TYPE ;  , :  ]
[ <op> ->  · V <listV> : TYPE ;  , let  ]
[ <op> ->  · V <listV> : TYPE ;  , next  ]
[ <op> ->  · V <listV> : TYPE ;  , if  ]
[ <op> ->  · V <listV> : TYPE ;  , goto  ]
[ <op> ->  · V <listV> : TYPE ;  , load  ]
[ <op> ->  · V <listV> : TYPE ;  , put  ]
[ <op> ->  · V <listV> : TYPE ;  , switch  ]
[ <op> ->  · V <listV> : TYPE ;  , error  ]
[ <op> ->  · V <listV> : TYPE ;  , comment  ]
[ <op> ->  · V for V = E to E <step> <pr> next V  , ;  ]
[ <op> ->  · V for V = E to E <step> <pr> next V  , V  ]
[ <op> ->  · V for V = E to E <step> <pr> next V  , :  ]
[ <op> ->  · V for V = E to E <step> <pr> next V  , let  ]
[ <op> ->  · V for V = E to E <step> <pr> next V  , next  ]
[ <op> ->  · V for V = E to E <step> <pr> next V  , if  ]
[ <op> ->  · V for V = E to E <step> <pr> next V  , goto  ]
[ <op> ->  · V for V = E to E <step> <pr> next V  , load  ]
[ <op> ->  · V for V = E to E <step> <pr> next V  , put  ]
[ <op> ->  · V for V = E to E <step> <pr> next V  , switch  ]
[ <op> ->  · V for V = E to E <step> <pr> next V  , error  ]
[ <op> ->  · V for V = E to E <step> <pr> next V  , comment  ]
[ <op> ->  · : V  , ;  ]
[ <op> ->  · : V  , V  ]
[ <op> ->  · : V  , :  ]
[ <op> ->  · : V  , let  ]
[ <op> ->  · : V  , next  ]
[ <op> ->  · : V  , if  ]
[ <op> ->  · : V  , goto  ]
[ <op> ->  · : V  , load  ]
[ <op> ->  · : V  , put  ]
[ <op> ->  · : V  , switch  ]
[ <op> ->  · : V  , error  ]
[ <op> ->  · : V  , comment  ]
[ <op> ->  · let V <listA>  , ;  ]
[ <op> ->  · let V <listA>  , V  ]
[ <op> ->  · let V <listA>  , :  ]
[ <op> ->  · let V <listA>  , let  ]
[ <op> ->  · let V <listA>  , next  ]
[ <op> ->  · let V <listA>  , if  ]
[ <op> ->  · let V <listA>  , goto  ]
[ <op> ->  · let V <listA>  , load  ]
[ <op> ->  · let V <listA>  , put  ]
[ <op> ->  · let V <listA>  , switch  ]
[ <op> ->  · let V <listA>  , error  ]
[ <op> ->  · let V <listA>  , comment  ]
[ <op> ->  · if <test> goto V <else> ;  , ;  ]
[ <op> ->  · if <test> goto V <else> ;  , V  ]
[ <op> ->  · if <test> goto V <else> ;  , :  ]
[ <op> ->  · if <test> goto V <else> ;  , let  ]
[ <op> ->  · if <test> goto V <else> ;  , next  ]
[ <op> ->  · if <test> goto V <else> ;  , if  ]
[ <op> ->  · if <test> goto V <else> ;  , goto  ]
[ <op> ->  · if <test> goto V <else> ;  , load  ]
[ <op> ->  · if <test> goto V <else> ;  , put  ]
[ <op> ->  · if <test> goto V <else> ;  , switch  ]
[ <op> ->  · if <test> goto V <else> ;  , error  ]
[ <op> ->  · if <test> goto V <else> ;  , comment  ]
[ <op> ->  · goto V  , ;  ]
[ <op> ->  · goto V  , V  ]
[ <op> ->  · goto V  , :  ]
[ <op> ->  · goto V  , let  ]
[ <op> ->  · goto V  , next  ]
[ <op> ->  · goto V  , if  ]
[ <op> ->  · goto V  , goto  ]
[ <op> ->  · goto V  , load  ]
[ <op> ->  · goto V  , put  ]
[ <op> ->  · goto V  , switch  ]
[ <op> ->  · goto V  , error  ]
[ <op> ->  · goto V  , comment  ]
[ <op> ->  · load ( V <listV> ) ;  , ;  ]
[ <op> ->  · load ( V <listV> ) ;  , V  ]
[ <op> ->  · load ( V <listV> ) ;  , :  ]
[ <op> ->  · load ( V <listV> ) ;  , let  ]
[ <op> ->  · load ( V <listV> ) ;  , next  ]
[ <op> ->  · load ( V <listV> ) ;  , if  ]
[ <op> ->  · load ( V <listV> ) ;  , goto  ]
[ <op> ->  · load ( V <listV> ) ;  , load  ]
[ <op> ->  · load ( V <listV> ) ;  , put  ]
[ <op> ->  · load ( V <listV> ) ;  , switch  ]
[ <op> ->  · load ( V <listV> ) ;  , error  ]
[ <op> ->  · load ( V <listV> ) ;  , comment  ]
[ <op> ->  · put ( E <listE> ) ;  , ;  ]
[ <op> ->  · put ( E <listE> ) ;  , V  ]
[ <op> ->  · put ( E <listE> ) ;  , :  ]
[ <op> ->  · put ( E <listE> ) ;  , let  ]
[ <op> ->  · put ( E <listE> ) ;  , next  ]
[ <op> ->  · put ( E <listE> ) ;  , if  ]
[ <op> ->  · put ( E <listE> ) ;  , goto  ]
[ <op> ->  · put ( E <listE> ) ;  , load  ]
[ <op> ->  · put ( E <listE> ) ;  , put  ]
[ <op> ->  · put ( E <listE> ) ;  , switch  ]
[ <op> ->  · put ( E <listE> ) ;  , error  ]
[ <op> ->  · put ( E <listE> ) ;  , comment  ]
[ <op> ->  · switch ( E ) <switch_body> end switch ;  , ;  ]
[ <op> ->  · switch ( E ) <switch_body> end switch ;  , V  ]
[ <op> ->  · switch ( E ) <switch_body> end switch ;  , :  ]
[ <op> ->  · switch ( E ) <switch_body> end switch ;  , let  ]
[ <op> ->  · switch ( E ) <switch_body> end switch ;  , next  ]
[ <op> ->  · switch ( E ) <switch_body> end switch ;  , if  ]
[ <op> ->  · switch ( E ) <switch_body> end switch ;  , goto  ]
[ <op> ->  · switch ( E ) <switch_body> end switch ;  , load  ]
[ <op> ->  · switch ( E ) <switch_body> end switch ;  , put  ]
[ <op> ->  · switch ( E ) <switch_body> end switch ;  , switch  ]
[ <op> ->  · switch ( E ) <switch_body> end switch ;  , error  ]
[ <op> ->  · switch ( E ) <switch_body> end switch ;  , comment  ]
[ <op> ->  · error ;  , ;  ]
[ <op> ->  · error ;  , V  ]
[ <op> ->  · error ;  , :  ]
[ <op> ->  · error ;  , let  ]
[ <op> ->  · error ;  , next  ]
[ <op> ->  · error ;  , if  ]
[ <op> ->  · error ;  , goto  ]
[ <op> ->  · error ;  , load  ]
[ <op> ->  · error ;  , put  ]
[ <op> ->  · error ;  , switch  ]
[ <op> ->  · error ;  , error  ]
[ <op> ->  · error ;  , comment  ]
[ <op> ->  · comment  , ;  ]
[ <op> ->  · comment  , V  ]
[ <op> ->  · comment  , :  ]
[ <op> ->  · comment  , let  ]
[ <op> ->  · comment  , next  ]
[ <op> ->  · comment  , if  ]
[ <op> ->  · comment  , goto  ]
[ <op> ->  · comment  , load  ]
[ <op> ->  · comment  , put  ]
[ <op> ->  · comment  , switch  ]
[ <op> ->  · comment  , error  ]
[ <op> ->  · comment  , comment  ]
[ <op> -> V for V = E to E <step>  · <pr> next V  ,  ]
[ <op> -> V for V = E to E <step>  · <pr> next V  , ;  ]
[ <op> -> V for V = E to E <step>  · <pr> next V  , V  ]
[ <op> -> V for V = E to E <step>  · <pr> next V  , :  ]
[ <op> -> V for V = E to E <step>  · <pr> next V  , let  ]
[ <op> -> V for V = E to E <step>  · <pr> next V  , if  ]
[ <op> -> V for V = E to E <step>  · <pr> next V  , goto  ]
[ <op> -> V for V = E to E <step>  · <pr> next V  , load  ]
[ <op> -> V for V = E to E <step>  · <pr> next V  , put  ]
[ <op> -> V for V = E to E <step>  · <pr> next V  , switch  ]
[ <op> -> V for V = E to E <step>  · <pr> next V  , error  ]
[ <op> -> V for V = E to E <step>  · <pr> next V  , comment  ]
}

set 326 = GOTO( set 285 , adding ) :
{
[ E ->  · E - T  , ;  ]
[ E ->  · E - T  , V  ]
[ E ->  · E - T  , :  ]
[ E ->  · E - T  , let  ]
[ E ->  · E - T  , next  ]
[ E ->  · E - T  , if  ]
[ E ->  · E - T  , goto  ]
[ E ->  · E - T  , load  ]
[ E ->  · E - T  , put  ]
[ E ->  · E - T  , switch  ]
[ E ->  · E - T  , error  ]
[ E ->  · E - T  , comment  ]
[ E ->  · E - T  , -  ]
[ E ->  · E - T  , +  ]
[ E ->  · E + T  , ;  ]
[ E ->  · E + T  , V  ]
[ E ->  · E + T  , :  ]
[ E ->  · E + T  , let  ]
[ E ->  · E + T  , next  ]
[ E ->  · E + T  , if  ]
[ E ->  · E + T  , goto  ]
[ E ->  · E + T  , load  ]
[ E ->  · E + T  , put  ]
[ E ->  · E + T  , switch  ]
[ E ->  · E + T  , error  ]
[ E ->  · E + T  , comment  ]
[ E ->  · E + T  , -  ]
[ E ->  · E + T  , +  ]
[ E ->  · T  , ;  ]
[ E ->  · T  , V  ]
[ E ->  · T  , :  ]
[ E ->  · T  , let  ]
[ E ->  · T  , next  ]
[ E ->  · T  , if  ]
[ E ->  · T  , goto  ]
[ E ->  · T  , load  ]
[ E ->  · T  , put  ]
[ E ->  · T  , switch  ]
[ E ->  · T  , error  ]
[ E ->  · T  , comment  ]
[ E ->  · T  , -  ]
[ E ->  · T  , +  ]
[ <step> -> adding  · E  , ;  ]
[ <step> -> adding  · E  , V  ]
[ <step> -> adding  · E  , :  ]
[ <step> -> adding  · E  , let  ]
[ <step> -> adding  · E  , next  ]
[ <step> -> adding  · E  , if  ]
[ <step> -> adding  · E  , goto  ]
[ <step> -> adding  · E  , load  ]
[ <step> -> adding  · E  , put  ]
[ <step> -> adding  · E  , switch  ]
[ <step> -> adding  · E  , error  ]
[ <step> -> adding  · E  , comment  ]
[ T ->  · T * F  , ;  ]
[ T ->  · T * F  , V  ]
[ T ->  · T * F  , :  ]
[ T ->  · T * F  , let  ]
[ T ->  · T * F  , next  ]
[ T ->  · T * F  , if  ]
[ T ->  · T * F  , goto  ]
[ T ->  · T * F  , load  ]
[ T ->  · T * F  , put  ]
[ T ->  · T * F  , switch  ]
[ T ->  · T * F  , error  ]
[ T ->  · T * F  , comment  ]
[ T ->  · T * F  , -  ]
[ T ->  · T * F  , +  ]
[ T ->  · T * F  , *  ]
[ T ->  · T * F  , /  ]
[ T ->  · T * F  , %  ]
[ T ->  · T / F  , ;  ]
[ T ->  · T / F  , V  ]
[ T ->  · T / F  , :  ]
[ T ->  · T / F  , let  ]
[ T ->  · T / F  , next  ]
[ T ->  · T / F  , if  ]
[ T ->  · T / F  , goto  ]
[ T ->  · T / F  , load  ]
[ T ->  · T / F  , put  ]
[ T ->  · T / F  , switch  ]
[ T ->  · T / F  , error  ]
[ T ->  · T / F  , comment  ]
[ T ->  · T / F  , -  ]
[ T ->  · T / F  , +  ]
[ T ->  · T / F  , *  ]
[ T ->  · T / F  , /  ]
[ T ->  · T / F  , %  ]
[ T ->  · T % F  , ;  ]
[ T ->  · T % F  , V  ]
[ T ->  · T % F  , :  ]
[ T ->  · T % F  , let  ]
[ T ->  · T % F  , next  ]
[ T ->  · T % F  , if  ]
[ T ->  · T % F  , goto  ]
[ T ->  · T % F  , load  ]
[ T ->  · T % F  , put  ]
[ T ->  · T % F  , switch  ]
[ T ->  · T % F  , error  ]
[ T ->  · T % F  , comment  ]
[ T ->  · T % F  , -  ]
[ T ->  · T % F  , +  ]
[ T ->  · T % F  , *  ]
[ T ->  · T % F  , /  ]
[ T ->  · T % F  , %  ]
[ T ->  · F  , ;  ]
[ T ->  · F  , V  ]
[ T ->  · F  , :  ]
[ T ->  · F  , let  ]
[ T ->  · F  , next  ]
[ T ->  · F  , if  ]
[ T ->  · F  , goto  ]
[ T ->  · F  , load  ]
[ T ->  · F  , put  ]
[ T ->  · F  , switch  ]
[ T ->  · F  , error  ]
[ T ->  · F  , comment  ]
[ T ->  · F  , -  ]
[ T ->  · F  , +  ]
[ T ->  · F  , *  ]
[ T ->  · F  , /  ]
[ T ->  · F  , %  ]
[ F ->  · V  , ;  ]
[ F ->  · V  , V  ]
[ F ->  · V  , :  ]
[ F ->  · V  , let  ]
[ F ->  · V  , next  ]
[ F ->  · V  , if  ]
[ F ->  · V  , goto  ]
[ F ->  · V  , load  ]
[ F ->  · V  , put  ]
[ F ->  · V  , switch  ]
[ F ->  · V  , error  ]
[ F ->  · V  , comment  ]
[ F ->  · V  , -  ]
[ F ->  · V  , +  ]
[ F ->  · V  , *  ]
[ F ->  · V  , /  ]
[ F ->  · V  , %  ]
[ F ->  · ( E )  , ;  ]
[ F ->  · ( E )  , V  ]
[ F ->  · ( E )  , :  ]
[ F ->  · ( E )  , let  ]
[ F ->  · ( E )  , next  ]
[ F ->  · ( E )  , if  ]
[ F ->  · ( E )  , goto  ]
[ F ->  · ( E )  , load  ]
[ F ->  · ( E )  , put  ]
[ F ->  · ( E )  , switch  ]
[ F ->  · ( E )  , error  ]
[ F ->  · ( E )  , comment  ]
[ F ->  · ( E )  , -  ]
[ F ->  · ( E )  , +  ]
[ F ->  · ( E )  , *  ]
[ F ->  · ( E )  , /  ]
[ F ->  · ( E )  , %  ]
[ F ->  · C  , ;  ]
[ F ->  · C  , V  ]
[ F ->  · C  , :  ]
[ F ->  · C  , let  ]
[ F ->  · C  , next  ]
[ F ->  · C  , if  ]
[ F ->  · C  , goto  ]
[ F ->  · C  , load  ]
[ F ->  · C  , put  ]
[ F ->  · C  , switch  ]
[ F ->  · C  , error  ]
[ F ->  · C  , comment  ]
[ F ->  · C  , -  ]
[ F ->  · C  , +  ]
[ F ->  · C  , *  ]
[ F ->  · C  , /  ]
[ F ->  · C  , %  ]
[ F ->  · value ( E , E )  , ;  ]
[ F ->  · value ( E , E )  , V  ]
[ F ->  · value ( E , E )  , :  ]
[ F ->  · value ( E , E )  , let  ]
[ F ->  · value ( E , E )  , next  ]
[ F ->  · value ( E , E )  , if  ]
[ F ->  · value ( E , E )  , goto  ]
[ F ->  · value ( E , E )  , load  ]
[ F ->  · value ( E , E )  , put  ]
[ F ->  · value ( E , E )  , switch  ]
[ F ->  · value ( E , E )  , error  ]
[ F ->  · value ( E , E )  , comment  ]
[ F ->  · value ( E , E )  , -  ]
[ F ->  · value ( E , E )  , +  ]
[ F ->  · value ( E , E )  , *  ]
[ F ->  · value ( E , E )  , /  ]
[ F ->  · value ( E , E )  , %  ]
[ F ->  · derivative ( E )  , ;  ]
[ F ->  · derivative ( E )  , V  ]
[ F ->  · derivative ( E )  , :  ]
[ F ->  · derivative ( E )  , let  ]
[ F ->  · derivative ( E )  , next  ]
[ F ->  · derivative ( E )  , if  ]
[ F ->  · derivative ( E )  , goto  ]
[ F ->  · derivative ( E )  , load  ]
[ F ->  · derivative ( E )  , put  ]
[ F ->  · derivative ( E )  , switch  ]
[ F ->  · derivative ( E )  , error  ]
[ F ->  · derivative ( E )  , comment  ]
[ F ->  · derivative ( E )  , -  ]
[ F ->  · derivative ( E )  , +  ]
[ F ->  · derivative ( E )  , *  ]
[ F ->  · derivative ( E )  , /  ]
[ F ->  · derivative ( E )  , %  ]
[ F ->  · coeff ( E , E )  , ;  ]
[ F ->  · coeff ( E , E )  , V  ]
[ F ->  · coeff ( E , E )  , :  ]
[ F ->  · coeff ( E , E )  , let  ]
[ F ->  · coeff ( E , E )  , next  ]
[ F ->  · coeff ( E , E )  , if  ]
[ F ->  · coeff ( E , E )  , goto  ]
[ F ->  · coeff ( E , E )  , load  ]
[ F ->  · coeff ( E , E )  , put  ]
[ F ->  · coeff ( E , E )  , switch  ]
[ F ->  · coeff ( E , E )  , error  ]
[ F ->  · coeff ( E , E )  , comment  ]
[ F ->  · coeff ( E , E )  , -  ]
[ F ->  · coeff ( E , E )  , +  ]
[ F ->  · coeff ( E , E )  , *  ]
[ F ->  · coeff ( E , E )  , /  ]
[ F ->  · coeff ( E , E )  , %  ]
[ F ->  · deg ( E )  , ;  ]
[ F ->  · deg ( E )  , V  ]
[ F ->  · deg ( E )  , :  ]
[ F ->  · deg ( E )  , let  ]
[ F ->  · deg ( E )  , next  ]
[ F ->  · deg ( E )  , if  ]
[ F ->  · deg ( E )  , goto  ]
[ F ->  · deg ( E )  , load  ]
[ F ->  · deg ( E )  , put  ]
[ F ->  · deg ( E )  , switch  ]
[ F ->  · deg ( E )  , error  ]
[ F ->  · deg ( E )  , comment  ]
[ F ->  · deg ( E )  , -  ]
[ F ->  · deg ( E )  , +  ]
[ F ->  · deg ( E )  , *  ]
[ F ->  · deg ( E )  , /  ]
[ F ->  · deg ( E )  , %  ]
}

set 327 = GOTO( set 287 , % ) :
{
[ T -> T %  · F  , ;  ]
[ T -> T %  · F  , V  ]
[ T -> T %  · F  , :  ]
[ T -> T %  · F  , let  ]
[ T -> T %  · F  , next  ]
[ T -> T %  · F  , adding  ]
[ T -> T %  · F  , if  ]
[ T -> T %  · F  , goto  ]
[ T -> T %  · F  , load  ]
[ T -> T %  · F  , put  ]
[ T -> T %  · F  , switch  ]
[ T -> T %  · F  , error  ]
[ T -> T %  · F  , comment  ]
[ T -> T %  · F  , -  ]
[ T -> T %  · F  , +  ]
[ T -> T %  · F  , *  ]
[ T -> T %  · F  , /  ]
[ T -> T %  · F  , %  ]
[ F ->  · V  , ;  ]
[ F ->  · V  , V  ]
[ F ->  · V  , :  ]
[ F ->  · V  , let  ]
[ F ->  · V  , next  ]
[ F ->  · V  , adding  ]
[ F ->  · V  , if  ]
[ F ->  · V  , goto  ]
[ F ->  · V  , load  ]
[ F ->  · V  , put  ]
[ F ->  · V  , switch  ]
[ F ->  · V  , error  ]
[ F ->  · V  , comment  ]
[ F ->  · V  , -  ]
[ F ->  · V  , +  ]
[ F ->  · V  , *  ]
[ F ->  · V  , /  ]
[ F ->  · V  , %  ]
[ F ->  · ( E )  , ;  ]
[ F ->  · ( E )  , V  ]
[ F ->  · ( E )  , :  ]
[ F ->  · ( E )  , let  ]
[ F ->  · ( E )  , next  ]
[ F ->  · ( E )  , adding  ]
[ F ->  · ( E )  , if  ]
[ F ->  · ( E )  , goto  ]
[ F ->  · ( E )  , load  ]
[ F ->  · ( E )  , put  ]
[ F ->  · ( E )  , switch  ]
[ F ->  · ( E )  , error  ]
[ F ->  · ( E )  , comment  ]
[ F ->  · ( E )  , -  ]
[ F ->  · ( E )  , +  ]
[ F ->  · ( E )  , *  ]
[ F ->  · ( E )  , /  ]
[ F ->  · ( E )  , %  ]
[ F ->  · C  , ;  ]
[ F ->  · C  , V  ]
[ F ->  · C  , :  ]
[ F ->  · C  , let  ]
[ F ->  · C  , next  ]
[ F ->  · C  , adding  ]
[ F ->  · C  , if  ]
[ F ->  · C  , goto  ]
[ F ->  · C  , load  ]
[ F ->  · C  , put  ]
[ F ->  · C  , switch  ]
[ F ->  · C  , error  ]
[ F ->  · C  , comment  ]
[ F ->  · C  , -  ]
[ F ->  · C  , +  ]
[ F ->  · C  , *  ]
[ F ->  · C  , /  ]
[ F ->  · C  , %  ]
[ F ->  · value ( E , E )  , ;  ]
[ F ->  · value ( E , E )  , V  ]
[ F ->  · value ( E , E )  , :  ]
[ F ->  · value ( E , E )  , let  ]
[ F ->  · value ( E , E )  , next  ]
[ F ->  · value ( E , E )  , adding  ]
[ F ->  · value ( E , E )  , if  ]
[ F ->  · value ( E , E )  , goto  ]
[ F ->  · value ( E , E )  , load  ]
[ F ->  · value ( E , E )  , put  ]
[ F ->  · value ( E , E )  , switch  ]
[ F ->  · value ( E , E )  , error  ]
[ F ->  · value ( E , E )  , comment  ]
[ F ->  · value ( E , E )  , -  ]
[ F ->  · value ( E , E )  , +  ]
[ F ->  · value ( E , E )  , *  ]
[ F ->  · value ( E , E )  , /  ]
[ F ->  · value ( E , E )  , %  ]
[ F ->  · derivative ( E )  , ;  ]
[ F ->  · derivative ( E )  , V  ]
[ F ->  · derivative ( E )  , :  ]
[ F ->  · derivative ( E )  , let  ]
[ F ->  · derivative ( E )  , next  ]
[ F ->  · derivative ( E )  , adding  ]
[ F ->  · derivative ( E )  , if  ]
[ F ->  · derivative ( E )  , goto  ]
[ F ->  · derivative ( E )  , load  ]
[ F ->  · derivative ( E )  , put  ]
[ F ->  · derivative ( E )  , switch  ]
[ F ->  · derivative ( E )  , error  ]
[ F ->  · derivative ( E )  , comment  ]
[ F ->  · derivative ( E )  , -  ]
[ F ->  · derivative ( E )  , +  ]
[ F ->  · derivative ( E )  , *  ]
[ F ->  · derivative ( E )  , /  ]
[ F ->  · derivative ( E )  , %  ]
[ F ->  · coeff ( E , E )  , ;  ]
[ F ->  · coeff ( E , E )  , V  ]
[ F ->  · coeff ( E , E )  , :  ]
[ F ->  · coeff ( E , E )  , let  ]
[ F ->  · coeff ( E , E )  , next  ]
[ F ->  · coeff ( E , E )  , adding  ]
[ F ->  · coeff ( E , E )  , if  ]
[ F ->  · coeff ( E , E )  , goto  ]
[ F ->  · coeff ( E , E )  , load  ]
[ F ->  · coeff ( E , E )  , put  ]
[ F ->  · coeff ( E , E )  , switch  ]
[ F ->  · coeff ( E , E )  , error  ]
[ F ->  · coeff ( E , E )  , comment  ]
[ F ->  · coeff ( E , E )  , -  ]
[ F ->  · coeff ( E , E )  , +  ]
[ F ->  · coeff ( E , E )  , *  ]
[ F ->  · coeff ( E , E )  , /  ]
[ F ->  · coeff ( E , E )  , %  ]
[ F ->  · deg ( E )  , ;  ]
[ F ->  · deg ( E )  , V  ]
[ F ->  · deg ( E )  , :  ]
[ F ->  · deg ( E )  , let  ]
[ F ->  · deg ( E )  , next  ]
[ F ->  · deg ( E )  , adding  ]
[ F ->  · deg ( E )  , if  ]
[ F ->  · deg ( E )  , goto  ]
[ F ->  · deg ( E )  , load  ]
[ F ->  · deg ( E )  , put  ]
[ F ->  · deg ( E )  , switch  ]
[ F ->  · deg ( E )  , error  ]
[ F ->  · deg ( E )  , comment  ]
[ F ->  · deg ( E )  , -  ]
[ F ->  · deg ( E )  , +  ]
[ F ->  · deg ( E )  , *  ]
[ F ->  · deg ( E )  , /  ]
[ F ->  · deg ( E )  , %  ]
}

set 328 = GOTO( set 287 , * ) :
{
[ T -> T *  · F  , ;  ]
[ T -> T *  · F  , V  ]
[ T -> T *  · F  , :  ]
[ T -> T *  · F  , let  ]
[ T -> T *  · F  , next  ]
[ T -> T *  · F  , adding  ]
[ T -> T *  · F  , if  ]
[ T -> T *  · F  , goto  ]
[ T -> T *  · F  , load  ]
[ T -> T *  · F  , put  ]
[ T -> T *  · F  , switch  ]
[ T -> T *  · F  , error  ]
[ T -> T *  · F  , comment  ]
[ T -> T *  · F  , -  ]
[ T -> T *  · F  , +  ]
[ T -> T *  · F  , *  ]
[ T -> T *  · F  , /  ]
[ T -> T *  · F  , %  ]
[ F ->  · V  , ;  ]
[ F ->  · V  , V  ]
[ F ->  · V  , :  ]
[ F ->  · V  , let  ]
[ F ->  · V  , next  ]
[ F ->  · V  , adding  ]
[ F ->  · V  , if  ]
[ F ->  · V  , goto  ]
[ F ->  · V  , load  ]
[ F ->  · V  , put  ]
[ F ->  · V  , switch  ]
[ F ->  · V  , error  ]
[ F ->  · V  , comment  ]
[ F ->  · V  , -  ]
[ F ->  · V  , +  ]
[ F ->  · V  , *  ]
[ F ->  · V  , /  ]
[ F ->  · V  , %  ]
[ F ->  · ( E )  , ;  ]
[ F ->  · ( E )  , V  ]
[ F ->  · ( E )  , :  ]
[ F ->  · ( E )  , let  ]
[ F ->  · ( E )  , next  ]
[ F ->  · ( E )  , adding  ]
[ F ->  · ( E )  , if  ]
[ F ->  · ( E )  , goto  ]
[ F ->  · ( E )  , load  ]
[ F ->  · ( E )  , put  ]
[ F ->  · ( E )  , switch  ]
[ F ->  · ( E )  , error  ]
[ F ->  · ( E )  , comment  ]
[ F ->  · ( E )  , -  ]
[ F ->  · ( E )  , +  ]
[ F ->  · ( E )  , *  ]
[ F ->  · ( E )  , /  ]
[ F ->  · ( E )  , %  ]
[ F ->  · C  , ;  ]
[ F ->  · C  , V  ]
[ F ->  · C  , :  ]
[ F ->  · C  , let  ]
[ F ->  · C  , next  ]
[ F ->  · C  , adding  ]
[ F ->  · C  , if  ]
[ F ->  · C  , goto  ]
[ F ->  · C  , load  ]
[ F ->  · C  , put  ]
[ F ->  · C  , switch  ]
[ F ->  · C  , error  ]
[ F ->  · C  , comment  ]
[ F ->  · C  , -  ]
[ F ->  · C  , +  ]
[ F ->  · C  , *  ]
[ F ->  · C  , /  ]
[ F ->  · C  , %  ]
[ F ->  · value ( E , E )  , ;  ]
[ F ->  · value ( E , E )  , V  ]
[ F ->  · value ( E , E )  , :  ]
[ F ->  · value ( E , E )  , let  ]
[ F ->  · value ( E , E )  , next  ]
[ F ->  · value ( E , E )  , adding  ]
[ F ->  · value ( E , E )  , if  ]
[ F ->  · value ( E , E )  , goto  ]
[ F ->  · value ( E , E )  , load  ]
[ F ->  · value ( E , E )  , put  ]
[ F ->  · value ( E , E )  , switch  ]
[ F ->  · value ( E , E )  , error  ]
[ F ->  · value ( E , E )  , comment  ]
[ F ->  · value ( E , E )  , -  ]
[ F ->  · value ( E , E )  , +  ]
[ F ->  · value ( E , E )  , *  ]
[ F ->  · value ( E , E )  , /  ]
[ F ->  · value ( E , E )  , %  ]
[ F ->  · derivative ( E )  , ;  ]
[ F ->  · derivative ( E )  , V  ]
[ F ->  · derivative ( E )  , :  ]
[ F ->  · derivative ( E )  , let  ]
[ F ->  · derivative ( E )  , next  ]
[ F ->  · derivative ( E )  , adding  ]
[ F ->  · derivative ( E )  , if  ]
[ F ->  · derivative ( E )  , goto  ]
[ F ->  · derivative ( E )  , load  ]
[ F ->  · derivative ( E )  , put  ]
[ F ->  · derivative ( E )  , switch  ]
[ F ->  · derivative ( E )  , error  ]
[ F ->  · derivative ( E )  , comment  ]
[ F ->  · derivative ( E )  , -  ]
[ F ->  · derivative ( E )  , +  ]
[ F ->  · derivative ( E )  , *  ]
[ F ->  · derivative ( E )  , /  ]
[ F ->  · derivative ( E )  , %  ]
[ F ->  · coeff ( E , E )  , ;  ]
[ F ->  · coeff ( E , E )  , V  ]
[ F ->  · coeff ( E , E )  , :  ]
[ F ->  · coeff ( E , E )  , let  ]
[ F ->  · coeff ( E , E )  , next  ]
[ F ->  · coeff ( E , E )  , adding  ]
[ F ->  · coeff ( E , E )  , if  ]
[ F ->  · coeff ( E , E )  , goto  ]
[ F ->  · coeff ( E , E )  , load  ]
[ F ->  · coeff ( E , E )  , put  ]
[ F ->  · coeff ( E , E )  , switch  ]
[ F ->  · coeff ( E , E )  , error  ]
[ F ->  · coeff ( E , E )  , comment  ]
[ F ->  · coeff ( E , E )  , -  ]
[ F ->  · coeff ( E , E )  , +  ]
[ F ->  · coeff ( E , E )  , *  ]
[ F ->  · coeff ( E , E )  , /  ]
[ F ->  · coeff ( E , E )  , %  ]
[ F ->  · deg ( E )  , ;  ]
[ F ->  · deg ( E )  , V  ]
[ F ->  · deg ( E )  , :  ]
[ F ->  · deg ( E )  , let  ]
[ F ->  · deg ( E )  , next  ]
[ F ->  · deg ( E )  , adding  ]
[ F ->  · deg ( E )  , if  ]
[ F ->  · deg ( E )  , goto  ]
[ F ->  · deg ( E )  , load  ]
[ F ->  · deg ( E )  , put  ]
[ F ->  · deg ( E )  , switch  ]
[ F ->  · deg ( E )  , error  ]
[ F ->  · deg ( E )  , comment  ]
[ F ->  · deg ( E )  , -  ]
[ F ->  · deg ( E )  , +  ]
[ F ->  · deg ( E )  , *  ]
[ F ->  · deg ( E )  , /  ]
[ F ->  · deg ( E )  , %  ]
}

set 329 = GOTO( set 287 , / ) :
{
[ T -> T /  · F  , ;  ]
[ T -> T /  · F  , V  ]
[ T -> T /  · F  , :  ]
[ T -> T /  · F  , let  ]
[ T -> T /  · F  , next  ]
[ T -> T /  · F  , adding  ]
[ T -> T /  · F  , if  ]
[ T -> T /  · F  , goto  ]
[ T -> T /  · F  , load  ]
[ T -> T /  · F  , put  ]
[ T -> T /  · F  , switch  ]
[ T -> T /  · F  , error  ]
[ T -> T /  · F  , comment  ]
[ T -> T /  · F  , -  ]
[ T -> T /  · F  , +  ]
[ T -> T /  · F  , *  ]
[ T -> T /  · F  , /  ]
[ T -> T /  · F  , %  ]
[ F ->  · V  , ;  ]
[ F ->  · V  , V  ]
[ F ->  · V  , :  ]
[ F ->  · V  , let  ]
[ F ->  · V  , next  ]
[ F ->  · V  , adding  ]
[ F ->  · V  , if  ]
[ F ->  · V  , goto  ]
[ F ->  · V  , load  ]
[ F ->  · V  , put  ]
[ F ->  · V  , switch  ]
[ F ->  · V  , error  ]
[ F ->  · V  , comment  ]
[ F ->  · V  , -  ]
[ F ->  · V  , +  ]
[ F ->  · V  , *  ]
[ F ->  · V  , /  ]
[ F ->  · V  , %  ]
[ F ->  · ( E )  , ;  ]
[ F ->  · ( E )  , V  ]
[ F ->  · ( E )  , :  ]
[ F ->  · ( E )  , let  ]
[ F ->  · ( E )  , next  ]
[ F ->  · ( E )  , adding  ]
[ F ->  · ( E )  , if  ]
[ F ->  · ( E )  , goto  ]
[ F ->  · ( E )  , load  ]
[ F ->  · ( E )  , put  ]
[ F ->  · ( E )  , switch  ]
[ F ->  · ( E )  , error  ]
[ F ->  · ( E )  , comment  ]
[ F ->  · ( E )  , -  ]
[ F ->  · ( E )  , +  ]
[ F ->  · ( E )  , *  ]
[ F ->  · ( E )  , /  ]
[ F ->  · ( E )  , %  ]
[ F ->  · C  , ;  ]
[ F ->  · C  , V  ]
[ F ->  · C  , :  ]
[ F ->  · C  , let  ]
[ F ->  · C  , next  ]
[ F ->  · C  , adding  ]
[ F ->  · C  , if  ]
[ F ->  · C  , goto  ]
[ F ->  · C  , load  ]
[ F ->  · C  , put  ]
[ F ->  · C  , switch  ]
[ F ->  · C  , error  ]
[ F ->  · C  , comment  ]
[ F ->  · C  , -  ]
[ F ->  · C  , +  ]
[ F ->  · C  , *  ]
[ F ->  · C  , /  ]
[ F ->  · C  , %  ]
[ F ->  · value ( E , E )  , ;  ]
[ F ->  · value ( E , E )  , V  ]
[ F ->  · value ( E , E )  , :  ]
[ F ->  · value ( E , E )  , let  ]
[ F ->  · value ( E , E )  , next  ]
[ F ->  · value ( E , E )  , adding  ]
[ F ->  · value ( E , E )  , if  ]
[ F ->  · value ( E , E )  , goto  ]
[ F ->  · value ( E , E )  , load  ]
[ F ->  · value ( E , E )  , put  ]
[ F ->  · value ( E , E )  , switch  ]
[ F ->  · value ( E , E )  , error  ]
[ F ->  · value ( E , E )  , comment  ]
[ F ->  · value ( E , E )  , -  ]
[ F ->  · value ( E , E )  , +  ]
[ F ->  · value ( E , E )  , *  ]
[ F ->  · value ( E , E )  , /  ]
[ F ->  · value ( E , E )  , %  ]
[ F ->  · derivative ( E )  , ;  ]
[ F ->  · derivative ( E )  , V  ]
[ F ->  · derivative ( E )  , :  ]
[ F ->  · derivative ( E )  , let  ]
[ F ->  · derivative ( E )  , next  ]
[ F ->  · derivative ( E )  , adding  ]
[ F ->  · derivative ( E )  , if  ]
[ F ->  · derivative ( E )  , goto  ]
[ F ->  · derivative ( E )  , load  ]
[ F ->  · derivative ( E )  , put  ]
[ F ->  · derivative ( E )  , switch  ]
[ F ->  · derivative ( E )  , error  ]
[ F ->  · derivative ( E )  , comment  ]
[ F ->  · derivative ( E )  , -  ]
[ F ->  · derivative ( E )  , +  ]
[ F ->  · derivative ( E )  , *  ]
[ F ->  · derivative ( E )  , /  ]
[ F ->  · derivative ( E )  , %  ]
[ F ->  · coeff ( E , E )  , ;  ]
[ F ->  · coeff ( E , E )  , V  ]
[ F ->  · coeff ( E , E )  , :  ]
[ F ->  · coeff ( E , E )  , let  ]
[ F ->  · coeff ( E , E )  , next  ]
[ F ->  · coeff ( E , E )  , adding  ]
[ F ->  · coeff ( E , E )  , if  ]
[ F ->  · coeff ( E , E )  , goto  ]
[ F ->  · coeff ( E , E )  , load  ]
[ F ->  · coeff ( E , E )  , put  ]
[ F ->  · coeff ( E , E )  , switch  ]
[ F ->  · coeff ( E , E )  , error  ]
[ F ->  · coeff ( E , E )  , comment  ]
[ F ->  · coeff ( E , E )  , -  ]
[ F ->  · coeff ( E , E )  , +  ]
[ F ->  · coeff ( E , E )  , *  ]
[ F ->  · coeff ( E , E )  , /  ]
[ F ->  · coeff ( E , E )  , %  ]
[ F ->  · deg ( E )  , ;  ]
[ F ->  · deg ( E )  , V  ]
[ F ->  · deg ( E )  , :  ]
[ F ->  · deg ( E )  , let  ]
[ F ->  · deg ( E )  , next  ]
[ F ->  · deg ( E )  , adding  ]
[ F ->  · deg ( E )  , if  ]
[ F ->  · deg ( E )  , goto  ]
[ F ->  · deg ( E )  , load  ]
[ F ->  · deg ( E )  , put  ]
[ F ->  · deg ( E )  , switch  ]
[ F ->  · deg ( E )  , error  ]
[ F ->  · deg ( E )  , comment  ]
[ F ->  · deg ( E )  , -  ]
[ F ->  · deg ( E )  , +  ]
[ F ->  · deg ( E )  , *  ]
[ F ->  · deg ( E )  , /  ]
[ F ->  · deg ( E )  , %  ]
}

set 330 = GOTO( set 289 , ( ) :
{
[ E ->  · E - T  , ,  ]
[ E ->  · E - T  , -  ]
[ E ->  · E - T  , +  ]
[ E ->  · E + T  , ,  ]
[ E ->  · E + T  , -  ]
[ E ->  · E + T  , +  ]
[ E ->  · T  , ,  ]
[ E ->  · T  , -  ]
[ E ->  · T  , +  ]
[ T ->  · T * F  , ,  ]
[ T ->  · T * F  , -  ]
[ T ->  · T * F  , +  ]
[ T ->  · T * F  , *  ]
[ T ->  · T * F  , /  ]
[ T ->  · T * F  , %  ]
[ T ->  · T / F  , ,  ]
[ T ->  · T / F  , -  ]
[ T ->  · T / F  , +  ]
[ T ->  · T / F  , *  ]
[ T ->  · T / F  , /  ]
[ T ->  · T / F  , %  ]
[ T ->  · T % F  , ,  ]
[ T ->  · T % F  , -  ]
[ T ->  · T % F  , +  ]
[ T ->  · T % F  , *  ]
[ T ->  · T % F  , /  ]
[ T ->  · T % F  , %  ]
[ T ->  · F  , ,  ]
[ T ->  · F  , -  ]
[ T ->  · F  , +  ]
[ T ->  · F  , *  ]
[ T ->  · F  , /  ]
[ T ->  · F  , %  ]
[ F ->  · V  , ,  ]
[ F ->  · V  , -  ]
[ F ->  · V  , +  ]
[ F ->  · V  , *  ]
[ F ->  · V  , /  ]
[ F ->  · V  , %  ]
[ F ->  · ( E )  , ,  ]
[ F ->  · ( E )  , -  ]
[ F ->  · ( E )  , +  ]
[ F ->  · ( E )  , *  ]
[ F ->  · ( E )  , /  ]
[ F ->  · ( E )  , %  ]
[ F ->  · C  , ,  ]
[ F ->  · C  , -  ]
[ F ->  · C  , +  ]
[ F ->  · C  , *  ]
[ F ->  · C  , /  ]
[ F ->  · C  , %  ]
[ F ->  · value ( E , E )  , ,  ]
[ F ->  · value ( E , E )  , -  ]
[ F ->  · value ( E , E )  , +  ]
[ F ->  · value ( E , E )  , *  ]
[ F ->  · value ( E , E )  , /  ]
[ F ->  · value ( E , E )  , %  ]
[ F ->  · derivative ( E )  , ,  ]
[ F ->  · derivative ( E )  , -  ]
[ F ->  · derivative ( E )  , +  ]
[ F ->  · derivative ( E )  , *  ]
[ F ->  · derivative ( E )  , /  ]
[ F ->  · derivative ( E )  , %  ]
[ F ->  · coeff ( E , E )  , ,  ]
[ F ->  · coeff ( E , E )  , -  ]
[ F ->  · coeff ( E , E )  , +  ]
[ F ->  · coeff ( E , E )  , *  ]
[ F ->  · coeff ( E , E )  , /  ]
[ F ->  · coeff ( E , E )  , %  ]
[ F ->  · deg ( E )  , ,  ]
[ F ->  · deg ( E )  , -  ]
[ F ->  · deg ( E )  , +  ]
[ F ->  · deg ( E )  , *  ]
[ F ->  · deg ( E )  , /  ]
[ F ->  · deg ( E )  , %  ]
[ F -> coeff (  · E , E )  , ;  ]
[ F -> coeff (  · E , E )  , V  ]
[ F -> coeff (  · E , E )  , :  ]
[ F -> coeff (  · E , E )  , let  ]
[ F -> coeff (  · E , E )  , next  ]
[ F -> coeff (  · E , E )  , adding  ]
[ F -> coeff (  · E , E )  , if  ]
[ F -> coeff (  · E , E )  , goto  ]
[ F -> coeff (  · E , E )  , load  ]
[ F -> coeff (  · E , E )  , put  ]
[ F -> coeff (  · E , E )  , switch  ]
[ F -> coeff (  · E , E )  , error  ]
[ F -> coeff (  · E , E )  , comment  ]
[ F -> coeff (  · E , E )  , -  ]
[ F -> coeff (  · E , E )  , +  ]
[ F -> coeff (  · E , E )  , *  ]
[ F -> coeff (  · E , E )  , /  ]
[ F -> coeff (  · E , E )  , %  ]
}

set 331 = GOTO( set 290 , ( ) :
{
[ E ->  · E - T  , )  ]
[ E ->  · E - T  , -  ]
[ E ->  · E - T  , +  ]
[ E ->  · E + T  , )  ]
[ E ->  · E + T  , -  ]
[ E ->  · E + T  , +  ]
[ E ->  · T  , )  ]
[ E ->  · T  , -  ]
[ E ->  · T  , +  ]
[ T ->  · T * F  , )  ]
[ T ->  · T * F  , -  ]
[ T ->  · T * F  , +  ]
[ T ->  · T * F  , *  ]
[ T ->  · T * F  , /  ]
[ T ->  · T * F  , %  ]
[ T ->  · T / F  , )  ]
[ T ->  · T / F  , -  ]
[ T ->  · T / F  , +  ]
[ T ->  · T / F  , *  ]
[ T ->  · T / F  , /  ]
[ T ->  · T / F  , %  ]
[ T ->  · T % F  , )  ]
[ T ->  · T % F  , -  ]
[ T ->  · T % F  , +  ]
[ T ->  · T % F  , *  ]
[ T ->  · T % F  , /  ]
[ T ->  · T % F  , %  ]
[ T ->  · F  , )  ]
[ T ->  · F  , -  ]
[ T ->  · F  , +  ]
[ T ->  · F  , *  ]
[ T ->  · F  , /  ]
[ T ->  · F  , %  ]
[ F ->  · V  , )  ]
[ F ->  · V  , -  ]
[ F ->  · V  , +  ]
[ F ->  · V  , *  ]
[ F ->  · V  , /  ]
[ F ->  · V  , %  ]
[ F ->  · ( E )  , )  ]
[ F ->  · ( E )  , -  ]
[ F ->  · ( E )  , +  ]
[ F ->  · ( E )  , *  ]
[ F ->  · ( E )  , /  ]
[ F ->  · ( E )  , %  ]
[ F ->  · C  , )  ]
[ F ->  · C  , -  ]
[ F ->  · C  , +  ]
[ F ->  · C  , *  ]
[ F ->  · C  , /  ]
[ F ->  · C  , %  ]
[ F ->  · value ( E , E )  , )  ]
[ F ->  · value ( E , E )  , -  ]
[ F ->  · value ( E , E )  , +  ]
[ F ->  · value ( E , E )  , *  ]
[ F ->  · value ( E , E )  , /  ]
[ F ->  · value ( E , E )  , %  ]
[ F ->  · derivative ( E )  , )  ]
[ F ->  · derivative ( E )  , -  ]
[ F ->  · derivative ( E )  , +  ]
[ F ->  · derivative ( E )  , *  ]
[ F ->  · derivative ( E )  , /  ]
[ F ->  · derivative ( E )  , %  ]
[ F ->  · coeff ( E , E )  , )  ]
[ F ->  · coeff ( E , E )  , -  ]
[ F ->  · coeff ( E , E )  , +  ]
[ F ->  · coeff ( E , E )  , *  ]
[ F ->  · coeff ( E , E )  , /  ]
[ F ->  · coeff ( E , E )  , %  ]
[ F ->  · deg ( E )  , )  ]
[ F ->  · deg ( E )  , -  ]
[ F ->  · deg ( E )  , +  ]
[ F ->  · deg ( E )  , *  ]
[ F ->  · deg ( E )  , /  ]
[ F ->  · deg ( E )  , %  ]
[ F -> deg (  · E )  , ;  ]
[ F -> deg (  · E )  , V  ]
[ F -> deg (  · E )  , :  ]
[ F -> deg (  · E )  , let  ]
[ F -> deg (  · E )  , next  ]
[ F -> deg (  · E )  , adding  ]
[ F -> deg (  · E )  , if  ]
[ F -> deg (  · E )  , goto  ]
[ F -> deg (  · E )  , load  ]
[ F -> deg (  · E )  , put  ]
[ F -> deg (  · E )  , switch  ]
[ F -> deg (  · E )  , error  ]
[ F -> deg (  · E )  , comment  ]
[ F -> deg (  · E )  , -  ]
[ F -> deg (  · E )  , +  ]
[ F -> deg (  · E )  , *  ]
[ F -> deg (  · E )  , /  ]
[ F -> deg (  · E )  , %  ]
}

set 332 = GOTO( set 291 , ( ) :
{
[ E ->  · E - T  , )  ]
[ E ->  · E - T  , -  ]
[ E ->  · E - T  , +  ]
[ E ->  · E + T  , )  ]
[ E ->  · E + T  , -  ]
[ E ->  · E + T  , +  ]
[ E ->  · T  , )  ]
[ E ->  · T  , -  ]
[ E ->  · T  , +  ]
[ T ->  · T * F  , )  ]
[ T ->  · T * F  , -  ]
[ T ->  · T * F  , +  ]
[ T ->  · T * F  , *  ]
[ T ->  · T * F  , /  ]
[ T ->  · T * F  , %  ]
[ T ->  · T / F  , )  ]
[ T ->  · T / F  , -  ]
[ T ->  · T / F  , +  ]
[ T ->  · T / F  , *  ]
[ T ->  · T / F  , /  ]
[ T ->  · T / F  , %  ]
[ T ->  · T % F  , )  ]
[ T ->  · T % F  , -  ]
[ T ->  · T % F  , +  ]
[ T ->  · T % F  , *  ]
[ T ->  · T % F  , /  ]
[ T ->  · T % F  , %  ]
[ T ->  · F  , )  ]
[ T ->  · F  , -  ]
[ T ->  · F  , +  ]
[ T ->  · F  , *  ]
[ T ->  · F  , /  ]
[ T ->  · F  , %  ]
[ F ->  · V  , )  ]
[ F ->  · V  , -  ]
[ F ->  · V  , +  ]
[ F ->  · V  , *  ]
[ F ->  · V  , /  ]
[ F ->  · V  , %  ]
[ F ->  · ( E )  , )  ]
[ F ->  · ( E )  , -  ]
[ F ->  · ( E )  , +  ]
[ F ->  · ( E )  , *  ]
[ F ->  · ( E )  , /  ]
[ F ->  · ( E )  , %  ]
[ F ->  · C  , )  ]
[ F ->  · C  , -  ]
[ F ->  · C  , +  ]
[ F ->  · C  , *  ]
[ F ->  · C  , /  ]
[ F ->  · C  , %  ]
[ F ->  · value ( E , E )  , )  ]
[ F ->  · value ( E , E )  , -  ]
[ F ->  · value ( E , E )  , +  ]
[ F ->  · value ( E , E )  , *  ]
[ F ->  · value ( E , E )  , /  ]
[ F ->  · value ( E , E )  , %  ]
[ F ->  · derivative ( E )  , )  ]
[ F ->  · derivative ( E )  , -  ]
[ F ->  · derivative ( E )  , +  ]
[ F ->  · derivative ( E )  , *  ]
[ F ->  · derivative ( E )  , /  ]
[ F ->  · derivative ( E )  , %  ]
[ F ->  · coeff ( E , E )  , )  ]
[ F ->  · coeff ( E , E )  , -  ]
[ F ->  · coeff ( E , E )  , +  ]
[ F ->  · coeff ( E , E )  , *  ]
[ F ->  · coeff ( E , E )  , /  ]
[ F ->  · coeff ( E , E )  , %  ]
[ F ->  · deg ( E )  , )  ]
[ F ->  · deg ( E )  , -  ]
[ F ->  · deg ( E )  , +  ]
[ F ->  · deg ( E )  , *  ]
[ F ->  · deg ( E )  , /  ]
[ F ->  · deg ( E )  , %  ]
[ F -> derivative (  · E )  , ;  ]
[ F -> derivative (  · E )  , V  ]
[ F -> derivative (  · E )  , :  ]
[ F -> derivative (  · E )  , let  ]
[ F -> derivative (  · E )  , next  ]
[ F -> derivative (  · E )  , adding  ]
[ F -> derivative (  · E )  , if  ]
[ F -> derivative (  · E )  , goto  ]
[ F -> derivative (  · E )  , load  ]
[ F -> derivative (  · E )  , put  ]
[ F -> derivative (  · E )  , switch  ]
[ F -> derivative (  · E )  , error  ]
[ F -> derivative (  · E )  , comment  ]
[ F -> derivative (  · E )  , -  ]
[ F -> derivative (  · E )  , +  ]
[ F -> derivative (  · E )  , *  ]
[ F -> derivative (  · E )  , /  ]
[ F -> derivative (  · E )  , %  ]
}

set 333 = GOTO( set 292 , ( ) :
{
[ E ->  · E - T  , ,  ]
[ E ->  · E - T  , -  ]
[ E ->  · E - T  , +  ]
[ E ->  · E + T  , ,  ]
[ E ->  · E + T  , -  ]
[ E ->  · E + T  , +  ]
[ E ->  · T  , ,  ]
[ E ->  · T  , -  ]
[ E ->  · T  , +  ]
[ T ->  · T * F  , ,  ]
[ T ->  · T * F  , -  ]
[ T ->  · T * F  , +  ]
[ T ->  · T * F  , *  ]
[ T ->  · T * F  , /  ]
[ T ->  · T * F  , %  ]
[ T ->  · T / F  , ,  ]
[ T ->  · T / F  , -  ]
[ T ->  · T / F  , +  ]
[ T ->  · T / F  , *  ]
[ T ->  · T / F  , /  ]
[ T ->  · T / F  , %  ]
[ T ->  · T % F  , ,  ]
[ T ->  · T % F  , -  ]
[ T ->  · T % F  , +  ]
[ T ->  · T % F  , *  ]
[ T ->  · T % F  , /  ]
[ T ->  · T % F  , %  ]
[ T ->  · F  , ,  ]
[ T ->  · F  , -  ]
[ T ->  · F  , +  ]
[ T ->  · F  , *  ]
[ T ->  · F  , /  ]
[ T ->  · F  , %  ]
[ F ->  · V  , ,  ]
[ F ->  · V  , -  ]
[ F ->  · V  , +  ]
[ F ->  · V  , *  ]
[ F ->  · V  , /  ]
[ F ->  · V  , %  ]
[ F ->  · ( E )  , ,  ]
[ F ->  · ( E )  , -  ]
[ F ->  · ( E )  , +  ]
[ F ->  · ( E )  , *  ]
[ F ->  · ( E )  , /  ]
[ F ->  · ( E )  , %  ]
[ F ->  · C  , ,  ]
[ F ->  · C  , -  ]
[ F ->  · C  , +  ]
[ F ->  · C  , *  ]
[ F ->  · C  , /  ]
[ F ->  · C  , %  ]
[ F ->  · value ( E , E )  , ,  ]
[ F ->  · value ( E , E )  , -  ]
[ F ->  · value ( E , E )  , +  ]
[ F ->  · value ( E , E )  , *  ]
[ F ->  · value ( E , E )  , /  ]
[ F ->  · value ( E , E )  , %  ]
[ F ->  · derivative ( E )  , ,  ]
[ F ->  · derivative ( E )  , -  ]
[ F ->  · derivative ( E )  , +  ]
[ F ->  · derivative ( E )  , *  ]
[ F ->  · derivative ( E )  , /  ]
[ F ->  · derivative ( E )  , %  ]
[ F ->  · coeff ( E , E )  , ,  ]
[ F ->  · coeff ( E , E )  , -  ]
[ F ->  · coeff ( E , E )  , +  ]
[ F ->  · coeff ( E , E )  , *  ]
[ F ->  · coeff ( E , E )  , /  ]
[ F ->  · coeff ( E , E )  , %  ]
[ F ->  · deg ( E )  , ,  ]
[ F ->  · deg ( E )  , -  ]
[ F ->  · deg ( E )  , +  ]
[ F ->  · deg ( E )  , *  ]
[ F ->  · deg ( E )  , /  ]
[ F ->  · deg ( E )  , %  ]
[ F -> value (  · E , E )  , ;  ]
[ F -> value (  · E , E )  , V  ]
[ F -> value (  · E , E )  , :  ]
[ F -> value (  · E , E )  , let  ]
[ F -> value (  · E , E )  , next  ]
[ F -> value (  · E , E )  , adding  ]
[ F -> value (  · E , E )  , if  ]
[ F -> value (  · E , E )  , goto  ]
[ F -> value (  · E , E )  , load  ]
[ F -> value (  · E , E )  , put  ]
[ F -> value (  · E , E )  , switch  ]
[ F -> value (  · E , E )  , error  ]
[ F -> value (  · E , E )  , comment  ]
[ F -> value (  · E , E )  , -  ]
[ F -> value (  · E , E )  , +  ]
[ F -> value (  · E , E )  , *  ]
[ F -> value (  · E , E )  , /  ]
[ F -> value (  · E , E )  , %  ]
}

set 334 = GOTO( set 296 , , ) :
{
[ E ->  · E - T  , )  ]
[ E ->  · E - T  , -  ]
[ E ->  · E - T  , +  ]
[ E ->  · E + T  , )  ]
[ E ->  · E + T  , -  ]
[ E ->  · E + T  , +  ]
[ E ->  · T  , )  ]
[ E ->  · T  , -  ]
[ E ->  · T  , +  ]
[ T ->  · T * F  , )  ]
[ T ->  · T * F  , -  ]
[ T ->  · T * F  , +  ]
[ T ->  · T * F  , *  ]
[ T ->  · T * F  , /  ]
[ T ->  · T * F  , %  ]
[ T ->  · T / F  , )  ]
[ T ->  · T / F  , -  ]
[ T ->  · T / F  , +  ]
[ T ->  · T / F  , *  ]
[ T ->  · T / F  , /  ]
[ T ->  · T / F  , %  ]
[ T ->  · T % F  , )  ]
[ T ->  · T % F  , -  ]
[ T ->  · T % F  , +  ]
[ T ->  · T % F  , *  ]
[ T ->  · T % F  , /  ]
[ T ->  · T % F  , %  ]
[ T ->  · F  , )  ]
[ T ->  · F  , -  ]
[ T ->  · F  , +  ]
[ T ->  · F  , *  ]
[ T ->  · F  , /  ]
[ T ->  · F  , %  ]
[ F ->  · V  , )  ]
[ F ->  · V  , -  ]
[ F ->  · V  , +  ]
[ F ->  · V  , *  ]
[ F ->  · V  , /  ]
[ F ->  · V  , %  ]
[ F ->  · ( E )  , )  ]
[ F ->  · ( E )  , -  ]
[ F ->  · ( E )  , +  ]
[ F ->  · ( E )  , *  ]
[ F ->  · ( E )  , /  ]
[ F ->  · ( E )  , %  ]
[ F ->  · C  , )  ]
[ F ->  · C  , -  ]
[ F ->  · C  , +  ]
[ F ->  · C  , *  ]
[ F ->  · C  , /  ]
[ F ->  · C  , %  ]
[ F ->  · value ( E , E )  , )  ]
[ F ->  · value ( E , E )  , -  ]
[ F ->  · value ( E , E )  , +  ]
[ F ->  · value ( E , E )  , *  ]
[ F ->  · value ( E , E )  , /  ]
[ F ->  · value ( E , E )  , %  ]
[ F ->  · derivative ( E )  , )  ]
[ F ->  · derivative ( E )  , -  ]
[ F ->  · derivative ( E )  , +  ]
[ F ->  · derivative ( E )  , *  ]
[ F ->  · derivative ( E )  , /  ]
[ F ->  · derivative ( E )  , %  ]
[ F ->  · coeff ( E , E )  , )  ]
[ F ->  · coeff ( E , E )  , -  ]
[ F ->  · coeff ( E , E )  , +  ]
[ F ->  · coeff ( E , E )  , *  ]
[ F ->  · coeff ( E , E )  , /  ]
[ F ->  · coeff ( E , E )  , %  ]
[ F ->  · deg ( E )  , )  ]
[ F ->  · deg ( E )  , -  ]
[ F ->  · deg ( E )  , +  ]
[ F ->  · deg ( E )  , *  ]
[ F ->  · deg ( E )  , /  ]
[ F ->  · deg ( E )  , %  ]
[ F -> coeff ( E ,  · E )  , to  ]
[ F -> coeff ( E ,  · E )  , -  ]
[ F -> coeff ( E ,  · E )  , +  ]
[ F -> coeff ( E ,  · E )  , *  ]
[ F -> coeff ( E ,  · E )  , /  ]
[ F -> coeff ( E ,  · E )  , %  ]
}

set 335 = GOTO( set 297 , ) ) :
{
[ F -> deg ( E )  ·  , to  ]
[ F -> deg ( E )  ·  , -  ]
[ F -> deg ( E )  ·  , +  ]
[ F -> deg ( E )  ·  , *  ]
[ F -> deg ( E )  ·  , /  ]
[ F -> deg ( E )  ·  , %  ]
}

set 336 = GOTO( set 298 , ) ) :
{
[ F -> derivative ( E )  ·  , to  ]
[ F -> derivative ( E )  ·  , -  ]
[ F -> derivative ( E )  ·  , +  ]
[ F -> derivative ( E )  ·  , *  ]
[ F -> derivative ( E )  ·  , /  ]
[ F -> derivative ( E )  ·  , %  ]
}

set 337 = GOTO( set 299 , , ) :
{
[ E ->  · E - T  , )  ]
[ E ->  · E - T  , -  ]
[ E ->  · E - T  , +  ]
[ E ->  · E + T  , )  ]
[ E ->  · E + T  , -  ]
[ E ->  · E + T  , +  ]
[ E ->  · T  , )  ]
[ E ->  · T  , -  ]
[ E ->  · T  , +  ]
[ T ->  · T * F  , )  ]
[ T ->  · T * F  , -  ]
[ T ->  · T * F  , +  ]
[ T ->  · T * F  , *  ]
[ T ->  · T * F  , /  ]
[ T ->  · T * F  , %  ]
[ T ->  · T / F  , )  ]
[ T ->  · T / F  , -  ]
[ T ->  · T / F  , +  ]
[ T ->  · T / F  , *  ]
[ T ->  · T / F  , /  ]
[ T ->  · T / F  , %  ]
[ T ->  · T % F  , )  ]
[ T ->  · T % F  , -  ]
[ T ->  · T % F  , +  ]
[ T ->  · T % F  , *  ]
[ T ->  · T % F  , /  ]
[ T ->  · T % F  , %  ]
[ T ->  · F  , )  ]
[ T ->  · F  , -  ]
[ T ->  · F  , +  ]
[ T ->  · F  , *  ]
[ T ->  · F  , /  ]
[ T ->  · F  , %  ]
[ F ->  · V  , )  ]
[ F ->  · V  , -  ]
[ F ->  · V  , +  ]
[ F ->  · V  , *  ]
[ F ->  · V  , /  ]
[ F ->  · V  , %  ]
[ F ->  · ( E )  , )  ]
[ F ->  · ( E )  , -  ]
[ F ->  · ( E )  , +  ]
[ F ->  · ( E )  , *  ]
[ F ->  · ( E )  , /  ]
[ F ->  · ( E )  , %  ]
[ F ->  · C  , )  ]
[ F ->  · C  , -  ]
[ F ->  · C  , +  ]
[ F ->  · C  , *  ]
[ F ->  · C  , /  ]
[ F ->  · C  , %  ]
[ F ->  · value ( E , E )  , )  ]
[ F ->  · value ( E , E )  , -  ]
[ F ->  · value ( E , E )  , +  ]
[ F ->  · value ( E , E )  , *  ]
[ F ->  · value ( E , E )  , /  ]
[ F ->  · value ( E , E )  , %  ]
[ F ->  · derivative ( E )  , )  ]
[ F ->  · derivative ( E )  , -  ]
[ F ->  · derivative ( E )  , +  ]
[ F ->  · derivative ( E )  , *  ]
[ F ->  · derivative ( E )  , /  ]
[ F ->  · derivative ( E )  , %  ]
[ F ->  · coeff ( E , E )  , )  ]
[ F ->  · coeff ( E , E )  , -  ]
[ F ->  · coeff ( E , E )  , +  ]
[ F ->  · coeff ( E , E )  , *  ]
[ F ->  · coeff ( E , E )  , /  ]
[ F ->  · coeff ( E , E )  , %  ]
[ F ->  · deg ( E )  , )  ]
[ F ->  · deg ( E )  , -  ]
[ F ->  · deg ( E )  , +  ]
[ F ->  · deg ( E )  , *  ]
[ F ->  · deg ( E )  , /  ]
[ F ->  · deg ( E )  , %  ]
[ F -> value ( E ,  · E )  , to  ]
[ F -> value ( E ,  · E )  , -  ]
[ F -> value ( E ,  · E )  , +  ]
[ F -> value ( E ,  · E )  , *  ]
[ F -> value ( E ,  · E )  , /  ]
[ F -> value ( E ,  · E )  , %  ]
}

set 338 = GOTO( set 300 , ) ) :
{
[ F -> coeff ( E , E )  ·  , )  ]
[ F -> coeff ( E , E )  ·  , -  ]
[ F -> coeff ( E , E )  ·  , +  ]
[ F -> coeff ( E , E )  ·  , *  ]
[ F -> coeff ( E , E )  ·  , /  ]
[ F -> coeff ( E , E )  ·  , %  ]
}

set 339 = GOTO( set 301 , ) ) :
{
[ F -> value ( E , E )  ·  , )  ]
[ F -> value ( E , E )  ·  , -  ]
[ F -> value ( E , E )  ·  , +  ]
[ F -> value ( E , E )  ·  , *  ]
[ F -> value ( E , E )  ·  , /  ]
[ F -> value ( E , E )  ·  , %  ]
}

set 340 = GOTO( set 303 , E ) :
{
[ E -> E  · - T  , )  ]
[ E -> E  · - T  , -  ]
[ E -> E  · - T  , +  ]
[ E -> E  · + T  , )  ]
[ E -> E  · + T  , -  ]
[ E -> E  · + T  , +  ]
[ F -> coeff ( E , E  · )  , goto  ]
[ F -> coeff ( E , E  · )  , -  ]
[ F -> coeff ( E , E  · )  , +  ]
[ F -> coeff ( E , E  · )  , *  ]
[ F -> coeff ( E , E  · )  , /  ]
[ F -> coeff ( E , E  · )  , %  ]
}

set 341 = GOTO( set 306 , E ) :
{
[ E -> E  · - T  , )  ]
[ E -> E  · - T  , -  ]
[ E -> E  · - T  , +  ]
[ E -> E  · + T  , )  ]
[ E -> E  · + T  , -  ]
[ E -> E  · + T  , +  ]
[ F -> value ( E , E  · )  , goto  ]
[ F -> value ( E , E  · )  , -  ]
[ F -> value ( E , E  · )  , +  ]
[ F -> value ( E , E  · )  , *  ]
[ F -> value ( E , E  · )  , /  ]
[ F -> value ( E , E  · )  , %  ]
}

set 342 = GOTO( set 308 , E ) :
{
[ E -> E  · - T  , )  ]
[ E -> E  · - T  , -  ]
[ E -> E  · - T  , +  ]
[ E -> E  · + T  , )  ]
[ E -> E  · + T  , -  ]
[ E -> E  · + T  , +  ]
[ F -> coeff ( E , E  · )  , ,  ]
[ F -> coeff ( E , E  · )  , -  ]
[ F -> coeff ( E , E  · )  , +  ]
[ F -> coeff ( E , E  · )  , *  ]
[ F -> coeff ( E , E  · )  , /  ]
[ F -> coeff ( E , E  · )  , %  ]
}

set 343 = GOTO( set 311 , E ) :
{
[ E -> E  · - T  , )  ]
[ E -> E  · - T  , -  ]
[ E -> E  · - T  , +  ]
[ E -> E  · + T  , )  ]
[ E -> E  · + T  , -  ]
[ E -> E  · + T  , +  ]
[ F -> value ( E , E  · )  , ,  ]
[ F -> value ( E , E  · )  , -  ]
[ F -> value ( E , E  · )  , +  ]
[ F -> value ( E , E  · )  , *  ]
[ F -> value ( E , E  · )  , /  ]
[ F -> value ( E , E  · )  , %  ]
}

set 344 = GOTO( set 313 , E ) :
{
[ E -> E  · - T  , )  ]
[ E -> E  · - T  , -  ]
[ E -> E  · - T  , +  ]
[ E -> E  · + T  , )  ]
[ E -> E  · + T  , -  ]
[ E -> E  · + T  , +  ]
[ F -> coeff ( E , E  · )  , ;  ]
[ F -> coeff ( E , E  · )  , -  ]
[ F -> coeff ( E , E  · )  , +  ]
[ F -> coeff ( E , E  · )  , *  ]
[ F -> coeff ( E , E  · )  , /  ]
[ F -> coeff ( E , E  · )  , %  ]
}

set 345 = GOTO( set 316 , E ) :
{
[ E -> E  · - T  , )  ]
[ E -> E  · - T  , -  ]
[ E -> E  · - T  , +  ]
[ E -> E  · + T  , )  ]
[ E -> E  · + T  , -  ]
[ E -> E  · + T  , +  ]
[ F -> value ( E , E  · )  , ;  ]
[ F -> value ( E , E  · )  , -  ]
[ F -> value ( E , E  · )  , +  ]
[ F -> value ( E , E  · )  , *  ]
[ F -> value ( E , E  · )  , /  ]
[ F -> value ( E , E  · )  , %  ]
}

set 346 = GOTO( set 317 , ) ) :
{
[ F -> coeff ( E , E )  ·  , ,  ]
[ F -> coeff ( E , E )  ·  , )  ]
[ F -> coeff ( E , E )  ·  , -  ]
[ F -> coeff ( E , E )  ·  , +  ]
[ F -> coeff ( E , E )  ·  , *  ]
[ F -> coeff ( E , E )  ·  , /  ]
[ F -> coeff ( E , E )  ·  , %  ]
}

set 347 = GOTO( set 318 , ) ) :
{
[ F -> value ( E , E )  ·  , ,  ]
[ F -> value ( E , E )  ·  , )  ]
[ F -> value ( E , E )  ·  , -  ]
[ F -> value ( E , E )  ·  , +  ]
[ F -> value ( E , E )  ·  , *  ]
[ F -> value ( E , E )  ·  , /  ]
[ F -> value ( E , E )  ·  , %  ]
}

set 348 = GOTO( set 319 , : ) :
{
[ <op> -> :  · V  , ;  ]
[ <op> -> :  · V  , V  ]
[ <op> -> :  · V  , :  ]
[ <op> -> :  · V  , let  ]
[ <op> -> :  · V  , if  ]
[ <op> -> :  · V  , goto  ]
[ <op> -> :  · V  , load  ]
[ <op> -> :  · V  , put  ]
[ <op> -> :  · V  , switch  ]
[ <op> -> :  · V  , end  ]
[ <op> -> :  · V  , break  ]
[ <op> -> :  · V  , error  ]
[ <op> -> :  · V  , comment  ]
}

set 349 = GOTO( set 319 , ; ) :
{
[ <op> -> ;  ·  , ;  ]
[ <op> -> ;  ·  , V  ]
[ <op> -> ;  ·  , :  ]
[ <op> -> ;  ·  , let  ]
[ <op> -> ;  ·  , if  ]
[ <op> -> ;  ·  , goto  ]
[ <op> -> ;  ·  , load  ]
[ <op> -> ;  ·  , put  ]
[ <op> -> ;  ·  , switch  ]
[ <op> -> ;  ·  , end  ]
[ <op> -> ;  ·  , break  ]
[ <op> -> ;  ·  , error  ]
[ <op> -> ;  ·  , comment  ]
}

set 350 = GOTO( set 319 , <op> ) :
{
[ <pr> ->  ·  , end  ]
[ <pr> ->  ·  , break  ]
[ <pr> ->  · <op> <pr>  , end  ]
[ <pr> ->  · <op> <pr>  , break  ]
[ <pr> -> <op>  · <pr>  , end  ]
[ <pr> -> <op>  · <pr>  , break  ]
[ <op> ->  · ;  , ;  ]
[ <op> ->  · ;  , V  ]
[ <op> ->  · ;  , :  ]
[ <op> ->  · ;  , let  ]
[ <op> ->  · ;  , if  ]
[ <op> ->  · ;  , goto  ]
[ <op> ->  · ;  , load  ]
[ <op> ->  · ;  , put  ]
[ <op> ->  · ;  , switch  ]
[ <op> ->  · ;  , end  ]
[ <op> ->  · ;  , break  ]
[ <op> ->  · ;  , error  ]
[ <op> ->  · ;  , comment  ]
[ <op> ->  · V <listV> : TYPE ;  , ;  ]
[ <op> ->  · V <listV> : TYPE ;  , V  ]
[ <op> ->  · V <listV> : TYPE ;  , :  ]
[ <op> ->  · V <listV> : TYPE ;  , let  ]
[ <op> ->  · V <listV> : TYPE ;  , if  ]
[ <op> ->  · V <listV> : TYPE ;  , goto  ]
[ <op> ->  · V <listV> : TYPE ;  , load  ]
[ <op> ->  · V <listV> : TYPE ;  , put  ]
[ <op> ->  · V <listV> : TYPE ;  , switch  ]
[ <op> ->  · V <listV> : TYPE ;  , end  ]
[ <op> ->  · V <listV> : TYPE ;  , break  ]
[ <op> ->  · V <listV> : TYPE ;  , error  ]
[ <op> ->  · V <listV> : TYPE ;  , comment  ]
[ <op> ->  · V for V = E to E <step> <pr> next V  , ;  ]
[ <op> ->  · V for V = E to E <step> <pr> next V  , V  ]
[ <op> ->  · V for V = E to E <step> <pr> next V  , :  ]
[ <op> ->  · V for V = E to E <step> <pr> next V  , let  ]
[ <op> ->  · V for V = E to E <step> <pr> next V  , if  ]
[ <op> ->  · V for V = E to E <step> <pr> next V  , goto  ]
[ <op> ->  · V for V = E to E <step> <pr> next V  , load  ]
[ <op> ->  · V for V = E to E <step> <pr> next V  , put  ]
[ <op> ->  · V for V = E to E <step> <pr> next V  , switch  ]
[ <op> ->  · V for V = E to E <step> <pr> next V  , end  ]
[ <op> ->  · V for V = E to E <step> <pr> next V  , break  ]
[ <op> ->  · V for V = E to E <step> <pr> next V  , error  ]
[ <op> ->  · V for V = E to E <step> <pr> next V  , comment  ]
[ <op> ->  · : V  , ;  ]
[ <op> ->  · : V  , V  ]
[ <op> ->  · : V  , :  ]
[ <op> ->  · : V  , let  ]
[ <op> ->  · : V  , if  ]
[ <op> ->  · : V  , goto  ]
[ <op> ->  · : V  , load  ]
[ <op> ->  · : V  , put  ]
[ <op> ->  · : V  , switch  ]
[ <op> ->  · : V  , end  ]
[ <op> ->  · : V  , break  ]
[ <op> ->  · : V  , error  ]
[ <op> ->  · : V  , comment  ]
[ <op> ->  · let V <listA>  , ;  ]
[ <op> ->  · let V <listA>  , V  ]
[ <op> ->  · let V <listA>  , :  ]
[ <op> ->  · let V <listA>  , let  ]
[ <op> ->  · let V <listA>  , if  ]
[ <op> ->  · let V <listA>  , goto  ]
[ <op> ->  · let V <listA>  , load  ]
[ <op> ->  · let V <listA>  , put  ]
[ <op> ->  · let V <listA>  , switch  ]
[ <op> ->  · let V <listA>  , end  ]
[ <op> ->  · let V <listA>  , break  ]
[ <op> ->  · let V <listA>  , error  ]
[ <op> ->  · let V <listA>  , comment  ]
[ <op> ->  · if <test> goto V <else> ;  , ;  ]
[ <op> ->  · if <test> goto V <else> ;  , V  ]
[ <op> ->  · if <test> goto V <else> ;  , :  ]
[ <op> ->  · if <test> goto V <else> ;  , let  ]
[ <op> ->  · if <test> goto V <else> ;  , if  ]
[ <op> ->  · if <test> goto V <else> ;  , goto  ]
[ <op> ->  · if <test> goto V <else> ;  , load  ]
[ <op> ->  · if <test> goto V <else> ;  , put  ]
[ <op> ->  · if <test> goto V <else> ;  , switch  ]
[ <op> ->  · if <test> goto V <else> ;  , end  ]
[ <op> ->  · if <test> goto V <else> ;  , break  ]
[ <op> ->  · if <test> goto V <else> ;  , error  ]
[ <op> ->  · if <test> goto V <else> ;  , comment  ]
[ <op> ->  · goto V  , ;  ]
[ <op> ->  · goto V  , V  ]
[ <op> ->  · goto V  , :  ]
[ <op> ->  · goto V  , let  ]
[ <op> ->  · goto V  , if  ]
[ <op> ->  · goto V  , goto  ]
[ <op> ->  · goto V  , load  ]
[ <op> ->  · goto V  , put  ]
[ <op> ->  · goto V  , switch  ]
[ <op> ->  · goto V  , end  ]
[ <op> ->  · goto V  , break  ]
[ <op> ->  · goto V  , error  ]
[ <op> ->  · goto V  , comment  ]
[ <op> ->  · load ( V <listV> ) ;  , ;  ]
[ <op> ->  · load ( V <listV> ) ;  , V  ]
[ <op> ->  · load ( V <listV> ) ;  , :  ]
[ <op> ->  · load ( V <listV> ) ;  , let  ]
[ <op> ->  · load ( V <listV> ) ;  , if  ]
[ <op> ->  · load ( V <listV> ) ;  , goto  ]
[ <op> ->  · load ( V <listV> ) ;  , load  ]
[ <op> ->  · load ( V <listV> ) ;  , put  ]
[ <op> ->  · load ( V <listV> ) ;  , switch  ]
[ <op> ->  · load ( V <listV> ) ;  , end  ]
[ <op> ->  · load ( V <listV> ) ;  , break  ]
[ <op> ->  · load ( V <listV> ) ;  , error  ]
[ <op> ->  · load ( V <listV> ) ;  , comment  ]
[ <op> ->  · put ( E <listE> ) ;  , ;  ]
[ <op> ->  · put ( E <listE> ) ;  , V  ]
[ <op> ->  · put ( E <listE> ) ;  , :  ]
[ <op> ->  · put ( E <listE> ) ;  , let  ]
[ <op> ->  · put ( E <listE> ) ;  , if  ]
[ <op> ->  · put ( E <listE> ) ;  , goto  ]
[ <op> ->  · put ( E <listE> ) ;  , load  ]
[ <op> ->  · put ( E <listE> ) ;  , put  ]
[ <op> ->  · put ( E <listE> ) ;  , switch  ]
[ <op> ->  · put ( E <listE> ) ;  , end  ]
[ <op> ->  · put ( E <listE> ) ;  , break  ]
[ <op> ->  · put ( E <listE> ) ;  , error  ]
[ <op> ->  · put ( E <listE> ) ;  , comment  ]
[ <op> ->  · switch ( E ) <switch_body> end switch ;  , ;  ]
[ <op> ->  · switch ( E ) <switch_body> end switch ;  , V  ]
[ <op> ->  · switch ( E ) <switch_body> end switch ;  , :  ]
[ <op> ->  · switch ( E ) <switch_body> end switch ;  , let  ]
[ <op> ->  · switch ( E ) <switch_body> end switch ;  , if  ]
[ <op> ->  · switch ( E ) <switch_body> end switch ;  , goto  ]
[ <op> ->  · switch ( E ) <switch_body> end switch ;  , load  ]
[ <op> ->  · switch ( E ) <switch_body> end switch ;  , put  ]
[ <op> ->  · switch ( E ) <switch_body> end switch ;  , switch  ]
[ <op> ->  · switch ( E ) <switch_body> end switch ;  , end  ]
[ <op> ->  · switch ( E ) <switch_body> end switch ;  , break  ]
[ <op> ->  · switch ( E ) <switch_body> end switch ;  , error  ]
[ <op> ->  · switch ( E ) <switch_body> end switch ;  , comment  ]
[ <op> ->  · error ;  , ;  ]
[ <op> ->  · error ;  , V  ]
[ <op> ->  · error ;  , :  ]
[ <op> ->  · error ;  , let  ]
[ <op> ->  · error ;  , if  ]
[ <op> ->  · error ;  , goto  ]
[ <op> ->  · error ;  , load  ]
[ <op> ->  · error ;  , put  ]
[ <op> ->  · error ;  , switch  ]
[ <op> ->  · error ;  , end  ]
[ <op> ->  · error ;  , break  ]
[ <op> ->  · error ;  , error  ]
[ <op> ->  · error ;  , comment  ]
[ <op> ->  · comment  , ;  ]
[ <op> ->  · comment  , V  ]
[ <op> ->  · comment  , :  ]
[ <op> ->  · comment  , let  ]
[ <op> ->  · comment  , if  ]
[ <op> ->  · comment  , goto  ]
[ <op> ->  · comment  , load  ]
[ <op> ->  · comment  , put  ]
[ <op> ->  · comment  , switch  ]
[ <op> ->  · comment  , end  ]
[ <op> ->  · comment  , break  ]
[ <op> ->  · comment  , error  ]
[ <op> ->  · comment  , comment  ]
}

set 351 = GOTO( set 319 , <pr> ) :
{
[ <default> -> default : <pr>  · <break>  , end  ]
[ <break> ->  ·  , end  ]
[ <break> ->  · break ;  , end  ]
}

set 352 = GOTO( set 319 , V ) :
{
[ <op> -> V  · <listV> : TYPE ;  , ;  ]
[ <op> -> V  · <listV> : TYPE ;  , V  ]
[ <op> -> V  · <listV> : TYPE ;  , :  ]
[ <op> -> V  · <listV> : TYPE ;  , let  ]
[ <op> -> V  · <listV> : TYPE ;  , if  ]
[ <op> -> V  · <listV> : TYPE ;  , goto  ]
[ <op> -> V  · <listV> : TYPE ;  , load  ]
[ <op> -> V  · <listV> : TYPE ;  , put  ]
[ <op> -> V  · <listV> : TYPE ;  , switch  ]
[ <op> -> V  · <listV> : TYPE ;  , end  ]
[ <op> -> V  · <listV> : TYPE ;  , break  ]
[ <op> -> V  · <listV> : TYPE ;  , error  ]
[ <op> -> V  · <listV> : TYPE ;  , comment  ]
[ <op> -> V  · for V = E to E <step> <pr> next V  , ;  ]
[ <op> -> V  · for V = E to E <step> <pr> next V  , V  ]
[ <op> -> V  · for V = E to E <step> <pr> next V  , :  ]
[ <op> -> V  · for V = E to E <step> <pr> next V  , let  ]
[ <op> -> V  · for V = E to E <step> <pr> next V  , if  ]
[ <op> -> V  · for V = E to E <step> <pr> next V  , goto  ]
[ <op> -> V  · for V = E to E <step> <pr> next V  , load  ]
[ <op> -> V  · for V = E to E <step> <pr> next V  , put  ]
[ <op> -> V  · for V = E to E <step> <pr> next V  , switch  ]
[ <op> -> V  · for V = E to E <step> <pr> next V  , end  ]
[ <op> -> V  · for V = E to E <step> <pr> next V  , break  ]
[ <op> -> V  · for V = E to E <step> <pr> next V  , error  ]
[ <op> -> V  · for V = E to E <step> <pr> next V  , comment  ]
[ <listV> ->  ·  , :  ]
[ <listV> ->  · , V <listV>  , :  ]
}

set 353 = GOTO( set 319 , comment ) :
{
[ <op> -> comment  ·  , ;  ]
[ <op> -> comment  ·  , V  ]
[ <op> -> comment  ·  , :  ]
[ <op> -> comment  ·  , let  ]
[ <op> -> comment  ·  , if  ]
[ <op> -> comment  ·  , goto  ]
[ <op> -> comment  ·  , load  ]
[ <op> -> comment  ·  , put  ]
[ <op> -> comment  ·  , switch  ]
[ <op> -> comment  ·  , end  ]
[ <op> -> comment  ·  , break  ]
[ <op> -> comment  ·  , error  ]
[ <op> -> comment  ·  , comment  ]
}

set 354 = GOTO( set 319 , error ) :
{
[ <op> -> error  · ;  , ;  ]
[ <op> -> error  · ;  , V  ]
[ <op> -> error  · ;  , :  ]
[ <op> -> error  · ;  , let  ]
[ <op> -> error  · ;  , if  ]
[ <op> -> error  · ;  , goto  ]
[ <op> -> error  · ;  , load  ]
[ <op> -> error  · ;  , put  ]
[ <op> -> error  · ;  , switch  ]
[ <op> -> error  · ;  , end  ]
[ <op> -> error  · ;  , break  ]
[ <op> -> error  · ;  , error  ]
[ <op> -> error  · ;  , comment  ]
}

set 355 = GOTO( set 319 , goto ) :
{
[ <op> -> goto  · V  , ;  ]
[ <op> -> goto  · V  , V  ]
[ <op> -> goto  · V  , :  ]
[ <op> -> goto  · V  , let  ]
[ <op> -> goto  · V  , if  ]
[ <op> -> goto  · V  , goto  ]
[ <op> -> goto  · V  , load  ]
[ <op> -> goto  · V  , put  ]
[ <op> -> goto  · V  , switch  ]
[ <op> -> goto  · V  , end  ]
[ <op> -> goto  · V  , break  ]
[ <op> -> goto  · V  , error  ]
[ <op> -> goto  · V  , comment  ]
}

set 356 = GOTO( set 319 , if ) :
{
[ <op> -> if  · <test> goto V <else> ;  , ;  ]
[ <op> -> if  · <test> goto V <else> ;  , V  ]
[ <op> -> if  · <test> goto V <else> ;  , :  ]
[ <op> -> if  · <test> goto V <else> ;  , let  ]
[ <op> -> if  · <test> goto V <else> ;  , if  ]
[ <op> -> if  · <test> goto V <else> ;  , goto  ]
[ <op> -> if  · <test> goto V <else> ;  , load  ]
[ <op> -> if  · <test> goto V <else> ;  , put  ]
[ <op> -> if  · <test> goto V <else> ;  , switch  ]
[ <op> -> if  · <test> goto V <else> ;  , end  ]
[ <op> -> if  · <test> goto V <else> ;  , break  ]
[ <op> -> if  · <test> goto V <else> ;  , error  ]
[ <op> -> if  · <test> goto V <else> ;  , comment  ]
[ E ->  · E - T  , Rel  ]
[ E ->  · E - T  , -  ]
[ E ->  · E - T  , +  ]
[ E ->  · E + T  , Rel  ]
[ E ->  · E + T  , -  ]
[ E ->  · E + T  , +  ]
[ E ->  · T  , Rel  ]
[ E ->  · T  , -  ]
[ E ->  · T  , +  ]
[ <test> ->  · E Rel E  , goto  ]
[ T ->  · T * F  , Rel  ]
[ T ->  · T * F  , -  ]
[ T ->  · T * F  , +  ]
[ T ->  · T * F  , *  ]
[ T ->  · T * F  , /  ]
[ T ->  · T * F  , %  ]
[ T ->  · T / F  , Rel  ]
[ T ->  · T / F  , -  ]
[ T ->  · T / F  , +  ]
[ T ->  · T / F  , *  ]
[ T ->  · T / F  , /  ]
[ T ->  · T / F  , %  ]
[ T ->  · T % F  , Rel  ]
[ T ->  · T % F  , -  ]
[ T ->  · T % F  , +  ]
[ T ->  · T % F  , *  ]
[ T ->  · T % F  , /  ]
[ T ->  · T % F  , %  ]
[ T ->  · F  , Rel  ]
[ T ->  · F  , -  ]
[ T ->  · F  , +  ]
[ T ->  · F  , *  ]
[ T ->  · F  , /  ]
[ T ->  · F  , %  ]
[ F ->  · V  , Rel  ]
[ F ->  · V  , -  ]
[ F ->  · V  , +  ]
[ F ->  · V  , *  ]
[ F ->  · V  , /  ]
[ F ->  · V  , %  ]
[ F ->  · ( E )  , Rel  ]
[ F ->  · ( E )  , -  ]
[ F ->  · ( E )  , +  ]
[ F ->  · ( E )  , *  ]
[ F ->  · ( E )  , /  ]
[ F ->  · ( E )  , %  ]
[ F ->  · C  , Rel  ]
[ F ->  · C  , -  ]
[ F ->  · C  , +  ]
[ F ->  · C  , *  ]
[ F ->  · C  , /  ]
[ F ->  · C  , %  ]
[ F ->  · value ( E , E )  , Rel  ]
[ F ->  · value ( E , E )  , -  ]
[ F ->  · value ( E , E )  , +  ]
[ F ->  · value ( E , E )  , *  ]
[ F ->  · value ( E , E )  , /  ]
[ F ->  · value ( E , E )  , %  ]
[ F ->  · derivative ( E )  , Rel  ]
[ F ->  · derivative ( E )  , -  ]
[ F ->  · derivative ( E )  , +  ]
[ F ->  · derivative ( E )  , *  ]
[ F ->  · derivative ( E )  , /  ]
[ F ->  · derivative ( E )  , %  ]
[ F ->  · coeff ( E , E )  , Rel  ]
[ F ->  · coeff ( E , E )  , -  ]
[ F ->  · coeff ( E , E )  , +  ]
[ F ->  · coeff ( E , E )  , *  ]
[ F ->  · coeff ( E , E )  , /  ]
[ F ->  · coeff ( E , E )  , %  ]
[ F ->  · deg ( E )  , Rel  ]
[ F ->  · deg ( E )  , -  ]
[ F ->  · deg ( E )  , +  ]
[ F ->  · deg ( E )  , *  ]
[ F ->  · deg ( E )  , /  ]
[ F ->  · deg ( E )  , %  ]
}

set 357 = GOTO( set 319 , let ) :
{
[ <op> -> let  · V <listA>  , ;  ]
[ <op> -> let  · V <listA>  , V  ]
[ <op> -> let  · V <listA>  , :  ]
[ <op> -> let  · V <listA>  , let  ]
[ <op> -> let  · V <listA>  , if  ]
[ <op> -> let  · V <listA>  , goto  ]
[ <op> -> let  · V <listA>  , load  ]
[ <op> -> let  · V <listA>  , put  ]
[ <op> -> let  · V <listA>  , switch  ]
[ <op> -> let  · V <listA>  , end  ]
[ <op> -> let  · V <listA>  , break  ]
[ <op> -> let  · V <listA>  , error  ]
[ <op> -> let  · V <listA>  , comment  ]
}

set 358 = GOTO( set 319 , load ) :
{
[ <op> -> load  · ( V <listV> ) ;  , ;  ]
[ <op> -> load  · ( V <listV> ) ;  , V  ]
[ <op> -> load  · ( V <listV> ) ;  , :  ]
[ <op> -> load  · ( V <listV> ) ;  , let  ]
[ <op> -> load  · ( V <listV> ) ;  , if  ]
[ <op> -> load  · ( V <listV> ) ;  , goto  ]
[ <op> -> load  · ( V <listV> ) ;  , load  ]
[ <op> -> load  · ( V <listV> ) ;  , put  ]
[ <op> -> load  · ( V <listV> ) ;  , switch  ]
[ <op> -> load  · ( V <listV> ) ;  , end  ]
[ <op> -> load  · ( V <listV> ) ;  , break  ]
[ <op> -> load  · ( V <listV> ) ;  , error  ]
[ <op> -> load  · ( V <listV> ) ;  , comment  ]
}

set 359 = GOTO( set 319 , put ) :
{
[ <op> -> put  · ( E <listE> ) ;  , ;  ]
[ <op> -> put  · ( E <listE> ) ;  , V  ]
[ <op> -> put  · ( E <listE> ) ;  , :  ]
[ <op> -> put  · ( E <listE> ) ;  , let  ]
[ <op> -> put  · ( E <listE> ) ;  , if  ]
[ <op> -> put  · ( E <listE> ) ;  , goto  ]
[ <op> -> put  · ( E <listE> ) ;  , load  ]
[ <op> -> put  · ( E <listE> ) ;  , put  ]
[ <op> -> put  · ( E <listE> ) ;  , switch  ]
[ <op> -> put  · ( E <listE> ) ;  , end  ]
[ <op> -> put  · ( E <listE> ) ;  , break  ]
[ <op> -> put  · ( E <listE> ) ;  , error  ]
[ <op> -> put  · ( E <listE> ) ;  , comment  ]
}

set 360 = GOTO( set 319 , switch ) :
{
[ <op> -> switch  · ( E ) <switch_body> end switch ;  , ;  ]
[ <op> -> switch  · ( E ) <switch_body> end switch ;  , V  ]
[ <op> -> switch  · ( E ) <switch_body> end switch ;  , :  ]
[ <op> -> switch  · ( E ) <switch_body> end switch ;  , let  ]
[ <op> -> switch  · ( E ) <switch_body> end switch ;  , if  ]
[ <op> -> switch  · ( E ) <switch_body> end switch ;  , goto  ]
[ <op> -> switch  · ( E ) <switch_body> end switch ;  , load  ]
[ <op> -> switch  · ( E ) <switch_body> end switch ;  , put  ]
[ <op> -> switch  · ( E ) <switch_body> end switch ;  , switch  ]
[ <op> -> switch  · ( E ) <switch_body> end switch ;  , end  ]
[ <op> -> switch  · ( E ) <switch_body> end switch ;  , break  ]
[ <op> -> switch  · ( E ) <switch_body> end switch ;  , error  ]
[ <op> -> switch  · ( E ) <switch_body> end switch ;  , comment  ]
}

set 361 = GOTO( set 320 , ; ) :
{
[ <op> -> switch ( E ) <switch_body> end switch ;  ·  ,  ]
[ <op> -> switch ( E ) <switch_body> end switch ;  ·  , ;  ]
[ <op> -> switch ( E ) <switch_body> end switch ;  ·  , V  ]
[ <op> -> switch ( E ) <switch_body> end switch ;  ·  , :  ]
[ <op> -> switch ( E ) <switch_body> end switch ;  ·  , let  ]
[ <op> -> switch ( E ) <switch_body> end switch ;  ·  , if  ]
[ <op> -> switch ( E ) <switch_body> end switch ;  ·  , goto  ]
[ <op> -> switch ( E ) <switch_body> end switch ;  ·  , load  ]
[ <op> -> switch ( E ) <switch_body> end switch ;  ·  , put  ]
[ <op> -> switch ( E ) <switch_body> end switch ;  ·  , switch  ]
[ <op> -> switch ( E ) <switch_body> end switch ;  ·  , error  ]
[ <op> -> switch ( E ) <switch_body> end switch ;  ·  , comment  ]
}

set 362 = GOTO( set 321 , : ) :
{
[ <op> -> :  · V  , ;  ]
[ <op> -> :  · V  , V  ]
[ <op> -> :  · V  , :  ]
[ <op> -> :  · V  , let  ]
[ <op> -> :  · V  , if  ]
[ <op> -> :  · V  , goto  ]
[ <op> -> :  · V  , load  ]
[ <op> -> :  · V  , put  ]
[ <op> -> :  · V  , switch  ]
[ <op> -> :  · V  , end  ]
[ <op> -> :  · V  , case  ]
[ <op> -> :  · V  , break  ]
[ <op> -> :  · V  , default  ]
[ <op> -> :  · V  , error  ]
[ <op> -> :  · V  , comment  ]
}

set 363 = GOTO( set 321 , ; ) :
{
[ <op> -> ;  ·  , ;  ]
[ <op> -> ;  ·  , V  ]
[ <op> -> ;  ·  , :  ]
[ <op> -> ;  ·  , let  ]
[ <op> -> ;  ·  , if  ]
[ <op> -> ;  ·  , goto  ]
[ <op> -> ;  ·  , load  ]
[ <op> -> ;  ·  , put  ]
[ <op> -> ;  ·  , switch  ]
[ <op> -> ;  ·  , end  ]
[ <op> -> ;  ·  , case  ]
[ <op> -> ;  ·  , break  ]
[ <op> -> ;  ·  , default  ]
[ <op> -> ;  ·  , error  ]
[ <op> -> ;  ·  , comment  ]
}

set 364 = GOTO( set 321 , <op> ) :
{
[ <pr> ->  ·  , end  ]
[ <pr> ->  ·  , case  ]
[ <pr> ->  ·  , break  ]
[ <pr> ->  ·  , default  ]
[ <pr> ->  · <op> <pr>  , end  ]
[ <pr> ->  · <op> <pr>  , case  ]
[ <pr> ->  · <op> <pr>  , break  ]
[ <pr> ->  · <op> <pr>  , default  ]
[ <pr> -> <op>  · <pr>  , end  ]
[ <pr> -> <op>  · <pr>  , case  ]
[ <pr> -> <op>  · <pr>  , break  ]
[ <pr> -> <op>  · <pr>  , default  ]
[ <op> ->  · ;  , ;  ]
[ <op> ->  · ;  , V  ]
[ <op> ->  · ;  , :  ]
[ <op> ->  · ;  , let  ]
[ <op> ->  · ;  , if  ]
[ <op> ->  · ;  , goto  ]
[ <op> ->  · ;  , load  ]
[ <op> ->  · ;  , put  ]
[ <op> ->  · ;  , switch  ]
[ <op> ->  · ;  , end  ]
[ <op> ->  · ;  , case  ]
[ <op> ->  · ;  , break  ]
[ <op> ->  · ;  , default  ]
[ <op> ->  · ;  , error  ]
[ <op> ->  · ;  , comment  ]
[ <op> ->  · V <listV> : TYPE ;  , ;  ]
[ <op> ->  · V <listV> : TYPE ;  , V  ]
[ <op> ->  · V <listV> : TYPE ;  , :  ]
[ <op> ->  · V <listV> : TYPE ;  , let  ]
[ <op> ->  · V <listV> : TYPE ;  , if  ]
[ <op> ->  · V <listV> : TYPE ;  , goto  ]
[ <op> ->  · V <listV> : TYPE ;  , load  ]
[ <op> ->  · V <listV> : TYPE ;  , put  ]
[ <op> ->  · V <listV> : TYPE ;  , switch  ]
[ <op> ->  · V <listV> : TYPE ;  , end  ]
[ <op> ->  · V <listV> : TYPE ;  , case  ]
[ <op> ->  · V <listV> : TYPE ;  , break  ]
[ <op> ->  · V <listV> : TYPE ;  , default  ]
[ <op> ->  · V <listV> : TYPE ;  , error  ]
[ <op> ->  · V <listV> : TYPE ;  , comment  ]
[ <op> ->  · V for V = E to E <step> <pr> next V  , ;  ]
[ <op> ->  · V for V = E to E <step> <pr> next V  , V  ]
[ <op> ->  · V for V = E to E <step> <pr> next V  , :  ]
[ <op> ->  · V for V = E to E <step> <pr> next V  , let  ]
[ <op> ->  · V for V = E to E <step> <pr> next V  , if  ]
[ <op> ->  · V for V = E to E <step> <pr> next V  , goto  ]
[ <op> ->  · V for V = E to E <step> <pr> next V  , load  ]
[ <op> ->  · V for V = E to E <step> <pr> next V  , put  ]
[ <op> ->  · V for V = E to E <step> <pr> next V  , switch  ]
[ <op> ->  · V for V = E to E <step> <pr> next V  , end  ]
[ <op> ->  · V for V = E to E <step> <pr> next V  , case  ]
[ <op> ->  · V for V = E to E <step> <pr> next V  , break  ]
[ <op> ->  · V for V = E to E <step> <pr> next V  , default  ]
[ <op> ->  · V for V = E to E <step> <pr> next V  , error  ]
[ <op> ->  · V for V = E to E <step> <pr> next V  , comment  ]
[ <op> ->  · : V  , ;  ]
[ <op> ->  · : V  , V  ]
[ <op> ->  · : V  , :  ]
[ <op> ->  · : V  , let  ]
[ <op> ->  · : V  , if  ]
[ <op> ->  · : V  , goto  ]
[ <op> ->  · : V  , load  ]
[ <op> ->  · : V  , put  ]
[ <op> ->  · : V  , switch  ]
[ <op> ->  · : V  , end  ]
[ <op> ->  · : V  , case  ]
[ <op> ->  · : V  , break  ]
[ <op> ->  · : V  , default  ]
[ <op> ->  · : V  , error  ]
[ <op> ->  · : V  , comment  ]
[ <op> ->  · let V <listA>  , ;  ]
[ <op> ->  · let V <listA>  , V  ]
[ <op> ->  · let V <listA>  , :  ]
[ <op> ->  · let V <listA>  , let  ]
[ <op> ->  · let V <listA>  , if  ]
[ <op> ->  · let V <listA>  , goto  ]
[ <op> ->  · let V <listA>  , load  ]
[ <op> ->  · let V <listA>  , put  ]
[ <op> ->  · let V <listA>  , switch  ]
[ <op> ->  · let V <listA>  , end  ]
[ <op> ->  · let V <listA>  , case  ]
[ <op> ->  · let V <listA>  , break  ]
[ <op> ->  · let V <listA>  , default  ]
[ <op> ->  · let V <listA>  , error  ]
[ <op> ->  · let V <listA>  , comment  ]
[ <op> ->  · if <test> goto V <else> ;  , ;  ]
[ <op> ->  · if <test> goto V <else> ;  , V  ]
[ <op> ->  · if <test> goto V <else> ;  , :  ]
[ <op> ->  · if <test> goto V <else> ;  , let  ]
[ <op> ->  · if <test> goto V <else> ;  , if  ]
[ <op> ->  · if <test> goto V <else> ;  , goto  ]
[ <op> ->  · if <test> goto V <else> ;  , load  ]
[ <op> ->  · if <test> goto V <else> ;  , put  ]
[ <op> ->  · if <test> goto V <else> ;  , switch  ]
[ <op> ->  · if <test> goto V <else> ;  , end  ]
[ <op> ->  · if <test> goto V <else> ;  , case  ]
[ <op> ->  · if <test> goto V <else> ;  , break  ]
[ <op> ->  · if <test> goto V <else> ;  , default  ]
[ <op> ->  · if <test> goto V <else> ;  , error  ]
[ <op> ->  · if <test> goto V <else> ;  , comment  ]
[ <op> ->  · goto V  , ;  ]
[ <op> ->  · goto V  , V  ]
[ <op> ->  · goto V  , :  ]
[ <op> ->  · goto V  , let  ]
[ <op> ->  · goto V  , if  ]
[ <op> ->  · goto V  , goto  ]
[ <op> ->  · goto V  , load  ]
[ <op> ->  · goto V  , put  ]
[ <op> ->  · goto V  , switch  ]
[ <op> ->  · goto V  , end  ]
[ <op> ->  · goto V  , case  ]
[ <op> ->  · goto V  , break  ]
[ <op> ->  · goto V  , default  ]
[ <op> ->  · goto V  , error  ]
[ <op> ->  · goto V  , comment  ]
[ <op> ->  · load ( V <listV> ) ;  , ;  ]
[ <op> ->  · load ( V <listV> ) ;  , V  ]
[ <op> ->  · load ( V <listV> ) ;  , :  ]
[ <op> ->  · load ( V <listV> ) ;  , let  ]
[ <op> ->  · load ( V <listV> ) ;  , if  ]
[ <op> ->  · load ( V <listV> ) ;  , goto  ]
[ <op> ->  · load ( V <listV> ) ;  , load  ]
[ <op> ->  · load ( V <listV> ) ;  , put  ]
[ <op> ->  · load ( V <listV> ) ;  , switch  ]
[ <op> ->  · load ( V <listV> ) ;  , end  ]
[ <op> ->  · load ( V <listV> ) ;  , case  ]
[ <op> ->  · load ( V <listV> ) ;  , break  ]
[ <op> ->  · load ( V <listV> ) ;  , default  ]
[ <op> ->  · load ( V <listV> ) ;  , error  ]
[ <op> ->  · load ( V <listV> ) ;  , comment  ]
[ <op> ->  · put ( E <listE> ) ;  , ;  ]
[ <op> ->  · put ( E <listE> ) ;  , V  ]
[ <op> ->  · put ( E <listE> ) ;  , :  ]
[ <op> ->  · put ( E <listE> ) ;  , let  ]
[ <op> ->  · put ( E <listE> ) ;  , if  ]
[ <op> ->  · put ( E <listE> ) ;  , goto  ]
[ <op> ->  · put ( E <listE> ) ;  , load  ]
[ <op> ->  · put ( E <listE> ) ;  , put  ]
[ <op> ->  · put ( E <listE> ) ;  , switch  ]
[ <op> ->  · put ( E <listE> ) ;  , end  ]
[ <op> ->  · put ( E <listE> ) ;  , case  ]
[ <op> ->  · put ( E <listE> ) ;  , break  ]
[ <op> ->  · put ( E <listE> ) ;  , default  ]
[ <op> ->  · put ( E <listE> ) ;  , error  ]
[ <op> ->  · put ( E <listE> ) ;  , comment  ]
[ <op> ->  · switch ( E ) <switch_body> end switch ;  , ;  ]
[ <op> ->  · switch ( E ) <switch_body> end switch ;  , V  ]
[ <op> ->  · switch ( E ) <switch_body> end switch ;  , :  ]
[ <op> ->  · switch ( E ) <switch_body> end switch ;  , let  ]
[ <op> ->  · switch ( E ) <switch_body> end switch ;  , if  ]
[ <op> ->  · switch ( E ) <switch_body> end switch ;  , goto  ]
[ <op> ->  · switch ( E ) <switch_body> end switch ;  , load  ]
[ <op> ->  · switch ( E ) <switch_body> end switch ;  , put  ]
[ <op> ->  · switch ( E ) <switch_body> end switch ;  , switch  ]
[ <op> ->  · switch ( E ) <switch_body> end switch ;  , end  ]
[ <op> ->  · switch ( E ) <switch_body> end switch ;  , case  ]
[ <op> ->  · switch ( E ) <switch_body> end switch ;  , break  ]
[ <op> ->  · switch ( E ) <switch_body> end switch ;  , default  ]
[ <op> ->  · switch ( E ) <switch_body> end switch ;  , error  ]
[ <op> ->  · switch ( E ) <switch_body> end switch ;  , comment  ]
[ <op> ->  · error ;  , ;  ]
[ <op> ->  · error ;  , V  ]
[ <op> ->  · error ;  , :  ]
[ <op> ->  · error ;  , let  ]
[ <op> ->  · error ;  , if  ]
[ <op> ->  · error ;  , goto  ]
[ <op> ->  · error ;  , load  ]
[ <op> ->  · error ;  , put  ]
[ <op> ->  · error ;  , switch  ]
[ <op> ->  · error ;  , end  ]
[ <op> ->  · error ;  , case  ]
[ <op> ->  · error ;  , break  ]
[ <op> ->  · error ;  , default  ]
[ <op> ->  · error ;  , error  ]
[ <op> ->  · error ;  , comment  ]
[ <op> ->  · comment  , ;  ]
[ <op> ->  · comment  , V  ]
[ <op> ->  · comment  , :  ]
[ <op> ->  · comment  , let  ]
[ <op> ->  · comment  , if  ]
[ <op> ->  · comment  , goto  ]
[ <op> ->  · comment  , load  ]
[ <op> ->  · comment  , put  ]
[ <op> ->  · comment  , switch  ]
[ <op> ->  · comment  , end  ]
[ <op> ->  · comment  , case  ]
[ <op> ->  · comment  , break  ]
[ <op> ->  · comment  , default  ]
[ <op> ->  · comment  , error  ]
[ <op> ->  · comment  , comment  ]
}

set 365 = GOTO( set 321 , <pr> ) :
{
[ <list_case> -> case C : <pr>  · <break> <list_case>  , end  ]
[ <list_case> -> case C : <pr>  · <break> <list_case>  , default  ]
[ <break> ->  ·  , end  ]
[ <break> ->  ·  , case  ]
[ <break> ->  ·  , default  ]
[ <break> ->  · break ;  , end  ]
[ <break> ->  · break ;  , case  ]
[ <break> ->  · break ;  , default  ]
}

set 366 = GOTO( set 321 , V ) :
{
[ <op> -> V  · <listV> : TYPE ;  , ;  ]
[ <op> -> V  · <listV> : TYPE ;  , V  ]
[ <op> -> V  · <listV> : TYPE ;  , :  ]
[ <op> -> V  · <listV> : TYPE ;  , let  ]
[ <op> -> V  · <listV> : TYPE ;  , if  ]
[ <op> -> V  · <listV> : TYPE ;  , goto  ]
[ <op> -> V  · <listV> : TYPE ;  , load  ]
[ <op> -> V  · <listV> : TYPE ;  , put  ]
[ <op> -> V  · <listV> : TYPE ;  , switch  ]
[ <op> -> V  · <listV> : TYPE ;  , end  ]
[ <op> -> V  · <listV> : TYPE ;  , case  ]
[ <op> -> V  · <listV> : TYPE ;  , break  ]
[ <op> -> V  · <listV> : TYPE ;  , default  ]
[ <op> -> V  · <listV> : TYPE ;  , error  ]
[ <op> -> V  · <listV> : TYPE ;  , comment  ]
[ <op> -> V  · for V = E to E <step> <pr> next V  , ;  ]
[ <op> -> V  · for V = E to E <step> <pr> next V  , V  ]
[ <op> -> V  · for V = E to E <step> <pr> next V  , :  ]
[ <op> -> V  · for V = E to E <step> <pr> next V  , let  ]
[ <op> -> V  · for V = E to E <step> <pr> next V  , if  ]
[ <op> -> V  · for V = E to E <step> <pr> next V  , goto  ]
[ <op> -> V  · for V = E to E <step> <pr> next V  , load  ]
[ <op> -> V  · for V = E to E <step> <pr> next V  , put  ]
[ <op> -> V  · for V = E to E <step> <pr> next V  , switch  ]
[ <op> -> V  · for V = E to E <step> <pr> next V  , end  ]
[ <op> -> V  · for V = E to E <step> <pr> next V  , case  ]
[ <op> -> V  · for V = E to E <step> <pr> next V  , break  ]
[ <op> -> V  · for V = E to E <step> <pr> next V  , default  ]
[ <op> -> V  · for V = E to E <step> <pr> next V  , error  ]
[ <op> -> V  · for V = E to E <step> <pr> next V  , comment  ]
[ <listV> ->  ·  , :  ]
[ <listV> ->  · , V <listV>  , :  ]
}

set 367 = GOTO( set 321 , comment ) :
{
[ <op> -> comment  ·  , ;  ]
[ <op> -> comment  ·  , V  ]
[ <op> -> comment  ·  , :  ]
[ <op> -> comment  ·  , let  ]
[ <op> -> comment  ·  , if  ]
[ <op> -> comment  ·  , goto  ]
[ <op> -> comment  ·  , load  ]
[ <op> -> comment  ·  , put  ]
[ <op> -> comment  ·  , switch  ]
[ <op> -> comment  ·  , end  ]
[ <op> -> comment  ·  , case  ]
[ <op> -> comment  ·  , break  ]
[ <op> -> comment  ·  , default  ]
[ <op> -> comment  ·  , error  ]
[ <op> -> comment  ·  , comment  ]
}

set 368 = GOTO( set 321 , error ) :
{
[ <op> -> error  · ;  , ;  ]
[ <op> -> error  · ;  , V  ]
[ <op> -> error  · ;  , :  ]
[ <op> -> error  · ;  , let  ]
[ <op> -> error  · ;  , if  ]
[ <op> -> error  · ;  , goto  ]
[ <op> -> error  · ;  , load  ]
[ <op> -> error  · ;  , put  ]
[ <op> -> error  · ;  , switch  ]
[ <op> -> error  · ;  , end  ]
[ <op> -> error  · ;  , case  ]
[ <op> -> error  · ;  , break  ]
[ <op> -> error  · ;  , default  ]
[ <op> -> error  · ;  , error  ]
[ <op> -> error  · ;  , comment  ]
}

set 369 = GOTO( set 321 , goto ) :
{
[ <op> -> goto  · V  , ;  ]
[ <op> -> goto  · V  , V  ]
[ <op> -> goto  · V  , :  ]
[ <op> -> goto  · V  , let  ]
[ <op> -> goto  · V  , if  ]
[ <op> -> goto  · V  , goto  ]
[ <op> -> goto  · V  , load  ]
[ <op> -> goto  · V  , put  ]
[ <op> -> goto  · V  , switch  ]
[ <op> -> goto  · V  , end  ]
[ <op> -> goto  · V  , case  ]
[ <op> -> goto  · V  , break  ]
[ <op> -> goto  · V  , default  ]
[ <op> -> goto  · V  , error  ]
[ <op> -> goto  · V  , comment  ]
}

set 370 = GOTO( set 321 , if ) :
{
[ <op> -> if  · <test> goto V <else> ;  , ;  ]
[ <op> -> if  · <test> goto V <else> ;  , V  ]
[ <op> -> if  · <test> goto V <else> ;  , :  ]
[ <op> -> if  · <test> goto V <else> ;  , let  ]
[ <op> -> if  · <test> goto V <else> ;  , if  ]
[ <op> -> if  · <test> goto V <else> ;  , goto  ]
[ <op> -> if  · <test> goto V <else> ;  , load  ]
[ <op> -> if  · <test> goto V <else> ;  , put  ]
[ <op> -> if  · <test> goto V <else> ;  , switch  ]
[ <op> -> if  · <test> goto V <else> ;  , end  ]
[ <op> -> if  · <test> goto V <else> ;  , case  ]
[ <op> -> if  · <test> goto V <else> ;  , break  ]
[ <op> -> if  · <test> goto V <else> ;  , default  ]
[ <op> -> if  · <test> goto V <else> ;  , error  ]
[ <op> -> if  · <test> goto V <else> ;  , comment  ]
[ E ->  · E - T  , Rel  ]
[ E ->  · E - T  , -  ]
[ E ->  · E - T  , +  ]
[ E ->  · E + T  , Rel  ]
[ E ->  · E + T  , -  ]
[ E ->  · E + T  , +  ]
[ E ->  · T  , Rel  ]
[ E ->  · T  , -  ]
[ E ->  · T  , +  ]
[ <test> ->  · E Rel E  , goto  ]
[ T ->  · T * F  , Rel  ]
[ T ->  · T * F  , -  ]
[ T ->  · T * F  , +  ]
[ T ->  · T * F  , *  ]
[ T ->  · T * F  , /  ]
[ T ->  · T * F  , %  ]
[ T ->  · T / F  , Rel  ]
[ T ->  · T / F  , -  ]
[ T ->  · T / F  , +  ]
[ T ->  · T / F  , *  ]
[ T ->  · T / F  , /  ]
[ T ->  · T / F  , %  ]
[ T ->  · T % F  , Rel  ]
[ T ->  · T % F  , -  ]
[ T ->  · T % F  , +  ]
[ T ->  · T % F  , *  ]
[ T ->  · T % F  , /  ]
[ T ->  · T % F  , %  ]
[ T ->  · F  , Rel  ]
[ T ->  · F  , -  ]
[ T ->  · F  , +  ]
[ T ->  · F  , *  ]
[ T ->  · F  , /  ]
[ T ->  · F  , %  ]
[ F ->  · V  , Rel  ]
[ F ->  · V  , -  ]
[ F ->  · V  , +  ]
[ F ->  · V  , *  ]
[ F ->  · V  , /  ]
[ F ->  · V  , %  ]
[ F ->  · ( E )  , Rel  ]
[ F ->  · ( E )  , -  ]
[ F ->  · ( E )  , +  ]
[ F ->  · ( E )  , *  ]
[ F ->  · ( E )  , /  ]
[ F ->  · ( E )  , %  ]
[ F ->  · C  , Rel  ]
[ F ->  · C  , -  ]
[ F ->  · C  , +  ]
[ F ->  · C  , *  ]
[ F ->  · C  , /  ]
[ F ->  · C  , %  ]
[ F ->  · value ( E , E )  , Rel  ]
[ F ->  · value ( E , E )  , -  ]
[ F ->  · value ( E , E )  , +  ]
[ F ->  · value ( E , E )  , *  ]
[ F ->  · value ( E , E )  , /  ]
[ F ->  · value ( E , E )  , %  ]
[ F ->  · derivative ( E )  , Rel  ]
[ F ->  · derivative ( E )  , -  ]
[ F ->  · derivative ( E )  , +  ]
[ F ->  · derivative ( E )  , *  ]
[ F ->  · derivative ( E )  , /  ]
[ F ->  · derivative ( E )  , %  ]
[ F ->  · coeff ( E , E )  , Rel  ]
[ F ->  · coeff ( E , E )  , -  ]
[ F ->  · coeff ( E , E )  , +  ]
[ F ->  · coeff ( E , E )  , *  ]
[ F ->  · coeff ( E , E )  , /  ]
[ F ->  · coeff ( E , E )  , %  ]
[ F ->  · deg ( E )  , Rel  ]
[ F ->  · deg ( E )  , -  ]
[ F ->  · deg ( E )  , +  ]
[ F ->  · deg ( E )  , *  ]
[ F ->  · deg ( E )  , /  ]
[ F ->  · deg ( E )  , %  ]
}

set 371 = GOTO( set 321 , let ) :
{
[ <op> -> let  · V <listA>  , ;  ]
[ <op> -> let  · V <listA>  , V  ]
[ <op> -> let  · V <listA>  , :  ]
[ <op> -> let  · V <listA>  , let  ]
[ <op> -> let  · V <listA>  , if  ]
[ <op> -> let  · V <listA>  , goto  ]
[ <op> -> let  · V <listA>  , load  ]
[ <op> -> let  · V <listA>  , put  ]
[ <op> -> let  · V <listA>  , switch  ]
[ <op> -> let  · V <listA>  , end  ]
[ <op> -> let  · V <listA>  , case  ]
[ <op> -> let  · V <listA>  , break  ]
[ <op> -> let  · V <listA>  , default  ]
[ <op> -> let  · V <listA>  , error  ]
[ <op> -> let  · V <listA>  , comment  ]
}

set 372 = GOTO( set 321 , load ) :
{
[ <op> -> load  · ( V <listV> ) ;  , ;  ]
[ <op> -> load  · ( V <listV> ) ;  , V  ]
[ <op> -> load  · ( V <listV> ) ;  , :  ]
[ <op> -> load  · ( V <listV> ) ;  , let  ]
[ <op> -> load  · ( V <listV> ) ;  , if  ]
[ <op> -> load  · ( V <listV> ) ;  , goto  ]
[ <op> -> load  · ( V <listV> ) ;  , load  ]
[ <op> -> load  · ( V <listV> ) ;  , put  ]
[ <op> -> load  · ( V <listV> ) ;  , switch  ]
[ <op> -> load  · ( V <listV> ) ;  , end  ]
[ <op> -> load  · ( V <listV> ) ;  , case  ]
[ <op> -> load  · ( V <listV> ) ;  , break  ]
[ <op> -> load  · ( V <listV> ) ;  , default  ]
[ <op> -> load  · ( V <listV> ) ;  , error  ]
[ <op> -> load  · ( V <listV> ) ;  , comment  ]
}

set 373 = GOTO( set 321 , put ) :
{
[ <op> -> put  · ( E <listE> ) ;  , ;  ]
[ <op> -> put  · ( E <listE> ) ;  , V  ]
[ <op> -> put  · ( E <listE> ) ;  , :  ]
[ <op> -> put  · ( E <listE> ) ;  , let  ]
[ <op> -> put  · ( E <listE> ) ;  , if  ]
[ <op> -> put  · ( E <listE> ) ;  , goto  ]
[ <op> -> put  · ( E <listE> ) ;  , load  ]
[ <op> -> put  · ( E <listE> ) ;  , put  ]
[ <op> -> put  · ( E <listE> ) ;  , switch  ]
[ <op> -> put  · ( E <listE> ) ;  , end  ]
[ <op> -> put  · ( E <listE> ) ;  , case  ]
[ <op> -> put  · ( E <listE> ) ;  , break  ]
[ <op> -> put  · ( E <listE> ) ;  , default  ]
[ <op> -> put  · ( E <listE> ) ;  , error  ]
[ <op> -> put  · ( E <listE> ) ;  , comment  ]
}

set 374 = GOTO( set 321 , switch ) :
{
[ <op> -> switch  · ( E ) <switch_body> end switch ;  , ;  ]
[ <op> -> switch  · ( E ) <switch_body> end switch ;  , V  ]
[ <op> -> switch  · ( E ) <switch_body> end switch ;  , :  ]
[ <op> -> switch  · ( E ) <switch_body> end switch ;  , let  ]
[ <op> -> switch  · ( E ) <switch_body> end switch ;  , if  ]
[ <op> -> switch  · ( E ) <switch_body> end switch ;  , goto  ]
[ <op> -> switch  · ( E ) <switch_body> end switch ;  , load  ]
[ <op> -> switch  · ( E ) <switch_body> end switch ;  , put  ]
[ <op> -> switch  · ( E ) <switch_body> end switch ;  , switch  ]
[ <op> -> switch  · ( E ) <switch_body> end switch ;  , end  ]
[ <op> -> switch  · ( E ) <switch_body> end switch ;  , case  ]
[ <op> -> switch  · ( E ) <switch_body> end switch ;  , break  ]
[ <op> -> switch  · ( E ) <switch_body> end switch ;  , default  ]
[ <op> -> switch  · ( E ) <switch_body> end switch ;  , error  ]
[ <op> -> switch  · ( E ) <switch_body> end switch ;  , comment  ]
}

set 375 = GOTO( set 322 , ) ) :
{
[ F -> ( E )  ·  , ;  ]
[ F -> ( E )  ·  , V  ]
[ F -> ( E )  ·  , :  ]
[ F -> ( E )  ·  , let  ]
[ F -> ( E )  ·  , next  ]
[ F -> ( E )  ·  , adding  ]
[ F -> ( E )  ·  , if  ]
[ F -> ( E )  ·  , goto  ]
[ F -> ( E )  ·  , load  ]
[ F -> ( E )  ·  , put  ]
[ F -> ( E )  ·  , switch  ]
[ F -> ( E )  ·  , error  ]
[ F -> ( E )  ·  , comment  ]
[ F -> ( E )  ·  , -  ]
[ F -> ( E )  ·  , +  ]
[ F -> ( E )  ·  , *  ]
[ F -> ( E )  ·  , /  ]
[ F -> ( E )  ·  , %  ]
}

set 376 = GOTO( set 323 , T ) :
{
[ E -> E + T  ·  , ;  ]
[ E -> E + T  ·  , V  ]
[ E -> E + T  ·  , :  ]
[ E -> E + T  ·  , let  ]
[ E -> E + T  ·  , next  ]
[ E -> E + T  ·  , adding  ]
[ E -> E + T  ·  , if  ]
[ E -> E + T  ·  , goto  ]
[ E -> E + T  ·  , load  ]
[ E -> E + T  ·  , put  ]
[ E -> E + T  ·  , switch  ]
[ E -> E + T  ·  , error  ]
[ E -> E + T  ·  , comment  ]
[ E -> E + T  ·  , -  ]
[ E -> E + T  ·  , +  ]
[ T -> T  · * F  , ;  ]
[ T -> T  · * F  , V  ]
[ T -> T  · * F  , :  ]
[ T -> T  · * F  , let  ]
[ T -> T  · * F  , next  ]
[ T -> T  · * F  , adding  ]
[ T -> T  · * F  , if  ]
[ T -> T  · * F  , goto  ]
[ T -> T  · * F  , load  ]
[ T -> T  · * F  , put  ]
[ T -> T  · * F  , switch  ]
[ T -> T  · * F  , error  ]
[ T -> T  · * F  , comment  ]
[ T -> T  · * F  , -  ]
[ T -> T  · * F  , +  ]
[ T -> T  · * F  , *  ]
[ T -> T  · * F  , /  ]
[ T -> T  · * F  , %  ]
[ T -> T  · / F  , ;  ]
[ T -> T  · / F  , V  ]
[ T -> T  · / F  , :  ]
[ T -> T  · / F  , let  ]
[ T -> T  · / F  , next  ]
[ T -> T  · / F  , adding  ]
[ T -> T  · / F  , if  ]
[ T -> T  · / F  , goto  ]
[ T -> T  · / F  , load  ]
[ T -> T  · / F  , put  ]
[ T -> T  · / F  , switch  ]
[ T -> T  · / F  , error  ]
[ T -> T  · / F  , comment  ]
[ T -> T  · / F  , -  ]
[ T -> T  · / F  , +  ]
[ T -> T  · / F  , *  ]
[ T -> T  · / F  , /  ]
[ T -> T  · / F  , %  ]
[ T -> T  · % F  , ;  ]
[ T -> T  · % F  , V  ]
[ T -> T  · % F  , :  ]
[ T -> T  · % F  , let  ]
[ T -> T  · % F  , next  ]
[ T -> T  · % F  , adding  ]
[ T -> T  · % F  , if  ]
[ T -> T  · % F  , goto  ]
[ T -> T  · % F  , load  ]
[ T -> T  · % F  , put  ]
[ T -> T  · % F  , switch  ]
[ T -> T  · % F  , error  ]
[ T -> T  · % F  , comment  ]
[ T -> T  · % F  , -  ]
[ T -> T  · % F  , +  ]
[ T -> T  · % F  , *  ]
[ T -> T  · % F  , /  ]
[ T -> T  · % F  , %  ]
}

set 377 = GOTO( set 324 , T ) :
{
[ E -> E - T  ·  , ;  ]
[ E -> E - T  ·  , V  ]
[ E -> E - T  ·  , :  ]
[ E -> E - T  ·  , let  ]
[ E -> E - T  ·  , next  ]
[ E -> E - T  ·  , adding  ]
[ E -> E - T  ·  , if  ]
[ E -> E - T  ·  , goto  ]
[ E -> E - T  ·  , load  ]
[ E -> E - T  ·  , put  ]
[ E -> E - T  ·  , switch  ]
[ E -> E - T  ·  , error  ]
[ E -> E - T  ·  , comment  ]
[ E -> E - T  ·  , -  ]
[ E -> E - T  ·  , +  ]
[ T -> T  · * F  , ;  ]
[ T -> T  · * F  , V  ]
[ T -> T  · * F  , :  ]
[ T -> T  · * F  , let  ]
[ T -> T  · * F  , next  ]
[ T -> T  · * F  , adding  ]
[ T -> T  · * F  , if  ]
[ T -> T  · * F  , goto  ]
[ T -> T  · * F  , load  ]
[ T -> T  · * F  , put  ]
[ T -> T  · * F  , switch  ]
[ T -> T  · * F  , error  ]
[ T -> T  · * F  , comment  ]
[ T -> T  · * F  , -  ]
[ T -> T  · * F  , +  ]
[ T -> T  · * F  , *  ]
[ T -> T  · * F  , /  ]
[ T -> T  · * F  , %  ]
[ T -> T  · / F  , ;  ]
[ T -> T  · / F  , V  ]
[ T -> T  · / F  , :  ]
[ T -> T  · / F  , let  ]
[ T -> T  · / F  , next  ]
[ T -> T  · / F  , adding  ]
[ T -> T  · / F  , if  ]
[ T -> T  · / F  , goto  ]
[ T -> T  · / F  , load  ]
[ T -> T  · / F  , put  ]
[ T -> T  · / F  , switch  ]
[ T -> T  · / F  , error  ]
[ T -> T  · / F  , comment  ]
[ T -> T  · / F  , -  ]
[ T -> T  · / F  , +  ]
[ T -> T  · / F  , *  ]
[ T -> T  · / F  , /  ]
[ T -> T  · / F  , %  ]
[ T -> T  · % F  , ;  ]
[ T -> T  · % F  , V  ]
[ T -> T  · % F  , :  ]
[ T -> T  · % F  , let  ]
[ T -> T  · % F  , next  ]
[ T -> T  · % F  , adding  ]
[ T -> T  · % F  , if  ]
[ T -> T  · % F  , goto  ]
[ T -> T  · % F  , load  ]
[ T -> T  · % F  , put  ]
[ T -> T  · % F  , switch  ]
[ T -> T  · % F  , error  ]
[ T -> T  · % F  , comment  ]
[ T -> T  · % F  , -  ]
[ T -> T  · % F  , +  ]
[ T -> T  · % F  , *  ]
[ T -> T  · % F  , /  ]
[ T -> T  · % F  , %  ]
}

set 378 = GOTO( set 325 , : ) :
{
[ <op> -> :  · V  , ;  ]
[ <op> -> :  · V  , V  ]
[ <op> -> :  · V  , :  ]
[ <op> -> :  · V  , let  ]
[ <op> -> :  · V  , next  ]
[ <op> -> :  · V  , if  ]
[ <op> -> :  · V  , goto  ]
[ <op> -> :  · V  , load  ]
[ <op> -> :  · V  , put  ]
[ <op> -> :  · V  , switch  ]
[ <op> -> :  · V  , error  ]
[ <op> -> :  · V  , comment  ]
}

set 379 = GOTO( set 325 , ; ) :
{
[ <op> -> ;  ·  , ;  ]
[ <op> -> ;  ·  , V  ]
[ <op> -> ;  ·  , :  ]
[ <op> -> ;  ·  , let  ]
[ <op> -> ;  ·  , next  ]
[ <op> -> ;  ·  , if  ]
[ <op> -> ;  ·  , goto  ]
[ <op> -> ;  ·  , load  ]
[ <op> -> ;  ·  , put  ]
[ <op> -> ;  ·  , switch  ]
[ <op> -> ;  ·  , error  ]
[ <op> -> ;  ·  , comment  ]
}

set 380 = GOTO( set 325 , <op> ) :
{
[ <pr> ->  ·  , next  ]
[ <pr> ->  · <op> <pr>  , next  ]
[ <pr> -> <op>  · <pr>  , next  ]
[ <op> ->  · ;  , ;  ]
[ <op> ->  · ;  , V  ]
[ <op> ->  · ;  , :  ]
[ <op> ->  · ;  , let  ]
[ <op> ->  · ;  , next  ]
[ <op> ->  · ;  , if  ]
[ <op> ->  · ;  , goto  ]
[ <op> ->  · ;  , load  ]
[ <op> ->  · ;  , put  ]
[ <op> ->  · ;  , switch  ]
[ <op> ->  · ;  , error  ]
[ <op> ->  · ;  , comment  ]
[ <op> ->  · V <listV> : TYPE ;  , ;  ]
[ <op> ->  · V <listV> : TYPE ;  , V  ]
[ <op> ->  · V <listV> : TYPE ;  , :  ]
[ <op> ->  · V <listV> : TYPE ;  , let  ]
[ <op> ->  · V <listV> : TYPE ;  , next  ]
[ <op> ->  · V <listV> : TYPE ;  , if  ]
[ <op> ->  · V <listV> : TYPE ;  , goto  ]
[ <op> ->  · V <listV> : TYPE ;  , load  ]
[ <op> ->  · V <listV> : TYPE ;  , put  ]
[ <op> ->  · V <listV> : TYPE ;  , switch  ]
[ <op> ->  · V <listV> : TYPE ;  , error  ]
[ <op> ->  · V <listV> : TYPE ;  , comment  ]
[ <op> ->  · V for V = E to E <step> <pr> next V  , ;  ]
[ <op> ->  · V for V = E to E <step> <pr> next V  , V  ]
[ <op> ->  · V for V = E to E <step> <pr> next V  , :  ]
[ <op> ->  · V for V = E to E <step> <pr> next V  , let  ]
[ <op> ->  · V for V = E to E <step> <pr> next V  , next  ]
[ <op> ->  · V for V = E to E <step> <pr> next V  , if  ]
[ <op> ->  · V for V = E to E <step> <pr> next V  , goto  ]
[ <op> ->  · V for V = E to E <step> <pr> next V  , load  ]
[ <op> ->  · V for V = E to E <step> <pr> next V  , put  ]
[ <op> ->  · V for V = E to E <step> <pr> next V  , switch  ]
[ <op> ->  · V for V = E to E <step> <pr> next V  , error  ]
[ <op> ->  · V for V = E to E <step> <pr> next V  , comment  ]
[ <op> ->  · : V  , ;  ]
[ <op> ->  · : V  , V  ]
[ <op> ->  · : V  , :  ]
[ <op> ->  · : V  , let  ]
[ <op> ->  · : V  , next  ]
[ <op> ->  · : V  , if  ]
[ <op> ->  · : V  , goto  ]
[ <op> ->  · : V  , load  ]
[ <op> ->  · : V  , put  ]
[ <op> ->  · : V  , switch  ]
[ <op> ->  · : V  , error  ]
[ <op> ->  · : V  , comment  ]
[ <op> ->  · let V <listA>  , ;  ]
[ <op> ->  · let V <listA>  , V  ]
[ <op> ->  · let V <listA>  , :  ]
[ <op> ->  · let V <listA>  , let  ]
[ <op> ->  · let V <listA>  , next  ]
[ <op> ->  · let V <listA>  , if  ]
[ <op> ->  · let V <listA>  , goto  ]
[ <op> ->  · let V <listA>  , load  ]
[ <op> ->  · let V <listA>  , put  ]
[ <op> ->  · let V <listA>  , switch  ]
[ <op> ->  · let V <listA>  , error  ]
[ <op> ->  · let V <listA>  , comment  ]
[ <op> ->  · if <test> goto V <else> ;  , ;  ]
[ <op> ->  · if <test> goto V <else> ;  , V  ]
[ <op> ->  · if <test> goto V <else> ;  , :  ]
[ <op> ->  · if <test> goto V <else> ;  , let  ]
[ <op> ->  · if <test> goto V <else> ;  , next  ]
[ <op> ->  · if <test> goto V <else> ;  , if  ]
[ <op> ->  · if <test> goto V <else> ;  , goto  ]
[ <op> ->  · if <test> goto V <else> ;  , load  ]
[ <op> ->  · if <test> goto V <else> ;  , put  ]
[ <op> ->  · if <test> goto V <else> ;  , switch  ]
[ <op> ->  · if <test> goto V <else> ;  , error  ]
[ <op> ->  · if <test> goto V <else> ;  , comment  ]
[ <op> ->  · goto V  , ;  ]
[ <op> ->  · goto V  , V  ]
[ <op> ->  · goto V  , :  ]
[ <op> ->  · goto V  , let  ]
[ <op> ->  · goto V  , next  ]
[ <op> ->  · goto V  , if  ]
[ <op> ->  · goto V  , goto  ]
[ <op> ->  · goto V  , load  ]
[ <op> ->  · goto V  , put  ]
[ <op> ->  · goto V  , switch  ]
[ <op> ->  · goto V  , error  ]
[ <op> ->  · goto V  , comment  ]
[ <op> ->  · load ( V <listV> ) ;  , ;  ]
[ <op> ->  · load ( V <listV> ) ;  , V  ]
[ <op> ->  · load ( V <listV> ) ;  , :  ]
[ <op> ->  · load ( V <listV> ) ;  , let  ]
[ <op> ->  · load ( V <listV> ) ;  , next  ]
[ <op> ->  · load ( V <listV> ) ;  , if  ]
[ <op> ->  · load ( V <listV> ) ;  , goto  ]
[ <op> ->  · load ( V <listV> ) ;  , load  ]
[ <op> ->  · load ( V <listV> ) ;  , put  ]
[ <op> ->  · load ( V <listV> ) ;  , switch  ]
[ <op> ->  · load ( V <listV> ) ;  , error  ]
[ <op> ->  · load ( V <listV> ) ;  , comment  ]
[ <op> ->  · put ( E <listE> ) ;  , ;  ]
[ <op> ->  · put ( E <listE> ) ;  , V  ]
[ <op> ->  · put ( E <listE> ) ;  , :  ]
[ <op> ->  · put ( E <listE> ) ;  , let  ]
[ <op> ->  · put ( E <listE> ) ;  , next  ]
[ <op> ->  · put ( E <listE> ) ;  , if  ]
[ <op> ->  · put ( E <listE> ) ;  , goto  ]
[ <op> ->  · put ( E <listE> ) ;  , load  ]
[ <op> ->  · put ( E <listE> ) ;  , put  ]
[ <op> ->  · put ( E <listE> ) ;  , switch  ]
[ <op> ->  · put ( E <listE> ) ;  , error  ]
[ <op> ->  · put ( E <listE> ) ;  , comment  ]
[ <op> ->  · switch ( E ) <switch_body> end switch ;  , ;  ]
[ <op> ->  · switch ( E ) <switch_body> end switch ;  , V  ]
[ <op> ->  · switch ( E ) <switch_body> end switch ;  , :  ]
[ <op> ->  · switch ( E ) <switch_body> end switch ;  , let  ]
[ <op> ->  · switch ( E ) <switch_body> end switch ;  , next  ]
[ <op> ->  · switch ( E ) <switch_body> end switch ;  , if  ]
[ <op> ->  · switch ( E ) <switch_body> end switch ;  , goto  ]
[ <op> ->  · switch ( E ) <switch_body> end switch ;  , load  ]
[ <op> ->  · switch ( E ) <switch_body> end switch ;  , put  ]
[ <op> ->  · switch ( E ) <switch_body> end switch ;  , switch  ]
[ <op> ->  · switch ( E ) <switch_body> end switch ;  , error  ]
[ <op> ->  · switch ( E ) <switch_body> end switch ;  , comment  ]
[ <op> ->  · error ;  , ;  ]
[ <op> ->  · error ;  , V  ]
[ <op> ->  · error ;  , :  ]
[ <op> ->  · error ;  , let  ]
[ <op> ->  · error ;  , next  ]
[ <op> ->  · error ;  , if  ]
[ <op> ->  · error ;  , goto  ]
[ <op> ->  · error ;  , load  ]
[ <op> ->  · error ;  , put  ]
[ <op> ->  · error ;  , switch  ]
[ <op> ->  · error ;  , error  ]
[ <op> ->  · error ;  , comment  ]
[ <op> ->  · comment  , ;  ]
[ <op> ->  · comment  , V  ]
[ <op> ->  · comment  , :  ]
[ <op> ->  · comment  , let  ]
[ <op> ->  · comment  , next  ]
[ <op> ->  · comment  , if  ]
[ <op> ->  · comment  , goto  ]
[ <op> ->  · comment  , load  ]
[ <op> ->  · comment  , put  ]
[ <op> ->  · comment  , switch  ]
[ <op> ->  · comment  , error  ]
[ <op> ->  · comment  , comment  ]
}

set 381 = GOTO( set 325 , <pr> ) :
{
[ <op> -> V for V = E to E <step> <pr>  · next V  ,  ]
[ <op> -> V for V = E to E <step> <pr>  · next V  , ;  ]
[ <op> -> V for V = E to E <step> <pr>  · next V  , V  ]
[ <op> -> V for V = E to E <step> <pr>  · next V  , :  ]
[ <op> -> V for V = E to E <step> <pr>  · next V  , let  ]
[ <op> -> V for V = E to E <step> <pr>  · next V  , if  ]
[ <op> -> V for V = E to E <step> <pr>  · next V  , goto  ]
[ <op> -> V for V = E to E <step> <pr>  · next V  , load  ]
[ <op> -> V for V = E to E <step> <pr>  · next V  , put  ]
[ <op> -> V for V = E to E <step> <pr>  · next V  , switch  ]
[ <op> -> V for V = E to E <step> <pr>  · next V  , error  ]
[ <op> -> V for V = E to E <step> <pr>  · next V  , comment  ]
}

set 382 = GOTO( set 325 , V ) :
{
[ <op> -> V  · <listV> : TYPE ;  , ;  ]
[ <op> -> V  · <listV> : TYPE ;  , V  ]
[ <op> -> V  · <listV> : TYPE ;  , :  ]
[ <op> -> V  · <listV> : TYPE ;  , let  ]
[ <op> -> V  · <listV> : TYPE ;  , next  ]
[ <op> -> V  · <listV> : TYPE ;  , if  ]
[ <op> -> V  · <listV> : TYPE ;  , goto  ]
[ <op> -> V  · <listV> : TYPE ;  , load  ]
[ <op> -> V  · <listV> : TYPE ;  , put  ]
[ <op> -> V  · <listV> : TYPE ;  , switch  ]
[ <op> -> V  · <listV> : TYPE ;  , error  ]
[ <op> -> V  · <listV> : TYPE ;  , comment  ]
[ <op> -> V  · for V = E to E <step> <pr> next V  , ;  ]
[ <op> -> V  · for V = E to E <step> <pr> next V  , V  ]
[ <op> -> V  · for V = E to E <step> <pr> next V  , :  ]
[ <op> -> V  · for V = E to E <step> <pr> next V  , let  ]
[ <op> -> V  · for V = E to E <step> <pr> next V  , next  ]
[ <op> -> V  · for V = E to E <step> <pr> next V  , if  ]
[ <op> -> V  · for V = E to E <step> <pr> next V  , goto  ]
[ <op> -> V  · for V = E to E <step> <pr> next V  , load  ]
[ <op> -> V  · for V = E to E <step> <pr> next V  , put  ]
[ <op> -> V  · for V = E to E <step> <pr> next V  , switch  ]
[ <op> -> V  · for V = E to E <step> <pr> next V  , error  ]
[ <op> -> V  · for V = E to E <step> <pr> next V  , comment  ]
[ <listV> ->  ·  , :  ]
[ <listV> ->  · , V <listV>  , :  ]
}

set 383 = GOTO( set 325 , comment ) :
{
[ <op> -> comment  ·  , ;  ]
[ <op> -> comment  ·  , V  ]
[ <op> -> comment  ·  , :  ]
[ <op> -> comment  ·  , let  ]
[ <op> -> comment  ·  , next  ]
[ <op> -> comment  ·  , if  ]
[ <op> -> comment  ·  , goto  ]
[ <op> -> comment  ·  , load  ]
[ <op> -> comment  ·  , put  ]
[ <op> -> comment  ·  , switch  ]
[ <op> -> comment  ·  , error  ]
[ <op> -> comment  ·  , comment  ]
}

set 384 = GOTO( set 325 , error ) :
{
[ <op> -> error  · ;  , ;  ]
[ <op> -> error  · ;  , V  ]
[ <op> -> error  · ;  , :  ]
[ <op> -> error  · ;  , let  ]
[ <op> -> error  · ;  , next  ]
[ <op> -> error  · ;  , if  ]
[ <op> -> error  · ;  , goto  ]
[ <op> -> error  · ;  , load  ]
[ <op> -> error  · ;  , put  ]
[ <op> -> error  · ;  , switch  ]
[ <op> -> error  · ;  , error  ]
[ <op> -> error  · ;  , comment  ]
}

set 385 = GOTO( set 325 , goto ) :
{
[ <op> -> goto  · V  , ;  ]
[ <op> -> goto  · V  , V  ]
[ <op> -> goto  · V  , :  ]
[ <op> -> goto  · V  , let  ]
[ <op> -> goto  · V  , next  ]
[ <op> -> goto  · V  , if  ]
[ <op> -> goto  · V  , goto  ]
[ <op> -> goto  · V  , load  ]
[ <op> -> goto  · V  , put  ]
[ <op> -> goto  · V  , switch  ]
[ <op> -> goto  · V  , error  ]
[ <op> -> goto  · V  , comment  ]
}

set 386 = GOTO( set 325 , if ) :
{
[ <op> -> if  · <test> goto V <else> ;  , ;  ]
[ <op> -> if  · <test> goto V <else> ;  , V  ]
[ <op> -> if  · <test> goto V <else> ;  , :  ]
[ <op> -> if  · <test> goto V <else> ;  , let  ]
[ <op> -> if  · <test> goto V <else> ;  , next  ]
[ <op> -> if  · <test> goto V <else> ;  , if  ]
[ <op> -> if  · <test> goto V <else> ;  , goto  ]
[ <op> -> if  · <test> goto V <else> ;  , load  ]
[ <op> -> if  · <test> goto V <else> ;  , put  ]
[ <op> -> if  · <test> goto V <else> ;  , switch  ]
[ <op> -> if  · <test> goto V <else> ;  , error  ]
[ <op> -> if  · <test> goto V <else> ;  , comment  ]
[ E ->  · E - T  , Rel  ]
[ E ->  · E - T  , -  ]
[ E ->  · E - T  , +  ]
[ E ->  · E + T  , Rel  ]
[ E ->  · E + T  , -  ]
[ E ->  · E + T  , +  ]
[ E ->  · T  , Rel  ]
[ E ->  · T  , -  ]
[ E ->  · T  , +  ]
[ <test> ->  · E Rel E  , goto  ]
[ T ->  · T * F  , Rel  ]
[ T ->  · T * F  , -  ]
[ T ->  · T * F  , +  ]
[ T ->  · T * F  , *  ]
[ T ->  · T * F  , /  ]
[ T ->  · T * F  , %  ]
[ T ->  · T / F  , Rel  ]
[ T ->  · T / F  , -  ]
[ T ->  · T / F  , +  ]
[ T ->  · T / F  , *  ]
[ T ->  · T / F  , /  ]
[ T ->  · T / F  , %  ]
[ T ->  · T % F  , Rel  ]
[ T ->  · T % F  , -  ]
[ T ->  · T % F  , +  ]
[ T ->  · T % F  , *  ]
[ T ->  · T % F  , /  ]
[ T ->  · T % F  , %  ]
[ T ->  · F  , Rel  ]
[ T ->  · F  , -  ]
[ T ->  · F  , +  ]
[ T ->  · F  , *  ]
[ T ->  · F  , /  ]
[ T ->  · F  , %  ]
[ F ->  · V  , Rel  ]
[ F ->  · V  , -  ]
[ F ->  · V  , +  ]
[ F ->  · V  , *  ]
[ F ->  · V  , /  ]
[ F ->  · V  , %  ]
[ F ->  · ( E )  , Rel  ]
[ F ->  · ( E )  , -  ]
[ F ->  · ( E )  , +  ]
[ F ->  · ( E )  , *  ]
[ F ->  · ( E )  , /  ]
[ F ->  · ( E )  , %  ]
[ F ->  · C  , Rel  ]
[ F ->  · C  , -  ]
[ F ->  · C  , +  ]
[ F ->  · C  , *  ]
[ F ->  · C  , /  ]
[ F ->  · C  , %  ]
[ F ->  · value ( E , E )  , Rel  ]
[ F ->  · value ( E , E )  , -  ]
[ F ->  · value ( E , E )  , +  ]
[ F ->  · value ( E , E )  , *  ]
[ F ->  · value ( E , E )  , /  ]
[ F ->  · value ( E , E )  , %  ]
[ F ->  · derivative ( E )  , Rel  ]
[ F ->  · derivative ( E )  , -  ]
[ F ->  · derivative ( E )  , +  ]
[ F ->  · derivative ( E )  , *  ]
[ F ->  · derivative ( E )  , /  ]
[ F ->  · derivative ( E )  , %  ]
[ F ->  · coeff ( E , E )  , Rel  ]
[ F ->  · coeff ( E , E )  , -  ]
[ F ->  · coeff ( E , E )  , +  ]
[ F ->  · coeff ( E , E )  , *  ]
[ F ->  · coeff ( E , E )  , /  ]
[ F ->  · coeff ( E , E )  , %  ]
[ F ->  · deg ( E )  , Rel  ]
[ F ->  · deg ( E )  , -  ]
[ F ->  · deg ( E )  , +  ]
[ F ->  · deg ( E )  , *  ]
[ F ->  · deg ( E )  , /  ]
[ F ->  · deg ( E )  , %  ]
}

set 387 = GOTO( set 325 , let ) :
{
[ <op> -> let  · V <listA>  , ;  ]
[ <op> -> let  · V <listA>  , V  ]
[ <op> -> let  · V <listA>  , :  ]
[ <op> -> let  · V <listA>  , let  ]
[ <op> -> let  · V <listA>  , next  ]
[ <op> -> let  · V <listA>  , if  ]
[ <op> -> let  · V <listA>  , goto  ]
[ <op> -> let  · V <listA>  , load  ]
[ <op> -> let  · V <listA>  , put  ]
[ <op> -> let  · V <listA>  , switch  ]
[ <op> -> let  · V <listA>  , error  ]
[ <op> -> let  · V <listA>  , comment  ]
}

set 388 = GOTO( set 325 , load ) :
{
[ <op> -> load  · ( V <listV> ) ;  , ;  ]
[ <op> -> load  · ( V <listV> ) ;  , V  ]
[ <op> -> load  · ( V <listV> ) ;  , :  ]
[ <op> -> load  · ( V <listV> ) ;  , let  ]
[ <op> -> load  · ( V <listV> ) ;  , next  ]
[ <op> -> load  · ( V <listV> ) ;  , if  ]
[ <op> -> load  · ( V <listV> ) ;  , goto  ]
[ <op> -> load  · ( V <listV> ) ;  , load  ]
[ <op> -> load  · ( V <listV> ) ;  , put  ]
[ <op> -> load  · ( V <listV> ) ;  , switch  ]
[ <op> -> load  · ( V <listV> ) ;  , error  ]
[ <op> -> load  · ( V <listV> ) ;  , comment  ]
}

set 389 = GOTO( set 325 , put ) :
{
[ <op> -> put  · ( E <listE> ) ;  , ;  ]
[ <op> -> put  · ( E <listE> ) ;  , V  ]
[ <op> -> put  · ( E <listE> ) ;  , :  ]
[ <op> -> put  · ( E <listE> ) ;  , let  ]
[ <op> -> put  · ( E <listE> ) ;  , next  ]
[ <op> -> put  · ( E <listE> ) ;  , if  ]
[ <op> -> put  · ( E <listE> ) ;  , goto  ]
[ <op> -> put  · ( E <listE> ) ;  , load  ]
[ <op> -> put  · ( E <listE> ) ;  , put  ]
[ <op> -> put  · ( E <listE> ) ;  , switch  ]
[ <op> -> put  · ( E <listE> ) ;  , error  ]
[ <op> -> put  · ( E <listE> ) ;  , comment  ]
}

set 390 = GOTO( set 325 , switch ) :
{
[ <op> -> switch  · ( E ) <switch_body> end switch ;  , ;  ]
[ <op> -> switch  · ( E ) <switch_body> end switch ;  , V  ]
[ <op> -> switch  · ( E ) <switch_body> end switch ;  , :  ]
[ <op> -> switch  · ( E ) <switch_body> end switch ;  , let  ]
[ <op> -> switch  · ( E ) <switch_body> end switch ;  , next  ]
[ <op> -> switch  · ( E ) <switch_body> end switch ;  , if  ]
[ <op> -> switch  · ( E ) <switch_body> end switch ;  , goto  ]
[ <op> -> switch  · ( E ) <switch_body> end switch ;  , load  ]
[ <op> -> switch  · ( E ) <switch_body> end switch ;  , put  ]
[ <op> -> switch  · ( E ) <switch_body> end switch ;  , switch  ]
[ <op> -> switch  · ( E ) <switch_body> end switch ;  , error  ]
[ <op> -> switch  · ( E ) <switch_body> end switch ;  , comment  ]
}

set 391 = GOTO( set 326 , ( ) :
{
[ E ->  · E - T  , )  ]
[ E ->  · E - T  , -  ]
[ E ->  · E - T  , +  ]
[ E ->  · E + T  , )  ]
[ E ->  · E + T  , -  ]
[ E ->  · E + T  , +  ]
[ E ->  · T  , )  ]
[ E ->  · T  , -  ]
[ E ->  · T  , +  ]
[ T ->  · T * F  , )  ]
[ T ->  · T * F  , -  ]
[ T ->  · T * F  , +  ]
[ T ->  · T * F  , *  ]
[ T ->  · T * F  , /  ]
[ T ->  · T * F  , %  ]
[ T ->  · T / F  , )  ]
[ T ->  · T / F  , -  ]
[ T ->  · T / F  , +  ]
[ T ->  · T / F  , *  ]
[ T ->  · T / F  , /  ]
[ T ->  · T / F  , %  ]
[ T ->  · T % F  , )  ]
[ T ->  · T % F  , -  ]
[ T ->  · T % F  , +  ]
[ T ->  · T % F  , *  ]
[ T ->  · T % F  , /  ]
[ T ->  · T % F  , %  ]
[ T ->  · F  , )  ]
[ T ->  · F  , -  ]
[ T ->  · F  , +  ]
[ T ->  · F  , *  ]
[ T ->  · F  , /  ]
[ T ->  · F  , %  ]
[ F ->  · V  , )  ]
[ F ->  · V  , -  ]
[ F ->  · V  , +  ]
[ F ->  · V  , *  ]
[ F ->  · V  , /  ]
[ F ->  · V  , %  ]
[ F ->  · ( E )  , )  ]
[ F ->  · ( E )  , -  ]
[ F ->  · ( E )  , +  ]
[ F ->  · ( E )  , *  ]
[ F ->  · ( E )  , /  ]
[ F ->  · ( E )  , %  ]
[ F ->  · C  , )  ]
[ F ->  · C  , -  ]
[ F ->  · C  , +  ]
[ F ->  · C  , *  ]
[ F ->  · C  , /  ]
[ F ->  · C  , %  ]
[ F ->  · value ( E , E )  , )  ]
[ F ->  · value ( E , E )  , -  ]
[ F ->  · value ( E , E )  , +  ]
[ F ->  · value ( E , E )  , *  ]
[ F ->  · value ( E , E )  , /  ]
[ F ->  · value ( E , E )  , %  ]
[ F ->  · derivative ( E )  , )  ]
[ F ->  · derivative ( E )  , -  ]
[ F ->  · derivative ( E )  , +  ]
[ F ->  · derivative ( E )  , *  ]
[ F ->  · derivative ( E )  , /  ]
[ F ->  · derivative ( E )  , %  ]
[ F ->  · coeff ( E , E )  , )  ]
[ F ->  · coeff ( E , E )  , -  ]
[ F ->  · coeff ( E , E )  , +  ]
[ F ->  · coeff ( E , E )  , *  ]
[ F ->  · coeff ( E , E )  , /  ]
[ F ->  · coeff ( E , E )  , %  ]
[ F ->  · deg ( E )  , )  ]
[ F ->  · deg ( E )  , -  ]
[ F ->  · deg ( E )  , +  ]
[ F ->  · deg ( E )  , *  ]
[ F ->  · deg ( E )  , /  ]
[ F ->  · deg ( E )  , %  ]
[ F -> (  · E )  , ;  ]
[ F -> (  · E )  , V  ]
[ F -> (  · E )  , :  ]
[ F -> (  · E )  , let  ]
[ F -> (  · E )  , next  ]
[ F -> (  · E )  , if  ]
[ F -> (  · E )  , goto  ]
[ F -> (  · E )  , load  ]
[ F -> (  · E )  , put  ]
[ F -> (  · E )  , switch  ]
[ F -> (  · E )  , error  ]
[ F -> (  · E )  , comment  ]
[ F -> (  · E )  , -  ]
[ F -> (  · E )  , +  ]
[ F -> (  · E )  , *  ]
[ F -> (  · E )  , /  ]
[ F -> (  · E )  , %  ]
}

set 392 = GOTO( set 326 , C ) :
{
[ F -> C  ·  , ;  ]
[ F -> C  ·  , V  ]
[ F -> C  ·  , :  ]
[ F -> C  ·  , let  ]
[ F -> C  ·  , next  ]
[ F -> C  ·  , if  ]
[ F -> C  ·  , goto  ]
[ F -> C  ·  , load  ]
[ F -> C  ·  , put  ]
[ F -> C  ·  , switch  ]
[ F -> C  ·  , error  ]
[ F -> C  ·  , comment  ]
[ F -> C  ·  , -  ]
[ F -> C  ·  , +  ]
[ F -> C  ·  , *  ]
[ F -> C  ·  , /  ]
[ F -> C  ·  , %  ]
}

set 393 = GOTO( set 326 , E ) :
{
[ E -> E  · - T  , ;  ]
[ E -> E  · - T  , V  ]
[ E -> E  · - T  , :  ]
[ E -> E  · - T  , let  ]
[ E -> E  · - T  , next  ]
[ E -> E  · - T  , if  ]
[ E -> E  · - T  , goto  ]
[ E -> E  · - T  , load  ]
[ E -> E  · - T  , put  ]
[ E -> E  · - T  , switch  ]
[ E -> E  · - T  , error  ]
[ E -> E  · - T  , comment  ]
[ E -> E  · - T  , -  ]
[ E -> E  · - T  , +  ]
[ E -> E  · + T  , ;  ]
[ E -> E  · + T  , V  ]
[ E -> E  · + T  , :  ]
[ E -> E  · + T  , let  ]
[ E -> E  · + T  , next  ]
[ E -> E  · + T  , if  ]
[ E -> E  · + T  , goto  ]
[ E -> E  · + T  , load  ]
[ E -> E  · + T  , put  ]
[ E -> E  · + T  , switch  ]
[ E -> E  · + T  , error  ]
[ E -> E  · + T  , comment  ]
[ E -> E  · + T  , -  ]
[ E -> E  · + T  , +  ]
[ <step> -> adding E  ·  , ;  ]
[ <step> -> adding E  ·  , V  ]
[ <step> -> adding E  ·  , :  ]
[ <step> -> adding E  ·  , let  ]
[ <step> -> adding E  ·  , next  ]
[ <step> -> adding E  ·  , if  ]
[ <step> -> adding E  ·  , goto  ]
[ <step> -> adding E  ·  , load  ]
[ <step> -> adding E  ·  , put  ]
[ <step> -> adding E  ·  , switch  ]
[ <step> -> adding E  ·  , error  ]
[ <step> -> adding E  ·  , comment  ]
}

set 394 = GOTO( set 326 , F ) :
{
[ T -> F  ·  , ;  ]
[ T -> F  ·  , V  ]
[ T -> F  ·  , :  ]
[ T -> F  ·  , let  ]
[ T -> F  ·  , next  ]
[ T -> F  ·  , if  ]
[ T -> F  ·  , goto  ]
[ T -> F  ·  , load  ]
[ T -> F  ·  , put  ]
[ T -> F  ·  , switch  ]
[ T -> F  ·  , error  ]
[ T -> F  ·  , comment  ]
[ T -> F  ·  , -  ]
[ T -> F  ·  , +  ]
[ T -> F  ·  , *  ]
[ T -> F  ·  , /  ]
[ T -> F  ·  , %  ]
}

set 395 = GOTO( set 326 , T ) :
{
[ E -> T  ·  , ;  ]
[ E -> T  ·  , V  ]
[ E -> T  ·  , :  ]
[ E -> T  ·  , let  ]
[ E -> T  ·  , next  ]
[ E -> T  ·  , if  ]
[ E -> T  ·  , goto  ]
[ E -> T  ·  , load  ]
[ E -> T  ·  , put  ]
[ E -> T  ·  , switch  ]
[ E -> T  ·  , error  ]
[ E -> T  ·  , comment  ]
[ E -> T  ·  , -  ]
[ E -> T  ·  , +  ]
[ T -> T  · * F  , ;  ]
[ T -> T  · * F  , V  ]
[ T -> T  · * F  , :  ]
[ T -> T  · * F  , let  ]
[ T -> T  · * F  , next  ]
[ T -> T  · * F  , if  ]
[ T -> T  · * F  , goto  ]
[ T -> T  · * F  , load  ]
[ T -> T  · * F  , put  ]
[ T -> T  · * F  , switch  ]
[ T -> T  · * F  , error  ]
[ T -> T  · * F  , comment  ]
[ T -> T  · * F  , -  ]
[ T -> T  · * F  , +  ]
[ T -> T  · * F  , *  ]
[ T -> T  · * F  , /  ]
[ T -> T  · * F  , %  ]
[ T -> T  · / F  , ;  ]
[ T -> T  · / F  , V  ]
[ T -> T  · / F  , :  ]
[ T -> T  · / F  , let  ]
[ T -> T  · / F  , next  ]
[ T -> T  · / F  , if  ]
[ T -> T  · / F  , goto  ]
[ T -> T  · / F  , load  ]
[ T -> T  · / F  , put  ]
[ T -> T  · / F  , switch  ]
[ T -> T  · / F  , error  ]
[ T -> T  · / F  , comment  ]
[ T -> T  · / F  , -  ]
[ T -> T  · / F  , +  ]
[ T -> T  · / F  , *  ]
[ T -> T  · / F  , /  ]
[ T -> T  · / F  , %  ]
[ T -> T  · % F  , ;  ]
[ T -> T  · % F  , V  ]
[ T -> T  · % F  , :  ]
[ T -> T  · % F  , let  ]
[ T -> T  · % F  , next  ]
[ T -> T  · % F  , if  ]
[ T -> T  · % F  , goto  ]
[ T -> T  · % F  , load  ]
[ T -> T  · % F  , put  ]
[ T -> T  · % F  , switch  ]
[ T -> T  · % F  , error  ]
[ T -> T  · % F  , comment  ]
[ T -> T  · % F  , -  ]
[ T -> T  · % F  , +  ]
[ T -> T  · % F  , *  ]
[ T -> T  · % F  , /  ]
[ T -> T  · % F  , %  ]
}

set 396 = GOTO( set 326 , V ) :
{
[ F -> V  ·  , ;  ]
[ F -> V  ·  , V  ]
[ F -> V  ·  , :  ]
[ F -> V  ·  , let  ]
[ F -> V  ·  , next  ]
[ F -> V  ·  , if  ]
[ F -> V  ·  , goto  ]
[ F -> V  ·  , load  ]
[ F -> V  ·  , put  ]
[ F -> V  ·  , switch  ]
[ F -> V  ·  , error  ]
[ F -> V  ·  , comment  ]
[ F -> V  ·  , -  ]
[ F -> V  ·  , +  ]
[ F -> V  ·  , *  ]
[ F -> V  ·  , /  ]
[ F -> V  ·  , %  ]
}

set 397 = GOTO( set 326 , coeff ) :
{
[ F -> coeff  · ( E , E )  , ;  ]
[ F -> coeff  · ( E , E )  , V  ]
[ F -> coeff  · ( E , E )  , :  ]
[ F -> coeff  · ( E , E )  , let  ]
[ F -> coeff  · ( E , E )  , next  ]
[ F -> coeff  · ( E , E )  , if  ]
[ F -> coeff  · ( E , E )  , goto  ]
[ F -> coeff  · ( E , E )  , load  ]
[ F -> coeff  · ( E , E )  , put  ]
[ F -> coeff  · ( E , E )  , switch  ]
[ F -> coeff  · ( E , E )  , error  ]
[ F -> coeff  · ( E , E )  , comment  ]
[ F -> coeff  · ( E , E )  , -  ]
[ F -> coeff  · ( E , E )  , +  ]
[ F -> coeff  · ( E , E )  , *  ]
[ F -> coeff  · ( E , E )  , /  ]
[ F -> coeff  · ( E , E )  , %  ]
}

set 398 = GOTO( set 326 , deg ) :
{
[ F -> deg  · ( E )  , ;  ]
[ F -> deg  · ( E )  , V  ]
[ F -> deg  · ( E )  , :  ]
[ F -> deg  · ( E )  , let  ]
[ F -> deg  · ( E )  , next  ]
[ F -> deg  · ( E )  , if  ]
[ F -> deg  · ( E )  , goto  ]
[ F -> deg  · ( E )  , load  ]
[ F -> deg  · ( E )  , put  ]
[ F -> deg  · ( E )  , switch  ]
[ F -> deg  · ( E )  , error  ]
[ F -> deg  · ( E )  , comment  ]
[ F -> deg  · ( E )  , -  ]
[ F -> deg  · ( E )  , +  ]
[ F -> deg  · ( E )  , *  ]
[ F -> deg  · ( E )  , /  ]
[ F -> deg  · ( E )  , %  ]
}

set 399 = GOTO( set 326 , derivative ) :
{
[ F -> derivative  · ( E )  , ;  ]
[ F -> derivative  · ( E )  , V  ]
[ F -> derivative  · ( E )  , :  ]
[ F -> derivative  · ( E )  , let  ]
[ F -> derivative  · ( E )  , next  ]
[ F -> derivative  · ( E )  , if  ]
[ F -> derivative  · ( E )  , goto  ]
[ F -> derivative  · ( E )  , load  ]
[ F -> derivative  · ( E )  , put  ]
[ F -> derivative  · ( E )  , switch  ]
[ F -> derivative  · ( E )  , error  ]
[ F -> derivative  · ( E )  , comment  ]
[ F -> derivative  · ( E )  , -  ]
[ F -> derivative  · ( E )  , +  ]
[ F -> derivative  · ( E )  , *  ]
[ F -> derivative  · ( E )  , /  ]
[ F -> derivative  · ( E )  , %  ]
}

set 400 = GOTO( set 326 , value ) :
{
[ F -> value  · ( E , E )  , ;  ]
[ F -> value  · ( E , E )  , V  ]
[ F -> value  · ( E , E )  , :  ]
[ F -> value  · ( E , E )  , let  ]
[ F -> value  · ( E , E )  , next  ]
[ F -> value  · ( E , E )  , if  ]
[ F -> value  · ( E , E )  , goto  ]
[ F -> value  · ( E , E )  , load  ]
[ F -> value  · ( E , E )  , put  ]
[ F -> value  · ( E , E )  , switch  ]
[ F -> value  · ( E , E )  , error  ]
[ F -> value  · ( E , E )  , comment  ]
[ F -> value  · ( E , E )  , -  ]
[ F -> value  · ( E , E )  , +  ]
[ F -> value  · ( E , E )  , *  ]
[ F -> value  · ( E , E )  , /  ]
[ F -> value  · ( E , E )  , %  ]
}

set 401 = GOTO( set 327 , F ) :
{
[ T -> T % F  ·  , ;  ]
[ T -> T % F  ·  , V  ]
[ T -> T % F  ·  , :  ]
[ T -> T % F  ·  , let  ]
[ T -> T % F  ·  , next  ]
[ T -> T % F  ·  , adding  ]
[ T -> T % F  ·  , if  ]
[ T -> T % F  ·  , goto  ]
[ T -> T % F  ·  , load  ]
[ T -> T % F  ·  , put  ]
[ T -> T % F  ·  , switch  ]
[ T -> T % F  ·  , error  ]
[ T -> T % F  ·  , comment  ]
[ T -> T % F  ·  , -  ]
[ T -> T % F  ·  , +  ]
[ T -> T % F  ·  , *  ]
[ T -> T % F  ·  , /  ]
[ T -> T % F  ·  , %  ]
}

set 402 = GOTO( set 328 , F ) :
{
[ T -> T * F  ·  , ;  ]
[ T -> T * F  ·  , V  ]
[ T -> T * F  ·  , :  ]
[ T -> T * F  ·  , let  ]
[ T -> T * F  ·  , next  ]
[ T -> T * F  ·  , adding  ]
[ T -> T * F  ·  , if  ]
[ T -> T * F  ·  , goto  ]
[ T -> T * F  ·  , load  ]
[ T -> T * F  ·  , put  ]
[ T -> T * F  ·  , switch  ]
[ T -> T * F  ·  , error  ]
[ T -> T * F  ·  , comment  ]
[ T -> T * F  ·  , -  ]
[ T -> T * F  ·  , +  ]
[ T -> T * F  ·  , *  ]
[ T -> T * F  ·  , /  ]
[ T -> T * F  ·  , %  ]
}

set 403 = GOTO( set 329 , F ) :
{
[ T -> T / F  ·  , ;  ]
[ T -> T / F  ·  , V  ]
[ T -> T / F  ·  , :  ]
[ T -> T / F  ·  , let  ]
[ T -> T / F  ·  , next  ]
[ T -> T / F  ·  , adding  ]
[ T -> T / F  ·  , if  ]
[ T -> T / F  ·  , goto  ]
[ T -> T / F  ·  , load  ]
[ T -> T / F  ·  , put  ]
[ T -> T / F  ·  , switch  ]
[ T -> T / F  ·  , error  ]
[ T -> T / F  ·  , comment  ]
[ T -> T / F  ·  , -  ]
[ T -> T / F  ·  , +  ]
[ T -> T / F  ·  , *  ]
[ T -> T / F  ·  , /  ]
[ T -> T / F  ·  , %  ]
}

set 404 = GOTO( set 330 , E ) :
{
[ E -> E  · - T  , ,  ]
[ E -> E  · - T  , -  ]
[ E -> E  · - T  , +  ]
[ E -> E  · + T  , ,  ]
[ E -> E  · + T  , -  ]
[ E -> E  · + T  , +  ]
[ F -> coeff ( E  · , E )  , ;  ]
[ F -> coeff ( E  · , E )  , V  ]
[ F -> coeff ( E  · , E )  , :  ]
[ F -> coeff ( E  · , E )  , let  ]
[ F -> coeff ( E  · , E )  , next  ]
[ F -> coeff ( E  · , E )  , adding  ]
[ F -> coeff ( E  · , E )  , if  ]
[ F -> coeff ( E  · , E )  , goto  ]
[ F -> coeff ( E  · , E )  , load  ]
[ F -> coeff ( E  · , E )  , put  ]
[ F -> coeff ( E  · , E )  , switch  ]
[ F -> coeff ( E  · , E )  , error  ]
[ F -> coeff ( E  · , E )  , comment  ]
[ F -> coeff ( E  · , E )  , -  ]
[ F -> coeff ( E  · , E )  , +  ]
[ F -> coeff ( E  · , E )  , *  ]
[ F -> coeff ( E  · , E )  , /  ]
[ F -> coeff ( E  · , E )  , %  ]
}

set 405 = GOTO( set 331 , E ) :
{
[ E -> E  · - T  , )  ]
[ E -> E  · - T  , -  ]
[ E -> E  · - T  , +  ]
[ E -> E  · + T  , )  ]
[ E -> E  · + T  , -  ]
[ E -> E  · + T  , +  ]
[ F -> deg ( E  · )  , ;  ]
[ F -> deg ( E  · )  , V  ]
[ F -> deg ( E  · )  , :  ]
[ F -> deg ( E  · )  , let  ]
[ F -> deg ( E  · )  , next  ]
[ F -> deg ( E  · )  , adding  ]
[ F -> deg ( E  · )  , if  ]
[ F -> deg ( E  · )  , goto  ]
[ F -> deg ( E  · )  , load  ]
[ F -> deg ( E  · )  , put  ]
[ F -> deg ( E  · )  , switch  ]
[ F -> deg ( E  · )  , error  ]
[ F -> deg ( E  · )  , comment  ]
[ F -> deg ( E  · )  , -  ]
[ F -> deg ( E  · )  , +  ]
[ F -> deg ( E  · )  , *  ]
[ F -> deg ( E  · )  , /  ]
[ F -> deg ( E  · )  , %  ]
}

set 406 = GOTO( set 332 , E ) :
{
[ E -> E  · - T  , )  ]
[ E -> E  · - T  , -  ]
[ E -> E  · - T  , +  ]
[ E -> E  · + T  , )  ]
[ E -> E  · + T  , -  ]
[ E -> E  · + T  , +  ]
[ F -> derivative ( E  · )  , ;  ]
[ F -> derivative ( E  · )  , V  ]
[ F -> derivative ( E  · )  , :  ]
[ F -> derivative ( E  · )  , let  ]
[ F -> derivative ( E  · )  , next  ]
[ F -> derivative ( E  · )  , adding  ]
[ F -> derivative ( E  · )  , if  ]
[ F -> derivative ( E  · )  , goto  ]
[ F -> derivative ( E  · )  , load  ]
[ F -> derivative ( E  · )  , put  ]
[ F -> derivative ( E  · )  , switch  ]
[ F -> derivative ( E  · )  , error  ]
[ F -> derivative ( E  · )  , comment  ]
[ F -> derivative ( E  · )  , -  ]
[ F -> derivative ( E  · )  , +  ]
[ F -> derivative ( E  · )  , *  ]
[ F -> derivative ( E  · )  , /  ]
[ F -> derivative ( E  · )  , %  ]
}

set 407 = GOTO( set 333 , E ) :
{
[ E -> E  · - T  , ,  ]
[ E -> E  · - T  , -  ]
[ E -> E  · - T  , +  ]
[ E -> E  · + T  , ,  ]
[ E -> E  · + T  , -  ]
[ E -> E  · + T  , +  ]
[ F -> value ( E  · , E )  , ;  ]
[ F -> value ( E  · , E )  , V  ]
[ F -> value ( E  · , E )  , :  ]
[ F -> value ( E  · , E )  , let  ]
[ F -> value ( E  · , E )  , next  ]
[ F -> value ( E  · , E )  , adding  ]
[ F -> value ( E  · , E )  , if  ]
[ F -> value ( E  · , E )  , goto  ]
[ F -> value ( E  · , E )  , load  ]
[ F -> value ( E  · , E )  , put  ]
[ F -> value ( E  · , E )  , switch  ]
[ F -> value ( E  · , E )  , error  ]
[ F -> value ( E  · , E )  , comment  ]
[ F -> value ( E  · , E )  , -  ]
[ F -> value ( E  · , E )  , +  ]
[ F -> value ( E  · , E )  , *  ]
[ F -> value ( E  · , E )  , /  ]
[ F -> value ( E  · , E )  , %  ]
}

set 408 = GOTO( set 334 , E ) :
{
[ E -> E  · - T  , )  ]
[ E -> E  · - T  , -  ]
[ E -> E  · - T  , +  ]
[ E -> E  · + T  , )  ]
[ E -> E  · + T  , -  ]
[ E -> E  · + T  , +  ]
[ F -> coeff ( E , E  · )  , to  ]
[ F -> coeff ( E , E  · )  , -  ]
[ F -> coeff ( E , E  · )  , +  ]
[ F -> coeff ( E , E  · )  , *  ]
[ F -> coeff ( E , E  · )  , /  ]
[ F -> coeff ( E , E  · )  , %  ]
}

set 409 = GOTO( set 337 , E ) :
{
[ E -> E  · - T  , )  ]
[ E -> E  · - T  , -  ]
[ E -> E  · - T  , +  ]
[ E -> E  · + T  , )  ]
[ E -> E  · + T  , -  ]
[ E -> E  · + T  , +  ]
[ F -> value ( E , E  · )  , to  ]
[ F -> value ( E , E  · )  , -  ]
[ F -> value ( E , E  · )  , +  ]
[ F -> value ( E , E  · )  , *  ]
[ F -> value ( E , E  · )  , /  ]
[ F -> value ( E , E  · )  , %  ]
}

set 410 = GOTO( set 340 , ) ) :
{
[ F -> coeff ( E , E )  ·  , goto  ]
[ F -> coeff ( E , E )  ·  , -  ]
[ F -> coeff ( E , E )  ·  , +  ]
[ F -> coeff ( E , E )  ·  , *  ]
[ F -> coeff ( E , E )  ·  , /  ]
[ F -> coeff ( E , E )  ·  , %  ]
}

set 411 = GOTO( set 341 , ) ) :
{
[ F -> value ( E , E )  ·  , goto  ]
[ F -> value ( E , E )  ·  , -  ]
[ F -> value ( E , E )  ·  , +  ]
[ F -> value ( E , E )  ·  , *  ]
[ F -> value ( E , E )  ·  , /  ]
[ F -> value ( E , E )  ·  , %  ]
}

set 412 = GOTO( set 342 , ) ) :
{
[ F -> coeff ( E , E )  ·  , ,  ]
[ F -> coeff ( E , E )  ·  , -  ]
[ F -> coeff ( E , E )  ·  , +  ]
[ F -> coeff ( E , E )  ·  , *  ]
[ F -> coeff ( E , E )  ·  , /  ]
[ F -> coeff ( E , E )  ·  , %  ]
}

set 413 = GOTO( set 343 , ) ) :
{
[ F -> value ( E , E )  ·  , ,  ]
[ F -> value ( E , E )  ·  , -  ]
[ F -> value ( E , E )  ·  , +  ]
[ F -> value ( E , E )  ·  , *  ]
[ F -> value ( E , E )  ·  , /  ]
[ F -> value ( E , E )  ·  , %  ]
}

set 414 = GOTO( set 344 , ) ) :
{
[ F -> coeff ( E , E )  ·  , ;  ]
[ F -> coeff ( E , E )  ·  , -  ]
[ F -> coeff ( E , E )  ·  , +  ]
[ F -> coeff ( E , E )  ·  , *  ]
[ F -> coeff ( E , E )  ·  , /  ]
[ F -> coeff ( E , E )  ·  , %  ]
}

set 415 = GOTO( set 345 , ) ) :
{
[ F -> value ( E , E )  ·  , ;  ]
[ F -> value ( E , E )  ·  , -  ]
[ F -> value ( E , E )  ·  , +  ]
[ F -> value ( E , E )  ·  , *  ]
[ F -> value ( E , E )  ·  , /  ]
[ F -> value ( E , E )  ·  , %  ]
}

set 416 = GOTO( set 348 , V ) :
{
[ <op> -> : V  ·  , ;  ]
[ <op> -> : V  ·  , V  ]
[ <op> -> : V  ·  , :  ]
[ <op> -> : V  ·  , let  ]
[ <op> -> : V  ·  , if  ]
[ <op> -> : V  ·  , goto  ]
[ <op> -> : V  ·  , load  ]
[ <op> -> : V  ·  , put  ]
[ <op> -> : V  ·  , switch  ]
[ <op> -> : V  ·  , end  ]
[ <op> -> : V  ·  , break  ]
[ <op> -> : V  ·  , error  ]
[ <op> -> : V  ·  , comment  ]
}

set 417 = GOTO( set 350 , <pr> ) :
{
[ <pr> -> <op> <pr>  ·  , end  ]
[ <pr> -> <op> <pr>  ·  , break  ]
}

set 418 = GOTO( set 351 , <break> ) :
{
[ <default> -> default : <pr> <break>  ·  , end  ]
}

set 419 = GOTO( set 351 , break ) :
{
[ <break> -> break  · ;  , end  ]
}

set 420 = GOTO( set 352 , <listV> ) :
{
[ <op> -> V <listV>  · : TYPE ;  , ;  ]
[ <op> -> V <listV>  · : TYPE ;  , V  ]
[ <op> -> V <listV>  · : TYPE ;  , :  ]
[ <op> -> V <listV>  · : TYPE ;  , let  ]
[ <op> -> V <listV>  · : TYPE ;  , if  ]
[ <op> -> V <listV>  · : TYPE ;  , goto  ]
[ <op> -> V <listV>  · : TYPE ;  , load  ]
[ <op> -> V <listV>  · : TYPE ;  , put  ]
[ <op> -> V <listV>  · : TYPE ;  , switch  ]
[ <op> -> V <listV>  · : TYPE ;  , end  ]
[ <op> -> V <listV>  · : TYPE ;  , break  ]
[ <op> -> V <listV>  · : TYPE ;  , error  ]
[ <op> -> V <listV>  · : TYPE ;  , comment  ]
}

set 421 = GOTO( set 352 , for ) :
{
[ <op> -> V for  · V = E to E <step> <pr> next V  , ;  ]
[ <op> -> V for  · V = E to E <step> <pr> next V  , V  ]
[ <op> -> V for  · V = E to E <step> <pr> next V  , :  ]
[ <op> -> V for  · V = E to E <step> <pr> next V  , let  ]
[ <op> -> V for  · V = E to E <step> <pr> next V  , if  ]
[ <op> -> V for  · V = E to E <step> <pr> next V  , goto  ]
[ <op> -> V for  · V = E to E <step> <pr> next V  , load  ]
[ <op> -> V for  · V = E to E <step> <pr> next V  , put  ]
[ <op> -> V for  · V = E to E <step> <pr> next V  , switch  ]
[ <op> -> V for  · V = E to E <step> <pr> next V  , end  ]
[ <op> -> V for  · V = E to E <step> <pr> next V  , break  ]
[ <op> -> V for  · V = E to E <step> <pr> next V  , error  ]
[ <op> -> V for  · V = E to E <step> <pr> next V  , comment  ]
}

set 422 = GOTO( set 354 , ; ) :
{
[ <op> -> error ;  ·  , ;  ]
[ <op> -> error ;  ·  , V  ]
[ <op> -> error ;  ·  , :  ]
[ <op> -> error ;  ·  , let  ]
[ <op> -> error ;  ·  , if  ]
[ <op> -> error ;  ·  , goto  ]
[ <op> -> error ;  ·  , load  ]
[ <op> -> error ;  ·  , put  ]
[ <op> -> error ;  ·  , switch  ]
[ <op> -> error ;  ·  , end  ]
[ <op> -> error ;  ·  , break  ]
[ <op> -> error ;  ·  , error  ]
[ <op> -> error ;  ·  , comment  ]
}

set 423 = GOTO( set 355 , V ) :
{
[ <op> -> goto V  ·  , ;  ]
[ <op> -> goto V  ·  , V  ]
[ <op> -> goto V  ·  , :  ]
[ <op> -> goto V  ·  , let  ]
[ <op> -> goto V  ·  , if  ]
[ <op> -> goto V  ·  , goto  ]
[ <op> -> goto V  ·  , load  ]
[ <op> -> goto V  ·  , put  ]
[ <op> -> goto V  ·  , switch  ]
[ <op> -> goto V  ·  , end  ]
[ <op> -> goto V  ·  , break  ]
[ <op> -> goto V  ·  , error  ]
[ <op> -> goto V  ·  , comment  ]
}

set 424 = GOTO( set 356 , <test> ) :
{
[ <op> -> if <test>  · goto V <else> ;  , ;  ]
[ <op> -> if <test>  · goto V <else> ;  , V  ]
[ <op> -> if <test>  · goto V <else> ;  , :  ]
[ <op> -> if <test>  · goto V <else> ;  , let  ]
[ <op> -> if <test>  · goto V <else> ;  , if  ]
[ <op> -> if <test>  · goto V <else> ;  , goto  ]
[ <op> -> if <test>  · goto V <else> ;  , load  ]
[ <op> -> if <test>  · goto V <else> ;  , put  ]
[ <op> -> if <test>  · goto V <else> ;  , switch  ]
[ <op> -> if <test>  · goto V <else> ;  , end  ]
[ <op> -> if <test>  · goto V <else> ;  , break  ]
[ <op> -> if <test>  · goto V <else> ;  , error  ]
[ <op> -> if <test>  · goto V <else> ;  , comment  ]
}

set 425 = GOTO( set 357 , V ) :
{
[ <op> -> let V  · <listA>  , ;  ]
[ <op> -> let V  · <listA>  , V  ]
[ <op> -> let V  · <listA>  , :  ]
[ <op> -> let V  · <listA>  , let  ]
[ <op> -> let V  · <listA>  , if  ]
[ <op> -> let V  · <listA>  , goto  ]
[ <op> -> let V  · <listA>  , load  ]
[ <op> -> let V  · <listA>  , put  ]
[ <op> -> let V  · <listA>  , switch  ]
[ <op> -> let V  · <listA>  , end  ]
[ <op> -> let V  · <listA>  , break  ]
[ <op> -> let V  · <listA>  , error  ]
[ <op> -> let V  · <listA>  , comment  ]
[ <listA> ->  · = V <listA>  , ;  ]
[ <listA> ->  · = V <listA>  , V  ]
[ <listA> ->  · = V <listA>  , :  ]
[ <listA> ->  · = V <listA>  , let  ]
[ <listA> ->  · = V <listA>  , if  ]
[ <listA> ->  · = V <listA>  , goto  ]
[ <listA> ->  · = V <listA>  , load  ]
[ <listA> ->  · = V <listA>  , put  ]
[ <listA> ->  · = V <listA>  , switch  ]
[ <listA> ->  · = V <listA>  , end  ]
[ <listA> ->  · = V <listA>  , break  ]
[ <listA> ->  · = V <listA>  , error  ]
[ <listA> ->  · = V <listA>  , comment  ]
[ <listA> ->  · = E ;  , ;  ]
[ <listA> ->  · = E ;  , V  ]
[ <listA> ->  · = E ;  , :  ]
[ <listA> ->  · = E ;  , let  ]
[ <listA> ->  · = E ;  , if  ]
[ <listA> ->  · = E ;  , goto  ]
[ <listA> ->  · = E ;  , load  ]
[ <listA> ->  · = E ;  , put  ]
[ <listA> ->  · = E ;  , switch  ]
[ <listA> ->  · = E ;  , end  ]
[ <listA> ->  · = E ;  , break  ]
[ <listA> ->  · = E ;  , error  ]
[ <listA> ->  · = E ;  , comment  ]
}

set 426 = GOTO( set 358 , ( ) :
{
[ <op> -> load (  · V <listV> ) ;  , ;  ]
[ <op> -> load (  · V <listV> ) ;  , V  ]
[ <op> -> load (  · V <listV> ) ;  , :  ]
[ <op> -> load (  · V <listV> ) ;  , let  ]
[ <op> -> load (  · V <listV> ) ;  , if  ]
[ <op> -> load (  · V <listV> ) ;  , goto  ]
[ <op> -> load (  · V <listV> ) ;  , load  ]
[ <op> -> load (  · V <listV> ) ;  , put  ]
[ <op> -> load (  · V <listV> ) ;  , switch  ]
[ <op> -> load (  · V <listV> ) ;  , end  ]
[ <op> -> load (  · V <listV> ) ;  , break  ]
[ <op> -> load (  · V <listV> ) ;  , error  ]
[ <op> -> load (  · V <listV> ) ;  , comment  ]
}

set 427 = GOTO( set 359 , ( ) :
{
[ <op> -> put (  · E <listE> ) ;  , ;  ]
[ <op> -> put (  · E <listE> ) ;  , V  ]
[ <op> -> put (  · E <listE> ) ;  , :  ]
[ <op> -> put (  · E <listE> ) ;  , let  ]
[ <op> -> put (  · E <listE> ) ;  , if  ]
[ <op> -> put (  · E <listE> ) ;  , goto  ]
[ <op> -> put (  · E <listE> ) ;  , load  ]
[ <op> -> put (  · E <listE> ) ;  , put  ]
[ <op> -> put (  · E <listE> ) ;  , switch  ]
[ <op> -> put (  · E <listE> ) ;  , end  ]
[ <op> -> put (  · E <listE> ) ;  , break  ]
[ <op> -> put (  · E <listE> ) ;  , error  ]
[ <op> -> put (  · E <listE> ) ;  , comment  ]
[ E ->  · E - T  , ,  ]
[ E ->  · E - T  , )  ]
[ E ->  · E - T  , -  ]
[ E ->  · E - T  , +  ]
[ E ->  · E + T  , ,  ]
[ E ->  · E + T  , )  ]
[ E ->  · E + T  , -  ]
[ E ->  · E + T  , +  ]
[ E ->  · T  , ,  ]
[ E ->  · T  , )  ]
[ E ->  · T  , -  ]
[ E ->  · T  , +  ]
[ T ->  · T * F  , ,  ]
[ T ->  · T * F  , )  ]
[ T ->  · T * F  , -  ]
[ T ->  · T * F  , +  ]
[ T ->  · T * F  , *  ]
[ T ->  · T * F  , /  ]
[ T ->  · T * F  , %  ]
[ T ->  · T / F  , ,  ]
[ T ->  · T / F  , )  ]
[ T ->  · T / F  , -  ]
[ T ->  · T / F  , +  ]
[ T ->  · T / F  , *  ]
[ T ->  · T / F  , /  ]
[ T ->  · T / F  , %  ]
[ T ->  · T % F  , ,  ]
[ T ->  · T % F  , )  ]
[ T ->  · T % F  , -  ]
[ T ->  · T % F  , +  ]
[ T ->  · T % F  , *  ]
[ T ->  · T % F  , /  ]
[ T ->  · T % F  , %  ]
[ T ->  · F  , ,  ]
[ T ->  · F  , )  ]
[ T ->  · F  , -  ]
[ T ->  · F  , +  ]
[ T ->  · F  , *  ]
[ T ->  · F  , /  ]
[ T ->  · F  , %  ]
[ F ->  · V  , ,  ]
[ F ->  · V  , )  ]
[ F ->  · V  , -  ]
[ F ->  · V  , +  ]
[ F ->  · V  , *  ]
[ F ->  · V  , /  ]
[ F ->  · V  , %  ]
[ F ->  · ( E )  , ,  ]
[ F ->  · ( E )  , )  ]
[ F ->  · ( E )  , -  ]
[ F ->  · ( E )  , +  ]
[ F ->  · ( E )  , *  ]
[ F ->  · ( E )  , /  ]
[ F ->  · ( E )  , %  ]
[ F ->  · C  , ,  ]
[ F ->  · C  , )  ]
[ F ->  · C  , -  ]
[ F ->  · C  , +  ]
[ F ->  · C  , *  ]
[ F ->  · C  , /  ]
[ F ->  · C  , %  ]
[ F ->  · value ( E , E )  , ,  ]
[ F ->  · value ( E , E )  , )  ]
[ F ->  · value ( E , E )  , -  ]
[ F ->  · value ( E , E )  , +  ]
[ F ->  · value ( E , E )  , *  ]
[ F ->  · value ( E , E )  , /  ]
[ F ->  · value ( E , E )  , %  ]
[ F ->  · derivative ( E )  , ,  ]
[ F ->  · derivative ( E )  , )  ]
[ F ->  · derivative ( E )  , -  ]
[ F ->  · derivative ( E )  , +  ]
[ F ->  · derivative ( E )  , *  ]
[ F ->  · derivative ( E )  , /  ]
[ F ->  · derivative ( E )  , %  ]
[ F ->  · coeff ( E , E )  , ,  ]
[ F ->  · coeff ( E , E )  , )  ]
[ F ->  · coeff ( E , E )  , -  ]
[ F ->  · coeff ( E , E )  , +  ]
[ F ->  · coeff ( E , E )  , *  ]
[ F ->  · coeff ( E , E )  , /  ]
[ F ->  · coeff ( E , E )  , %  ]
[ F ->  · deg ( E )  , ,  ]
[ F ->  · deg ( E )  , )  ]
[ F ->  · deg ( E )  , -  ]
[ F ->  · deg ( E )  , +  ]
[ F ->  · deg ( E )  , *  ]
[ F ->  · deg ( E )  , /  ]
[ F ->  · deg ( E )  , %  ]
}

set 428 = GOTO( set 360 , ( ) :
{
[ <op> -> switch (  · E ) <switch_body> end switch ;  , ;  ]
[ <op> -> switch (  · E ) <switch_body> end switch ;  , V  ]
[ <op> -> switch (  · E ) <switch_body> end switch ;  , :  ]
[ <op> -> switch (  · E ) <switch_body> end switch ;  , let  ]
[ <op> -> switch (  · E ) <switch_body> end switch ;  , if  ]
[ <op> -> switch (  · E ) <switch_body> end switch ;  , goto  ]
[ <op> -> switch (  · E ) <switch_body> end switch ;  , load  ]
[ <op> -> switch (  · E ) <switch_body> end switch ;  , put  ]
[ <op> -> switch (  · E ) <switch_body> end switch ;  , switch  ]
[ <op> -> switch (  · E ) <switch_body> end switch ;  , end  ]
[ <op> -> switch (  · E ) <switch_body> end switch ;  , break  ]
[ <op> -> switch (  · E ) <switch_body> end switch ;  , error  ]
[ <op> -> switch (  · E ) <switch_body> end switch ;  , comment  ]
[ E ->  · E - T  , )  ]
[ E ->  · E - T  , -  ]
[ E ->  · E - T  , +  ]
[ E ->  · E + T  , )  ]
[ E ->  · E + T  , -  ]
[ E ->  · E + T  , +  ]
[ E ->  · T  , )  ]
[ E ->  · T  , -  ]
[ E ->  · T  , +  ]
[ T ->  · T * F  , )  ]
[ T ->  · T * F  , -  ]
[ T ->  · T * F  , +  ]
[ T ->  · T * F  , *  ]
[ T ->  · T * F  , /  ]
[ T ->  · T * F  , %  ]
[ T ->  · T / F  , )  ]
[ T ->  · T / F  , -  ]
[ T ->  · T / F  , +  ]
[ T ->  · T / F  , *  ]
[ T ->  · T / F  , /  ]
[ T ->  · T / F  , %  ]
[ T ->  · T % F  , )  ]
[ T ->  · T % F  , -  ]
[ T ->  · T % F  , +  ]
[ T ->  · T % F  , *  ]
[ T ->  · T % F  , /  ]
[ T ->  · T % F  , %  ]
[ T ->  · F  , )  ]
[ T ->  · F  , -  ]
[ T ->  · F  , +  ]
[ T ->  · F  , *  ]
[ T ->  · F  , /  ]
[ T ->  · F  , %  ]
[ F ->  · V  , )  ]
[ F ->  · V  , -  ]
[ F ->  · V  , +  ]
[ F ->  · V  , *  ]
[ F ->  · V  , /  ]
[ F ->  · V  , %  ]
[ F ->  · ( E )  , )  ]
[ F ->  · ( E )  , -  ]
[ F ->  · ( E )  , +  ]
[ F ->  · ( E )  , *  ]
[ F ->  · ( E )  , /  ]
[ F ->  · ( E )  , %  ]
[ F ->  · C  , )  ]
[ F ->  · C  , -  ]
[ F ->  · C  , +  ]
[ F ->  · C  , *  ]
[ F ->  · C  , /  ]
[ F ->  · C  , %  ]
[ F ->  · value ( E , E )  , )  ]
[ F ->  · value ( E , E )  , -  ]
[ F ->  · value ( E , E )  , +  ]
[ F ->  · value ( E , E )  , *  ]
[ F ->  · value ( E , E )  , /  ]
[ F ->  · value ( E , E )  , %  ]
[ F ->  · derivative ( E )  , )  ]
[ F ->  · derivative ( E )  , -  ]
[ F ->  · derivative ( E )  , +  ]
[ F ->  · derivative ( E )  , *  ]
[ F ->  · derivative ( E )  , /  ]
[ F ->  · derivative ( E )  , %  ]
[ F ->  · coeff ( E , E )  , )  ]
[ F ->  · coeff ( E , E )  , -  ]
[ F ->  · coeff ( E , E )  , +  ]
[ F ->  · coeff ( E , E )  , *  ]
[ F ->  · coeff ( E , E )  , /  ]
[ F ->  · coeff ( E , E )  , %  ]
[ F ->  · deg ( E )  , )  ]
[ F ->  · deg ( E )  , -  ]
[ F ->  · deg ( E )  , +  ]
[ F ->  · deg ( E )  , *  ]
[ F ->  · deg ( E )  , /  ]
[ F ->  · deg ( E )  , %  ]
}

set 429 = GOTO( set 362 , V ) :
{
[ <op> -> : V  ·  , ;  ]
[ <op> -> : V  ·  , V  ]
[ <op> -> : V  ·  , :  ]
[ <op> -> : V  ·  , let  ]
[ <op> -> : V  ·  , if  ]
[ <op> -> : V  ·  , goto  ]
[ <op> -> : V  ·  , load  ]
[ <op> -> : V  ·  , put  ]
[ <op> -> : V  ·  , switch  ]
[ <op> -> : V  ·  , end  ]
[ <op> -> : V  ·  , case  ]
[ <op> -> : V  ·  , break  ]
[ <op> -> : V  ·  , default  ]
[ <op> -> : V  ·  , error  ]
[ <op> -> : V  ·  , comment  ]
}

set 430 = GOTO( set 364 , <pr> ) :
{
[ <pr> -> <op> <pr>  ·  , end  ]
[ <pr> -> <op> <pr>  ·  , case  ]
[ <pr> -> <op> <pr>  ·  , break  ]
[ <pr> -> <op> <pr>  ·  , default  ]
}

set 431 = GOTO( set 365 , <break> ) :
{
[ <list_case> ->  ·  , end  ]
[ <list_case> ->  ·  , default  ]
[ <list_case> ->  · case C : <pr> <break> <list_case>  , end  ]
[ <list_case> ->  · case C : <pr> <break> <list_case>  , default  ]
[ <list_case> -> case C : <pr> <break>  · <list_case>  , end  ]
[ <list_case> -> case C : <pr> <break>  · <list_case>  , default  ]
}

set 432 = GOTO( set 365 , break ) :
{
[ <break> -> break  · ;  , end  ]
[ <break> -> break  · ;  , case  ]
[ <break> -> break  · ;  , default  ]
}

set 433 = GOTO( set 366 , <listV> ) :
{
[ <op> -> V <listV>  · : TYPE ;  , ;  ]
[ <op> -> V <listV>  · : TYPE ;  , V  ]
[ <op> -> V <listV>  · : TYPE ;  , :  ]
[ <op> -> V <listV>  · : TYPE ;  , let  ]
[ <op> -> V <listV>  · : TYPE ;  , if  ]
[ <op> -> V <listV>  · : TYPE ;  , goto  ]
[ <op> -> V <listV>  · : TYPE ;  , load  ]
[ <op> -> V <listV>  · : TYPE ;  , put  ]
[ <op> -> V <listV>  · : TYPE ;  , switch  ]
[ <op> -> V <listV>  · : TYPE ;  , end  ]
[ <op> -> V <listV>  · : TYPE ;  , case  ]
[ <op> -> V <listV>  · : TYPE ;  , break  ]
[ <op> -> V <listV>  · : TYPE ;  , default  ]
[ <op> -> V <listV>  · : TYPE ;  , error  ]
[ <op> -> V <listV>  · : TYPE ;  , comment  ]
}

set 434 = GOTO( set 366 , for ) :
{
[ <op> -> V for  · V = E to E <step> <pr> next V  , ;  ]
[ <op> -> V for  · V = E to E <step> <pr> next V  , V  ]
[ <op> -> V for  · V = E to E <step> <pr> next V  , :  ]
[ <op> -> V for  · V = E to E <step> <pr> next V  , let  ]
[ <op> -> V for  · V = E to E <step> <pr> next V  , if  ]
[ <op> -> V for  · V = E to E <step> <pr> next V  , goto  ]
[ <op> -> V for  · V = E to E <step> <pr> next V  , load  ]
[ <op> -> V for  · V = E to E <step> <pr> next V  , put  ]
[ <op> -> V for  · V = E to E <step> <pr> next V  , switch  ]
[ <op> -> V for  · V = E to E <step> <pr> next V  , end  ]
[ <op> -> V for  · V = E to E <step> <pr> next V  , case  ]
[ <op> -> V for  · V = E to E <step> <pr> next V  , break  ]
[ <op> -> V for  · V = E to E <step> <pr> next V  , default  ]
[ <op> -> V for  · V = E to E <step> <pr> next V  , error  ]
[ <op> -> V for  · V = E to E <step> <pr> next V  , comment  ]
}

set 435 = GOTO( set 368 , ; ) :
{
[ <op> -> error ;  ·  , ;  ]
[ <op> -> error ;  ·  , V  ]
[ <op> -> error ;  ·  , :  ]
[ <op> -> error ;  ·  , let  ]
[ <op> -> error ;  ·  , if  ]
[ <op> -> error ;  ·  , goto  ]
[ <op> -> error ;  ·  , load  ]
[ <op> -> error ;  ·  , put  ]
[ <op> -> error ;  ·  , switch  ]
[ <op> -> error ;  ·  , end  ]
[ <op> -> error ;  ·  , case  ]
[ <op> -> error ;  ·  , break  ]
[ <op> -> error ;  ·  , default  ]
[ <op> -> error ;  ·  , error  ]
[ <op> -> error ;  ·  , comment  ]
}

set 436 = GOTO( set 369 , V ) :
{
[ <op> -> goto V  ·  , ;  ]
[ <op> -> goto V  ·  , V  ]
[ <op> -> goto V  ·  , :  ]
[ <op> -> goto V  ·  , let  ]
[ <op> -> goto V  ·  , if  ]
[ <op> -> goto V  ·  , goto  ]
[ <op> -> goto V  ·  , load  ]
[ <op> -> goto V  ·  , put  ]
[ <op> -> goto V  ·  , switch  ]
[ <op> -> goto V  ·  , end  ]
[ <op> -> goto V  ·  , case  ]
[ <op> -> goto V  ·  , break  ]
[ <op> -> goto V  ·  , default  ]
[ <op> -> goto V  ·  , error  ]
[ <op> -> goto V  ·  , comment  ]
}

set 437 = GOTO( set 370 , <test> ) :
{
[ <op> -> if <test>  · goto V <else> ;  , ;  ]
[ <op> -> if <test>  · goto V <else> ;  , V  ]
[ <op> -> if <test>  · goto V <else> ;  , :  ]
[ <op> -> if <test>  · goto V <else> ;  , let  ]
[ <op> -> if <test>  · goto V <else> ;  , if  ]
[ <op> -> if <test>  · goto V <else> ;  , goto  ]
[ <op> -> if <test>  · goto V <else> ;  , load  ]
[ <op> -> if <test>  · goto V <else> ;  , put  ]
[ <op> -> if <test>  · goto V <else> ;  , switch  ]
[ <op> -> if <test>  · goto V <else> ;  , end  ]
[ <op> -> if <test>  · goto V <else> ;  , case  ]
[ <op> -> if <test>  · goto V <else> ;  , break  ]
[ <op> -> if <test>  · goto V <else> ;  , default  ]
[ <op> -> if <test>  · goto V <else> ;  , error  ]
[ <op> -> if <test>  · goto V <else> ;  , comment  ]
}

set 438 = GOTO( set 371 , V ) :
{
[ <op> -> let V  · <listA>  , ;  ]
[ <op> -> let V  · <listA>  , V  ]
[ <op> -> let V  · <listA>  , :  ]
[ <op> -> let V  · <listA>  , let  ]
[ <op> -> let V  · <listA>  , if  ]
[ <op> -> let V  · <listA>  , goto  ]
[ <op> -> let V  · <listA>  , load  ]
[ <op> -> let V  · <listA>  , put  ]
[ <op> -> let V  · <listA>  , switch  ]
[ <op> -> let V  · <listA>  , end  ]
[ <op> -> let V  · <listA>  , case  ]
[ <op> -> let V  · <listA>  , break  ]
[ <op> -> let V  · <listA>  , default  ]
[ <op> -> let V  · <listA>  , error  ]
[ <op> -> let V  · <listA>  , comment  ]
[ <listA> ->  · = V <listA>  , ;  ]
[ <listA> ->  · = V <listA>  , V  ]
[ <listA> ->  · = V <listA>  , :  ]
[ <listA> ->  · = V <listA>  , let  ]
[ <listA> ->  · = V <listA>  , if  ]
[ <listA> ->  · = V <listA>  , goto  ]
[ <listA> ->  · = V <listA>  , load  ]
[ <listA> ->  · = V <listA>  , put  ]
[ <listA> ->  · = V <listA>  , switch  ]
[ <listA> ->  · = V <listA>  , end  ]
[ <listA> ->  · = V <listA>  , case  ]
[ <listA> ->  · = V <listA>  , break  ]
[ <listA> ->  · = V <listA>  , default  ]
[ <listA> ->  · = V <listA>  , error  ]
[ <listA> ->  · = V <listA>  , comment  ]
[ <listA> ->  · = E ;  , ;  ]
[ <listA> ->  · = E ;  , V  ]
[ <listA> ->  · = E ;  , :  ]
[ <listA> ->  · = E ;  , let  ]
[ <listA> ->  · = E ;  , if  ]
[ <listA> ->  · = E ;  , goto  ]
[ <listA> ->  · = E ;  , load  ]
[ <listA> ->  · = E ;  , put  ]
[ <listA> ->  · = E ;  , switch  ]
[ <listA> ->  · = E ;  , end  ]
[ <listA> ->  · = E ;  , case  ]
[ <listA> ->  · = E ;  , break  ]
[ <listA> ->  · = E ;  , default  ]
[ <listA> ->  · = E ;  , error  ]
[ <listA> ->  · = E ;  , comment  ]
}

set 439 = GOTO( set 372 , ( ) :
{
[ <op> -> load (  · V <listV> ) ;  , ;  ]
[ <op> -> load (  · V <listV> ) ;  , V  ]
[ <op> -> load (  · V <listV> ) ;  , :  ]
[ <op> -> load (  · V <listV> ) ;  , let  ]
[ <op> -> load (  · V <listV> ) ;  , if  ]
[ <op> -> load (  · V <listV> ) ;  , goto  ]
[ <op> -> load (  · V <listV> ) ;  , load  ]
[ <op> -> load (  · V <listV> ) ;  , put  ]
[ <op> -> load (  · V <listV> ) ;  , switch  ]
[ <op> -> load (  · V <listV> ) ;  , end  ]
[ <op> -> load (  · V <listV> ) ;  , case  ]
[ <op> -> load (  · V <listV> ) ;  , break  ]
[ <op> -> load (  · V <listV> ) ;  , default  ]
[ <op> -> load (  · V <listV> ) ;  , error  ]
[ <op> -> load (  · V <listV> ) ;  , comment  ]
}

set 440 = GOTO( set 373 , ( ) :
{
[ <op> -> put (  · E <listE> ) ;  , ;  ]
[ <op> -> put (  · E <listE> ) ;  , V  ]
[ <op> -> put (  · E <listE> ) ;  , :  ]
[ <op> -> put (  · E <listE> ) ;  , let  ]
[ <op> -> put (  · E <listE> ) ;  , if  ]
[ <op> -> put (  · E <listE> ) ;  , goto  ]
[ <op> -> put (  · E <listE> ) ;  , load  ]
[ <op> -> put (  · E <listE> ) ;  , put  ]
[ <op> -> put (  · E <listE> ) ;  , switch  ]
[ <op> -> put (  · E <listE> ) ;  , end  ]
[ <op> -> put (  · E <listE> ) ;  , case  ]
[ <op> -> put (  · E <listE> ) ;  , break  ]
[ <op> -> put (  · E <listE> ) ;  , default  ]
[ <op> -> put (  · E <listE> ) ;  , error  ]
[ <op> -> put (  · E <listE> ) ;  , comment  ]
[ E ->  · E - T  , ,  ]
[ E ->  · E - T  , )  ]
[ E ->  · E - T  , -  ]
[ E ->  · E - T  , +  ]
[ E ->  · E + T  , ,  ]
[ E ->  · E + T  , )  ]
[ E ->  · E + T  , -  ]
[ E ->  · E + T  , +  ]
[ E ->  · T  , ,  ]
[ E ->  · T  , )  ]
[ E ->  · T  , -  ]
[ E ->  · T  , +  ]
[ T ->  · T * F  , ,  ]
[ T ->  · T * F  , )  ]
[ T ->  · T * F  , -  ]
[ T ->  · T * F  , +  ]
[ T ->  · T * F  , *  ]
[ T ->  · T * F  , /  ]
[ T ->  · T * F  , %  ]
[ T ->  · T / F  , ,  ]
[ T ->  · T / F  , )  ]
[ T ->  · T / F  , -  ]
[ T ->  · T / F  , +  ]
[ T ->  · T / F  , *  ]
[ T ->  · T / F  , /  ]
[ T ->  · T / F  , %  ]
[ T ->  · T % F  , ,  ]
[ T ->  · T % F  , )  ]
[ T ->  · T % F  , -  ]
[ T ->  · T % F  , +  ]
[ T ->  · T % F  , *  ]
[ T ->  · T % F  , /  ]
[ T ->  · T % F  , %  ]
[ T ->  · F  , ,  ]
[ T ->  · F  , )  ]
[ T ->  · F  , -  ]
[ T ->  · F  , +  ]
[ T ->  · F  , *  ]
[ T ->  · F  , /  ]
[ T ->  · F  , %  ]
[ F ->  · V  , ,  ]
[ F ->  · V  , )  ]
[ F ->  · V  , -  ]
[ F ->  · V  , +  ]
[ F ->  · V  , *  ]
[ F ->  · V  , /  ]
[ F ->  · V  , %  ]
[ F ->  · ( E )  , ,  ]
[ F ->  · ( E )  , )  ]
[ F ->  · ( E )  , -  ]
[ F ->  · ( E )  , +  ]
[ F ->  · ( E )  , *  ]
[ F ->  · ( E )  , /  ]
[ F ->  · ( E )  , %  ]
[ F ->  · C  , ,  ]
[ F ->  · C  , )  ]
[ F ->  · C  , -  ]
[ F ->  · C  , +  ]
[ F ->  · C  , *  ]
[ F ->  · C  , /  ]
[ F ->  · C  , %  ]
[ F ->  · value ( E , E )  , ,  ]
[ F ->  · value ( E , E )  , )  ]
[ F ->  · value ( E , E )  , -  ]
[ F ->  · value ( E , E )  , +  ]
[ F ->  · value ( E , E )  , *  ]
[ F ->  · value ( E , E )  , /  ]
[ F ->  · value ( E , E )  , %  ]
[ F ->  · derivative ( E )  , ,  ]
[ F ->  · derivative ( E )  , )  ]
[ F ->  · derivative ( E )  , -  ]
[ F ->  · derivative ( E )  , +  ]
[ F ->  · derivative ( E )  , *  ]
[ F ->  · derivative ( E )  , /  ]
[ F ->  · derivative ( E )  , %  ]
[ F ->  · coeff ( E , E )  , ,  ]
[ F ->  · coeff ( E , E )  , )  ]
[ F ->  · coeff ( E , E )  , -  ]
[ F ->  · coeff ( E , E )  , +  ]
[ F ->  · coeff ( E , E )  , *  ]
[ F ->  · coeff ( E , E )  , /  ]
[ F ->  · coeff ( E , E )  , %  ]
[ F ->  · deg ( E )  , ,  ]
[ F ->  · deg ( E )  , )  ]
[ F ->  · deg ( E )  , -  ]
[ F ->  · deg ( E )  , +  ]
[ F ->  · deg ( E )  , *  ]
[ F ->  · deg ( E )  , /  ]
[ F ->  · deg ( E )  , %  ]
}

set 441 = GOTO( set 374 , ( ) :
{
[ <op> -> switch (  · E ) <switch_body> end switch ;  , ;  ]
[ <op> -> switch (  · E ) <switch_body> end switch ;  , V  ]
[ <op> -> switch (  · E ) <switch_body> end switch ;  , :  ]
[ <op> -> switch (  · E ) <switch_body> end switch ;  , let  ]
[ <op> -> switch (  · E ) <switch_body> end switch ;  , if  ]
[ <op> -> switch (  · E ) <switch_body> end switch ;  , goto  ]
[ <op> -> switch (  · E ) <switch_body> end switch ;  , load  ]
[ <op> -> switch (  · E ) <switch_body> end switch ;  , put  ]
[ <op> -> switch (  · E ) <switch_body> end switch ;  , switch  ]
[ <op> -> switch (  · E ) <switch_body> end switch ;  , end  ]
[ <op> -> switch (  · E ) <switch_body> end switch ;  , case  ]
[ <op> -> switch (  · E ) <switch_body> end switch ;  , break  ]
[ <op> -> switch (  · E ) <switch_body> end switch ;  , default  ]
[ <op> -> switch (  · E ) <switch_body> end switch ;  , error  ]
[ <op> -> switch (  · E ) <switch_body> end switch ;  , comment  ]
[ E ->  · E - T  , )  ]
[ E ->  · E - T  , -  ]
[ E ->  · E - T  , +  ]
[ E ->  · E + T  , )  ]
[ E ->  · E + T  , -  ]
[ E ->  · E + T  , +  ]
[ E ->  · T  , )  ]
[ E ->  · T  , -  ]
[ E ->  · T  , +  ]
[ T ->  · T * F  , )  ]
[ T ->  · T * F  , -  ]
[ T ->  · T * F  , +  ]
[ T ->  · T * F  , *  ]
[ T ->  · T * F  , /  ]
[ T ->  · T * F  , %  ]
[ T ->  · T / F  , )  ]
[ T ->  · T / F  , -  ]
[ T ->  · T / F  , +  ]
[ T ->  · T / F  , *  ]
[ T ->  · T / F  , /  ]
[ T ->  · T / F  , %  ]
[ T ->  · T % F  , )  ]
[ T ->  · T % F  , -  ]
[ T ->  · T % F  , +  ]
[ T ->  · T % F  , *  ]
[ T ->  · T % F  , /  ]
[ T ->  · T % F  , %  ]
[ T ->  · F  , )  ]
[ T ->  · F  , -  ]
[ T ->  · F  , +  ]
[ T ->  · F  , *  ]
[ T ->  · F  , /  ]
[ T ->  · F  , %  ]
[ F ->  · V  , )  ]
[ F ->  · V  , -  ]
[ F ->  · V  , +  ]
[ F ->  · V  , *  ]
[ F ->  · V  , /  ]
[ F ->  · V  , %  ]
[ F ->  · ( E )  , )  ]
[ F ->  · ( E )  , -  ]
[ F ->  · ( E )  , +  ]
[ F ->  · ( E )  , *  ]
[ F ->  · ( E )  , /  ]
[ F ->  · ( E )  , %  ]
[ F ->  · C  , )  ]
[ F ->  · C  , -  ]
[ F ->  · C  , +  ]
[ F ->  · C  , *  ]
[ F ->  · C  , /  ]
[ F ->  · C  , %  ]
[ F ->  · value ( E , E )  , )  ]
[ F ->  · value ( E , E )  , -  ]
[ F ->  · value ( E , E )  , +  ]
[ F ->  · value ( E , E )  , *  ]
[ F ->  · value ( E , E )  , /  ]
[ F ->  · value ( E , E )  , %  ]
[ F ->  · derivative ( E )  , )  ]
[ F ->  · derivative ( E )  , -  ]
[ F ->  · derivative ( E )  , +  ]
[ F ->  · derivative ( E )  , *  ]
[ F ->  · derivative ( E )  , /  ]
[ F ->  · derivative ( E )  , %  ]
[ F ->  · coeff ( E , E )  , )  ]
[ F ->  · coeff ( E , E )  , -  ]
[ F ->  · coeff ( E , E )  , +  ]
[ F ->  · coeff ( E , E )  , *  ]
[ F ->  · coeff ( E , E )  , /  ]
[ F ->  · coeff ( E , E )  , %  ]
[ F ->  · deg ( E )  , )  ]
[ F ->  · deg ( E )  , -  ]
[ F ->  · deg ( E )  , +  ]
[ F ->  · deg ( E )  , *  ]
[ F ->  · deg ( E )  , /  ]
[ F ->  · deg ( E )  , %  ]
}

set 442 = GOTO( set 378 , V ) :
{
[ <op> -> : V  ·  , ;  ]
[ <op> -> : V  ·  , V  ]
[ <op> -> : V  ·  , :  ]
[ <op> -> : V  ·  , let  ]
[ <op> -> : V  ·  , next  ]
[ <op> -> : V  ·  , if  ]
[ <op> -> : V  ·  , goto  ]
[ <op> -> : V  ·  , load  ]
[ <op> -> : V  ·  , put  ]
[ <op> -> : V  ·  , switch  ]
[ <op> -> : V  ·  , error  ]
[ <op> -> : V  ·  , comment  ]
}

set 443 = GOTO( set 380 , <pr> ) :
{
[ <pr> -> <op> <pr>  ·  , next  ]
}

set 444 = GOTO( set 381 , next ) :
{
[ <op> -> V for V = E to E <step> <pr> next  · V  ,  ]
[ <op> -> V for V = E to E <step> <pr> next  · V  , ;  ]
[ <op> -> V for V = E to E <step> <pr> next  · V  , V  ]
[ <op> -> V for V = E to E <step> <pr> next  · V  , :  ]
[ <op> -> V for V = E to E <step> <pr> next  · V  , let  ]
[ <op> -> V for V = E to E <step> <pr> next  · V  , if  ]
[ <op> -> V for V = E to E <step> <pr> next  · V  , goto  ]
[ <op> -> V for V = E to E <step> <pr> next  · V  , load  ]
[ <op> -> V for V = E to E <step> <pr> next  · V  , put  ]
[ <op> -> V for V = E to E <step> <pr> next  · V  , switch  ]
[ <op> -> V for V = E to E <step> <pr> next  · V  , error  ]
[ <op> -> V for V = E to E <step> <pr> next  · V  , comment  ]
}

set 445 = GOTO( set 382 , <listV> ) :
{
[ <op> -> V <listV>  · : TYPE ;  , ;  ]
[ <op> -> V <listV>  · : TYPE ;  , V  ]
[ <op> -> V <listV>  · : TYPE ;  , :  ]
[ <op> -> V <listV>  · : TYPE ;  , let  ]
[ <op> -> V <listV>  · : TYPE ;  , next  ]
[ <op> -> V <listV>  · : TYPE ;  , if  ]
[ <op> -> V <listV>  · : TYPE ;  , goto  ]
[ <op> -> V <listV>  · : TYPE ;  , load  ]
[ <op> -> V <listV>  · : TYPE ;  , put  ]
[ <op> -> V <listV>  · : TYPE ;  , switch  ]
[ <op> -> V <listV>  · : TYPE ;  , error  ]
[ <op> -> V <listV>  · : TYPE ;  , comment  ]
}

set 446 = GOTO( set 382 , for ) :
{
[ <op> -> V for  · V = E to E <step> <pr> next V  , ;  ]
[ <op> -> V for  · V = E to E <step> <pr> next V  , V  ]
[ <op> -> V for  · V = E to E <step> <pr> next V  , :  ]
[ <op> -> V for  · V = E to E <step> <pr> next V  , let  ]
[ <op> -> V for  · V = E to E <step> <pr> next V  , next  ]
[ <op> -> V for  · V = E to E <step> <pr> next V  , if  ]
[ <op> -> V for  · V = E to E <step> <pr> next V  , goto  ]
[ <op> -> V for  · V = E to E <step> <pr> next V  , load  ]
[ <op> -> V for  · V = E to E <step> <pr> next V  , put  ]
[ <op> -> V for  · V = E to E <step> <pr> next V  , switch  ]
[ <op> -> V for  · V = E to E <step> <pr> next V  , error  ]
[ <op> -> V for  · V = E to E <step> <pr> next V  , comment  ]
}

set 447 = GOTO( set 384 , ; ) :
{
[ <op> -> error ;  ·  , ;  ]
[ <op> -> error ;  ·  , V  ]
[ <op> -> error ;  ·  , :  ]
[ <op> -> error ;  ·  , let  ]
[ <op> -> error ;  ·  , next  ]
[ <op> -> error ;  ·  , if  ]
[ <op> -> error ;  ·  , goto  ]
[ <op> -> error ;  ·  , load  ]
[ <op> -> error ;  ·  , put  ]
[ <op> -> error ;  ·  , switch  ]
[ <op> -> error ;  ·  , error  ]
[ <op> -> error ;  ·  , comment  ]
}

set 448 = GOTO( set 385 , V ) :
{
[ <op> -> goto V  ·  , ;  ]
[ <op> -> goto V  ·  , V  ]
[ <op> -> goto V  ·  , :  ]
[ <op> -> goto V  ·  , let  ]
[ <op> -> goto V  ·  , next  ]
[ <op> -> goto V  ·  , if  ]
[ <op> -> goto V  ·  , goto  ]
[ <op> -> goto V  ·  , load  ]
[ <op> -> goto V  ·  , put  ]
[ <op> -> goto V  ·  , switch  ]
[ <op> -> goto V  ·  , error  ]
[ <op> -> goto V  ·  , comment  ]
}

set 449 = GOTO( set 386 , <test> ) :
{
[ <op> -> if <test>  · goto V <else> ;  , ;  ]
[ <op> -> if <test>  · goto V <else> ;  , V  ]
[ <op> -> if <test>  · goto V <else> ;  , :  ]
[ <op> -> if <test>  · goto V <else> ;  , let  ]
[ <op> -> if <test>  · goto V <else> ;  , next  ]
[ <op> -> if <test>  · goto V <else> ;  , if  ]
[ <op> -> if <test>  · goto V <else> ;  , goto  ]
[ <op> -> if <test>  · goto V <else> ;  , load  ]
[ <op> -> if <test>  · goto V <else> ;  , put  ]
[ <op> -> if <test>  · goto V <else> ;  , switch  ]
[ <op> -> if <test>  · goto V <else> ;  , error  ]
[ <op> -> if <test>  · goto V <else> ;  , comment  ]
}

set 450 = GOTO( set 387 , V ) :
{
[ <op> -> let V  · <listA>  , ;  ]
[ <op> -> let V  · <listA>  , V  ]
[ <op> -> let V  · <listA>  , :  ]
[ <op> -> let V  · <listA>  , let  ]
[ <op> -> let V  · <listA>  , next  ]
[ <op> -> let V  · <listA>  , if  ]
[ <op> -> let V  · <listA>  , goto  ]
[ <op> -> let V  · <listA>  , load  ]
[ <op> -> let V  · <listA>  , put  ]
[ <op> -> let V  · <listA>  , switch  ]
[ <op> -> let V  · <listA>  , error  ]
[ <op> -> let V  · <listA>  , comment  ]
[ <listA> ->  · = V <listA>  , ;  ]
[ <listA> ->  · = V <listA>  , V  ]
[ <listA> ->  · = V <listA>  , :  ]
[ <listA> ->  · = V <listA>  , let  ]
[ <listA> ->  · = V <listA>  , next  ]
[ <listA> ->  · = V <listA>  , if  ]
[ <listA> ->  · = V <listA>  , goto  ]
[ <listA> ->  · = V <listA>  , load  ]
[ <listA> ->  · = V <listA>  , put  ]
[ <listA> ->  · = V <listA>  , switch  ]
[ <listA> ->  · = V <listA>  , error  ]
[ <listA> ->  · = V <listA>  , comment  ]
[ <listA> ->  · = E ;  , ;  ]
[ <listA> ->  · = E ;  , V  ]
[ <listA> ->  · = E ;  , :  ]
[ <listA> ->  · = E ;  , let  ]
[ <listA> ->  · = E ;  , next  ]
[ <listA> ->  · = E ;  , if  ]
[ <listA> ->  · = E ;  , goto  ]
[ <listA> ->  · = E ;  , load  ]
[ <listA> ->  · = E ;  , put  ]
[ <listA> ->  · = E ;  , switch  ]
[ <listA> ->  · = E ;  , error  ]
[ <listA> ->  · = E ;  , comment  ]
}

set 451 = GOTO( set 388 , ( ) :
{
[ <op> -> load (  · V <listV> ) ;  , ;  ]
[ <op> -> load (  · V <listV> ) ;  , V  ]
[ <op> -> load (  · V <listV> ) ;  , :  ]
[ <op> -> load (  · V <listV> ) ;  , let  ]
[ <op> -> load (  · V <listV> ) ;  , next  ]
[ <op> -> load (  · V <listV> ) ;  , if  ]
[ <op> -> load (  · V <listV> ) ;  , goto  ]
[ <op> -> load (  · V <listV> ) ;  , load  ]
[ <op> -> load (  · V <listV> ) ;  , put  ]
[ <op> -> load (  · V <listV> ) ;  , switch  ]
[ <op> -> load (  · V <listV> ) ;  , error  ]
[ <op> -> load (  · V <listV> ) ;  , comment  ]
}

set 452 = GOTO( set 389 , ( ) :
{
[ <op> -> put (  · E <listE> ) ;  , ;  ]
[ <op> -> put (  · E <listE> ) ;  , V  ]
[ <op> -> put (  · E <listE> ) ;  , :  ]
[ <op> -> put (  · E <listE> ) ;  , let  ]
[ <op> -> put (  · E <listE> ) ;  , next  ]
[ <op> -> put (  · E <listE> ) ;  , if  ]
[ <op> -> put (  · E <listE> ) ;  , goto  ]
[ <op> -> put (  · E <listE> ) ;  , load  ]
[ <op> -> put (  · E <listE> ) ;  , put  ]
[ <op> -> put (  · E <listE> ) ;  , switch  ]
[ <op> -> put (  · E <listE> ) ;  , error  ]
[ <op> -> put (  · E <listE> ) ;  , comment  ]
[ E ->  · E - T  , ,  ]
[ E ->  · E - T  , )  ]
[ E ->  · E - T  , -  ]
[ E ->  · E - T  , +  ]
[ E ->  · E + T  , ,  ]
[ E ->  · E + T  , )  ]
[ E ->  · E + T  , -  ]
[ E ->  · E + T  , +  ]
[ E ->  · T  , ,  ]
[ E ->  · T  , )  ]
[ E ->  · T  , -  ]
[ E ->  · T  , +  ]
[ T ->  · T * F  , ,  ]
[ T ->  · T * F  , )  ]
[ T ->  · T * F  , -  ]
[ T ->  · T * F  , +  ]
[ T ->  · T * F  , *  ]
[ T ->  · T * F  , /  ]
[ T ->  · T * F  , %  ]
[ T ->  · T / F  , ,  ]
[ T ->  · T / F  , )  ]
[ T ->  · T / F  , -  ]
[ T ->  · T / F  , +  ]
[ T ->  · T / F  , *  ]
[ T ->  · T / F  , /  ]
[ T ->  · T / F  , %  ]
[ T ->  · T % F  , ,  ]
[ T ->  · T % F  , )  ]
[ T ->  · T % F  , -  ]
[ T ->  · T % F  , +  ]
[ T ->  · T % F  , *  ]
[ T ->  · T % F  , /  ]
[ T ->  · T % F  , %  ]
[ T ->  · F  , ,  ]
[ T ->  · F  , )  ]
[ T ->  · F  , -  ]
[ T ->  · F  , +  ]
[ T ->  · F  , *  ]
[ T ->  · F  , /  ]
[ T ->  · F  , %  ]
[ F ->  · V  , ,  ]
[ F ->  · V  , )  ]
[ F ->  · V  , -  ]
[ F ->  · V  , +  ]
[ F ->  · V  , *  ]
[ F ->  · V  , /  ]
[ F ->  · V  , %  ]
[ F ->  · ( E )  , ,  ]
[ F ->  · ( E )  , )  ]
[ F ->  · ( E )  , -  ]
[ F ->  · ( E )  , +  ]
[ F ->  · ( E )  , *  ]
[ F ->  · ( E )  , /  ]
[ F ->  · ( E )  , %  ]
[ F ->  · C  , ,  ]
[ F ->  · C  , )  ]
[ F ->  · C  , -  ]
[ F ->  · C  , +  ]
[ F ->  · C  , *  ]
[ F ->  · C  , /  ]
[ F ->  · C  , %  ]
[ F ->  · value ( E , E )  , ,  ]
[ F ->  · value ( E , E )  , )  ]
[ F ->  · value ( E , E )  , -  ]
[ F ->  · value ( E , E )  , +  ]
[ F ->  · value ( E , E )  , *  ]
[ F ->  · value ( E , E )  , /  ]
[ F ->  · value ( E , E )  , %  ]
[ F ->  · derivative ( E )  , ,  ]
[ F ->  · derivative ( E )  , )  ]
[ F ->  · derivative ( E )  , -  ]
[ F ->  · derivative ( E )  , +  ]
[ F ->  · derivative ( E )  , *  ]
[ F ->  · derivative ( E )  , /  ]
[ F ->  · derivative ( E )  , %  ]
[ F ->  · coeff ( E , E )  , ,  ]
[ F ->  · coeff ( E , E )  , )  ]
[ F ->  · coeff ( E , E )  , -  ]
[ F ->  · coeff ( E , E )  , +  ]
[ F ->  · coeff ( E , E )  , *  ]
[ F ->  · coeff ( E , E )  , /  ]
[ F ->  · coeff ( E , E )  , %  ]
[ F ->  · deg ( E )  , ,  ]
[ F ->  · deg ( E )  , )  ]
[ F ->  · deg ( E )  , -  ]
[ F ->  · deg ( E )  , +  ]
[ F ->  · deg ( E )  , *  ]
[ F ->  · deg ( E )  , /  ]
[ F ->  · deg ( E )  , %  ]
}

set 453 = GOTO( set 390 , ( ) :
{
[ <op> -> switch (  · E ) <switch_body> end switch ;  , ;  ]
[ <op> -> switch (  · E ) <switch_body> end switch ;  , V  ]
[ <op> -> switch (  · E ) <switch_body> end switch ;  , :  ]
[ <op> -> switch (  · E ) <switch_body> end switch ;  , let  ]
[ <op> -> switch (  · E ) <switch_body> end switch ;  , next  ]
[ <op> -> switch (  · E ) <switch_body> end switch ;  , if  ]
[ <op> -> switch (  · E ) <switch_body> end switch ;  , goto  ]
[ <op> -> switch (  · E ) <switch_body> end switch ;  , load  ]
[ <op> -> switch (  · E ) <switch_body> end switch ;  , put  ]
[ <op> -> switch (  · E ) <switch_body> end switch ;  , switch  ]
[ <op> -> switch (  · E ) <switch_body> end switch ;  , error  ]
[ <op> -> switch (  · E ) <switch_body> end switch ;  , comment  ]
[ E ->  · E - T  , )  ]
[ E ->  · E - T  , -  ]
[ E ->  · E - T  , +  ]
[ E ->  · E + T  , )  ]
[ E ->  · E + T  , -  ]
[ E ->  · E + T  , +  ]
[ E ->  · T  , )  ]
[ E ->  · T  , -  ]
[ E ->  · T  , +  ]
[ T ->  · T * F  , )  ]
[ T ->  · T * F  , -  ]
[ T ->  · T * F  , +  ]
[ T ->  · T * F  , *  ]
[ T ->  · T * F  , /  ]
[ T ->  · T * F  , %  ]
[ T ->  · T / F  , )  ]
[ T ->  · T / F  , -  ]
[ T ->  · T / F  , +  ]
[ T ->  · T / F  , *  ]
[ T ->  · T / F  , /  ]
[ T ->  · T / F  , %  ]
[ T ->  · T % F  , )  ]
[ T ->  · T % F  , -  ]
[ T ->  · T % F  , +  ]
[ T ->  · T % F  , *  ]
[ T ->  · T % F  , /  ]
[ T ->  · T % F  , %  ]
[ T ->  · F  , )  ]
[ T ->  · F  , -  ]
[ T ->  · F  , +  ]
[ T ->  · F  , *  ]
[ T ->  · F  , /  ]
[ T ->  · F  , %  ]
[ F ->  · V  , )  ]
[ F ->  · V  , -  ]
[ F ->  · V  , +  ]
[ F ->  · V  , *  ]
[ F ->  · V  , /  ]
[ F ->  · V  , %  ]
[ F ->  · ( E )  , )  ]
[ F ->  · ( E )  , -  ]
[ F ->  · ( E )  , +  ]
[ F ->  · ( E )  , *  ]
[ F ->  · ( E )  , /  ]
[ F ->  · ( E )  , %  ]
[ F ->  · C  , )  ]
[ F ->  · C  , -  ]
[ F ->  · C  , +  ]
[ F ->  · C  , *  ]
[ F ->  · C  , /  ]
[ F ->  · C  , %  ]
[ F ->  · value ( E , E )  , )  ]
[ F ->  · value ( E , E )  , -  ]
[ F ->  · value ( E , E )  , +  ]
[ F ->  · value ( E , E )  , *  ]
[ F ->  · value ( E , E )  , /  ]
[ F ->  · value ( E , E )  , %  ]
[ F ->  · derivative ( E )  , )  ]
[ F ->  · derivative ( E )  , -  ]
[ F ->  · derivative ( E )  , +  ]
[ F ->  · derivative ( E )  , *  ]
[ F ->  · derivative ( E )  , /  ]
[ F ->  · derivative ( E )  , %  ]
[ F ->  · coeff ( E , E )  , )  ]
[ F ->  · coeff ( E , E )  , -  ]
[ F ->  · coeff ( E , E )  , +  ]
[ F ->  · coeff ( E , E )  , *  ]
[ F ->  · coeff ( E , E )  , /  ]
[ F ->  · coeff ( E , E )  , %  ]
[ F ->  · deg ( E )  , )  ]
[ F ->  · deg ( E )  , -  ]
[ F ->  · deg ( E )  , +  ]
[ F ->  · deg ( E )  , *  ]
[ F ->  · deg ( E )  , /  ]
[ F ->  · deg ( E )  , %  ]
}

set 454 = GOTO( set 391 , E ) :
{
[ E -> E  · - T  , )  ]
[ E -> E  · - T  , -  ]
[ E -> E  · - T  , +  ]
[ E -> E  · + T  , )  ]
[ E -> E  · + T  , -  ]
[ E -> E  · + T  , +  ]
[ F -> ( E  · )  , ;  ]
[ F -> ( E  · )  , V  ]
[ F -> ( E  · )  , :  ]
[ F -> ( E  · )  , let  ]
[ F -> ( E  · )  , next  ]
[ F -> ( E  · )  , if  ]
[ F -> ( E  · )  , goto  ]
[ F -> ( E  · )  , load  ]
[ F -> ( E  · )  , put  ]
[ F -> ( E  · )  , switch  ]
[ F -> ( E  · )  , error  ]
[ F -> ( E  · )  , comment  ]
[ F -> ( E  · )  , -  ]
[ F -> ( E  · )  , +  ]
[ F -> ( E  · )  , *  ]
[ F -> ( E  · )  , /  ]
[ F -> ( E  · )  , %  ]
}

set 455 = GOTO( set 393 , + ) :
{
[ E -> E +  · T  , ;  ]
[ E -> E +  · T  , V  ]
[ E -> E +  · T  , :  ]
[ E -> E +  · T  , let  ]
[ E -> E +  · T  , next  ]
[ E -> E +  · T  , if  ]
[ E -> E +  · T  , goto  ]
[ E -> E +  · T  , load  ]
[ E -> E +  · T  , put  ]
[ E -> E +  · T  , switch  ]
[ E -> E +  · T  , error  ]
[ E -> E +  · T  , comment  ]
[ E -> E +  · T  , -  ]
[ E -> E +  · T  , +  ]
[ T ->  · T * F  , ;  ]
[ T ->  · T * F  , V  ]
[ T ->  · T * F  , :  ]
[ T ->  · T * F  , let  ]
[ T ->  · T * F  , next  ]
[ T ->  · T * F  , if  ]
[ T ->  · T * F  , goto  ]
[ T ->  · T * F  , load  ]
[ T ->  · T * F  , put  ]
[ T ->  · T * F  , switch  ]
[ T ->  · T * F  , error  ]
[ T ->  · T * F  , comment  ]
[ T ->  · T * F  , -  ]
[ T ->  · T * F  , +  ]
[ T ->  · T * F  , *  ]
[ T ->  · T * F  , /  ]
[ T ->  · T * F  , %  ]
[ T ->  · T / F  , ;  ]
[ T ->  · T / F  , V  ]
[ T ->  · T / F  , :  ]
[ T ->  · T / F  , let  ]
[ T ->  · T / F  , next  ]
[ T ->  · T / F  , if  ]
[ T ->  · T / F  , goto  ]
[ T ->  · T / F  , load  ]
[ T ->  · T / F  , put  ]
[ T ->  · T / F  , switch  ]
[ T ->  · T / F  , error  ]
[ T ->  · T / F  , comment  ]
[ T ->  · T / F  , -  ]
[ T ->  · T / F  , +  ]
[ T ->  · T / F  , *  ]
[ T ->  · T / F  , /  ]
[ T ->  · T / F  , %  ]
[ T ->  · T % F  , ;  ]
[ T ->  · T % F  , V  ]
[ T ->  · T % F  , :  ]
[ T ->  · T % F  , let  ]
[ T ->  · T % F  , next  ]
[ T ->  · T % F  , if  ]
[ T ->  · T % F  , goto  ]
[ T ->  · T % F  , load  ]
[ T ->  · T % F  , put  ]
[ T ->  · T % F  , switch  ]
[ T ->  · T % F  , error  ]
[ T ->  · T % F  , comment  ]
[ T ->  · T % F  , -  ]
[ T ->  · T % F  , +  ]
[ T ->  · T % F  , *  ]
[ T ->  · T % F  , /  ]
[ T ->  · T % F  , %  ]
[ T ->  · F  , ;  ]
[ T ->  · F  , V  ]
[ T ->  · F  , :  ]
[ T ->  · F  , let  ]
[ T ->  · F  , next  ]
[ T ->  · F  , if  ]
[ T ->  · F  , goto  ]
[ T ->  · F  , load  ]
[ T ->  · F  , put  ]
[ T ->  · F  , switch  ]
[ T ->  · F  , error  ]
[ T ->  · F  , comment  ]
[ T ->  · F  , -  ]
[ T ->  · F  , +  ]
[ T ->  · F  , *  ]
[ T ->  · F  , /  ]
[ T ->  · F  , %  ]
[ F ->  · V  , ;  ]
[ F ->  · V  , V  ]
[ F ->  · V  , :  ]
[ F ->  · V  , let  ]
[ F ->  · V  , next  ]
[ F ->  · V  , if  ]
[ F ->  · V  , goto  ]
[ F ->  · V  , load  ]
[ F ->  · V  , put  ]
[ F ->  · V  , switch  ]
[ F ->  · V  , error  ]
[ F ->  · V  , comment  ]
[ F ->  · V  , -  ]
[ F ->  · V  , +  ]
[ F ->  · V  , *  ]
[ F ->  · V  , /  ]
[ F ->  · V  , %  ]
[ F ->  · ( E )  , ;  ]
[ F ->  · ( E )  , V  ]
[ F ->  · ( E )  , :  ]
[ F ->  · ( E )  , let  ]
[ F ->  · ( E )  , next  ]
[ F ->  · ( E )  , if  ]
[ F ->  · ( E )  , goto  ]
[ F ->  · ( E )  , load  ]
[ F ->  · ( E )  , put  ]
[ F ->  · ( E )  , switch  ]
[ F ->  · ( E )  , error  ]
[ F ->  · ( E )  , comment  ]
[ F ->  · ( E )  , -  ]
[ F ->  · ( E )  , +  ]
[ F ->  · ( E )  , *  ]
[ F ->  · ( E )  , /  ]
[ F ->  · ( E )  , %  ]
[ F ->  · C  , ;  ]
[ F ->  · C  , V  ]
[ F ->  · C  , :  ]
[ F ->  · C  , let  ]
[ F ->  · C  , next  ]
[ F ->  · C  , if  ]
[ F ->  · C  , goto  ]
[ F ->  · C  , load  ]
[ F ->  · C  , put  ]
[ F ->  · C  , switch  ]
[ F ->  · C  , error  ]
[ F ->  · C  , comment  ]
[ F ->  · C  , -  ]
[ F ->  · C  , +  ]
[ F ->  · C  , *  ]
[ F ->  · C  , /  ]
[ F ->  · C  , %  ]
[ F ->  · value ( E , E )  , ;  ]
[ F ->  · value ( E , E )  , V  ]
[ F ->  · value ( E , E )  , :  ]
[ F ->  · value ( E , E )  , let  ]
[ F ->  · value ( E , E )  , next  ]
[ F ->  · value ( E , E )  , if  ]
[ F ->  · value ( E , E )  , goto  ]
[ F ->  · value ( E , E )  , load  ]
[ F ->  · value ( E , E )  , put  ]
[ F ->  · value ( E , E )  , switch  ]
[ F ->  · value ( E , E )  , error  ]
[ F ->  · value ( E , E )  , comment  ]
[ F ->  · value ( E , E )  , -  ]
[ F ->  · value ( E , E )  , +  ]
[ F ->  · value ( E , E )  , *  ]
[ F ->  · value ( E , E )  , /  ]
[ F ->  · value ( E , E )  , %  ]
[ F ->  · derivative ( E )  , ;  ]
[ F ->  · derivative ( E )  , V  ]
[ F ->  · derivative ( E )  , :  ]
[ F ->  · derivative ( E )  , let  ]
[ F ->  · derivative ( E )  , next  ]
[ F ->  · derivative ( E )  , if  ]
[ F ->  · derivative ( E )  , goto  ]
[ F ->  · derivative ( E )  , load  ]
[ F ->  · derivative ( E )  , put  ]
[ F ->  · derivative ( E )  , switch  ]
[ F ->  · derivative ( E )  , error  ]
[ F ->  · derivative ( E )  , comment  ]
[ F ->  · derivative ( E )  , -  ]
[ F ->  · derivative ( E )  , +  ]
[ F ->  · derivative ( E )  , *  ]
[ F ->  · derivative ( E )  , /  ]
[ F ->  · derivative ( E )  , %  ]
[ F ->  · coeff ( E , E )  , ;  ]
[ F ->  · coeff ( E , E )  , V  ]
[ F ->  · coeff ( E , E )  , :  ]
[ F ->  · coeff ( E , E )  , let  ]
[ F ->  · coeff ( E , E )  , next  ]
[ F ->  · coeff ( E , E )  , if  ]
[ F ->  · coeff ( E , E )  , goto  ]
[ F ->  · coeff ( E , E )  , load  ]
[ F ->  · coeff ( E , E )  , put  ]
[ F ->  · coeff ( E , E )  , switch  ]
[ F ->  · coeff ( E , E )  , error  ]
[ F ->  · coeff ( E , E )  , comment  ]
[ F ->  · coeff ( E , E )  , -  ]
[ F ->  · coeff ( E , E )  , +  ]
[ F ->  · coeff ( E , E )  , *  ]
[ F ->  · coeff ( E , E )  , /  ]
[ F ->  · coeff ( E , E )  , %  ]
[ F ->  · deg ( E )  , ;  ]
[ F ->  · deg ( E )  , V  ]
[ F ->  · deg ( E )  , :  ]
[ F ->  · deg ( E )  , let  ]
[ F ->  · deg ( E )  , next  ]
[ F ->  · deg ( E )  , if  ]
[ F ->  · deg ( E )  , goto  ]
[ F ->  · deg ( E )  , load  ]
[ F ->  · deg ( E )  , put  ]
[ F ->  · deg ( E )  , switch  ]
[ F ->  · deg ( E )  , error  ]
[ F ->  · deg ( E )  , comment  ]
[ F ->  · deg ( E )  , -  ]
[ F ->  · deg ( E )  , +  ]
[ F ->  · deg ( E )  , *  ]
[ F ->  · deg ( E )  , /  ]
[ F ->  · deg ( E )  , %  ]
}

set 456 = GOTO( set 393 , - ) :
{
[ E -> E -  · T  , ;  ]
[ E -> E -  · T  , V  ]
[ E -> E -  · T  , :  ]
[ E -> E -  · T  , let  ]
[ E -> E -  · T  , next  ]
[ E -> E -  · T  , if  ]
[ E -> E -  · T  , goto  ]
[ E -> E -  · T  , load  ]
[ E -> E -  · T  , put  ]
[ E -> E -  · T  , switch  ]
[ E -> E -  · T  , error  ]
[ E -> E -  · T  , comment  ]
[ E -> E -  · T  , -  ]
[ E -> E -  · T  , +  ]
[ T ->  · T * F  , ;  ]
[ T ->  · T * F  , V  ]
[ T ->  · T * F  , :  ]
[ T ->  · T * F  , let  ]
[ T ->  · T * F  , next  ]
[ T ->  · T * F  , if  ]
[ T ->  · T * F  , goto  ]
[ T ->  · T * F  , load  ]
[ T ->  · T * F  , put  ]
[ T ->  · T * F  , switch  ]
[ T ->  · T * F  , error  ]
[ T ->  · T * F  , comment  ]
[ T ->  · T * F  , -  ]
[ T ->  · T * F  , +  ]
[ T ->  · T * F  , *  ]
[ T ->  · T * F  , /  ]
[ T ->  · T * F  , %  ]
[ T ->  · T / F  , ;  ]
[ T ->  · T / F  , V  ]
[ T ->  · T / F  , :  ]
[ T ->  · T / F  , let  ]
[ T ->  · T / F  , next  ]
[ T ->  · T / F  , if  ]
[ T ->  · T / F  , goto  ]
[ T ->  · T / F  , load  ]
[ T ->  · T / F  , put  ]
[ T ->  · T / F  , switch  ]
[ T ->  · T / F  , error  ]
[ T ->  · T / F  , comment  ]
[ T ->  · T / F  , -  ]
[ T ->  · T / F  , +  ]
[ T ->  · T / F  , *  ]
[ T ->  · T / F  , /  ]
[ T ->  · T / F  , %  ]
[ T ->  · T % F  , ;  ]
[ T ->  · T % F  , V  ]
[ T ->  · T % F  , :  ]
[ T ->  · T % F  , let  ]
[ T ->  · T % F  , next  ]
[ T ->  · T % F  , if  ]
[ T ->  · T % F  , goto  ]
[ T ->  · T % F  , load  ]
[ T ->  · T % F  , put  ]
[ T ->  · T % F  , switch  ]
[ T ->  · T % F  , error  ]
[ T ->  · T % F  , comment  ]
[ T ->  · T % F  , -  ]
[ T ->  · T % F  , +  ]
[ T ->  · T % F  , *  ]
[ T ->  · T % F  , /  ]
[ T ->  · T % F  , %  ]
[ T ->  · F  , ;  ]
[ T ->  · F  , V  ]
[ T ->  · F  , :  ]
[ T ->  · F  , let  ]
[ T ->  · F  , next  ]
[ T ->  · F  , if  ]
[ T ->  · F  , goto  ]
[ T ->  · F  , load  ]
[ T ->  · F  , put  ]
[ T ->  · F  , switch  ]
[ T ->  · F  , error  ]
[ T ->  · F  , comment  ]
[ T ->  · F  , -  ]
[ T ->  · F  , +  ]
[ T ->  · F  , *  ]
[ T ->  · F  , /  ]
[ T ->  · F  , %  ]
[ F ->  · V  , ;  ]
[ F ->  · V  , V  ]
[ F ->  · V  , :  ]
[ F ->  · V  , let  ]
[ F ->  · V  , next  ]
[ F ->  · V  , if  ]
[ F ->  · V  , goto  ]
[ F ->  · V  , load  ]
[ F ->  · V  , put  ]
[ F ->  · V  , switch  ]
[ F ->  · V  , error  ]
[ F ->  · V  , comment  ]
[ F ->  · V  , -  ]
[ F ->  · V  , +  ]
[ F ->  · V  , *  ]
[ F ->  · V  , /  ]
[ F ->  · V  , %  ]
[ F ->  · ( E )  , ;  ]
[ F ->  · ( E )  , V  ]
[ F ->  · ( E )  , :  ]
[ F ->  · ( E )  , let  ]
[ F ->  · ( E )  , next  ]
[ F ->  · ( E )  , if  ]
[ F ->  · ( E )  , goto  ]
[ F ->  · ( E )  , load  ]
[ F ->  · ( E )  , put  ]
[ F ->  · ( E )  , switch  ]
[ F ->  · ( E )  , error  ]
[ F ->  · ( E )  , comment  ]
[ F ->  · ( E )  , -  ]
[ F ->  · ( E )  , +  ]
[ F ->  · ( E )  , *  ]
[ F ->  · ( E )  , /  ]
[ F ->  · ( E )  , %  ]
[ F ->  · C  , ;  ]
[ F ->  · C  , V  ]
[ F ->  · C  , :  ]
[ F ->  · C  , let  ]
[ F ->  · C  , next  ]
[ F ->  · C  , if  ]
[ F ->  · C  , goto  ]
[ F ->  · C  , load  ]
[ F ->  · C  , put  ]
[ F ->  · C  , switch  ]
[ F ->  · C  , error  ]
[ F ->  · C  , comment  ]
[ F ->  · C  , -  ]
[ F ->  · C  , +  ]
[ F ->  · C  , *  ]
[ F ->  · C  , /  ]
[ F ->  · C  , %  ]
[ F ->  · value ( E , E )  , ;  ]
[ F ->  · value ( E , E )  , V  ]
[ F ->  · value ( E , E )  , :  ]
[ F ->  · value ( E , E )  , let  ]
[ F ->  · value ( E , E )  , next  ]
[ F ->  · value ( E , E )  , if  ]
[ F ->  · value ( E , E )  , goto  ]
[ F ->  · value ( E , E )  , load  ]
[ F ->  · value ( E , E )  , put  ]
[ F ->  · value ( E , E )  , switch  ]
[ F ->  · value ( E , E )  , error  ]
[ F ->  · value ( E , E )  , comment  ]
[ F ->  · value ( E , E )  , -  ]
[ F ->  · value ( E , E )  , +  ]
[ F ->  · value ( E , E )  , *  ]
[ F ->  · value ( E , E )  , /  ]
[ F ->  · value ( E , E )  , %  ]
[ F ->  · derivative ( E )  , ;  ]
[ F ->  · derivative ( E )  , V  ]
[ F ->  · derivative ( E )  , :  ]
[ F ->  · derivative ( E )  , let  ]
[ F ->  · derivative ( E )  , next  ]
[ F ->  · derivative ( E )  , if  ]
[ F ->  · derivative ( E )  , goto  ]
[ F ->  · derivative ( E )  , load  ]
[ F ->  · derivative ( E )  , put  ]
[ F ->  · derivative ( E )  , switch  ]
[ F ->  · derivative ( E )  , error  ]
[ F ->  · derivative ( E )  , comment  ]
[ F ->  · derivative ( E )  , -  ]
[ F ->  · derivative ( E )  , +  ]
[ F ->  · derivative ( E )  , *  ]
[ F ->  · derivative ( E )  , /  ]
[ F ->  · derivative ( E )  , %  ]
[ F ->  · coeff ( E , E )  , ;  ]
[ F ->  · coeff ( E , E )  , V  ]
[ F ->  · coeff ( E , E )  , :  ]
[ F ->  · coeff ( E , E )  , let  ]
[ F ->  · coeff ( E , E )  , next  ]
[ F ->  · coeff ( E , E )  , if  ]
[ F ->  · coeff ( E , E )  , goto  ]
[ F ->  · coeff ( E , E )  , load  ]
[ F ->  · coeff ( E , E )  , put  ]
[ F ->  · coeff ( E , E )  , switch  ]
[ F ->  · coeff ( E , E )  , error  ]
[ F ->  · coeff ( E , E )  , comment  ]
[ F ->  · coeff ( E , E )  , -  ]
[ F ->  · coeff ( E , E )  , +  ]
[ F ->  · coeff ( E , E )  , *  ]
[ F ->  · coeff ( E , E )  , /  ]
[ F ->  · coeff ( E , E )  , %  ]
[ F ->  · deg ( E )  , ;  ]
[ F ->  · deg ( E )  , V  ]
[ F ->  · deg ( E )  , :  ]
[ F ->  · deg ( E )  , let  ]
[ F ->  · deg ( E )  , next  ]
[ F ->  · deg ( E )  , if  ]
[ F ->  · deg ( E )  , goto  ]
[ F ->  · deg ( E )  , load  ]
[ F ->  · deg ( E )  , put  ]
[ F ->  · deg ( E )  , switch  ]
[ F ->  · deg ( E )  , error  ]
[ F ->  · deg ( E )  , comment  ]
[ F ->  · deg ( E )  , -  ]
[ F ->  · deg ( E )  , +  ]
[ F ->  · deg ( E )  , *  ]
[ F ->  · deg ( E )  , /  ]
[ F ->  · deg ( E )  , %  ]
}

set 457 = GOTO( set 395 , % ) :
{
[ T -> T %  · F  , ;  ]
[ T -> T %  · F  , V  ]
[ T -> T %  · F  , :  ]
[ T -> T %  · F  , let  ]
[ T -> T %  · F  , next  ]
[ T -> T %  · F  , if  ]
[ T -> T %  · F  , goto  ]
[ T -> T %  · F  , load  ]
[ T -> T %  · F  , put  ]
[ T -> T %  · F  , switch  ]
[ T -> T %  · F  , error  ]
[ T -> T %  · F  , comment  ]
[ T -> T %  · F  , -  ]
[ T -> T %  · F  , +  ]
[ T -> T %  · F  , *  ]
[ T -> T %  · F  , /  ]
[ T -> T %  · F  , %  ]
[ F ->  · V  , ;  ]
[ F ->  · V  , V  ]
[ F ->  · V  , :  ]
[ F ->  · V  , let  ]
[ F ->  · V  , next  ]
[ F ->  · V  , if  ]
[ F ->  · V  , goto  ]
[ F ->  · V  , load  ]
[ F ->  · V  , put  ]
[ F ->  · V  , switch  ]
[ F ->  · V  , error  ]
[ F ->  · V  , comment  ]
[ F ->  · V  , -  ]
[ F ->  · V  , +  ]
[ F ->  · V  , *  ]
[ F ->  · V  , /  ]
[ F ->  · V  , %  ]
[ F ->  · ( E )  , ;  ]
[ F ->  · ( E )  , V  ]
[ F ->  · ( E )  , :  ]
[ F ->  · ( E )  , let  ]
[ F ->  · ( E )  , next  ]
[ F ->  · ( E )  , if  ]
[ F ->  · ( E )  , goto  ]
[ F ->  · ( E )  , load  ]
[ F ->  · ( E )  , put  ]
[ F ->  · ( E )  , switch  ]
[ F ->  · ( E )  , error  ]
[ F ->  · ( E )  , comment  ]
[ F ->  · ( E )  , -  ]
[ F ->  · ( E )  , +  ]
[ F ->  · ( E )  , *  ]
[ F ->  · ( E )  , /  ]
[ F ->  · ( E )  , %  ]
[ F ->  · C  , ;  ]
[ F ->  · C  , V  ]
[ F ->  · C  , :  ]
[ F ->  · C  , let  ]
[ F ->  · C  , next  ]
[ F ->  · C  , if  ]
[ F ->  · C  , goto  ]
[ F ->  · C  , load  ]
[ F ->  · C  , put  ]
[ F ->  · C  , switch  ]
[ F ->  · C  , error  ]
[ F ->  · C  , comment  ]
[ F ->  · C  , -  ]
[ F ->  · C  , +  ]
[ F ->  · C  , *  ]
[ F ->  · C  , /  ]
[ F ->  · C  , %  ]
[ F ->  · value ( E , E )  , ;  ]
[ F ->  · value ( E , E )  , V  ]
[ F ->  · value ( E , E )  , :  ]
[ F ->  · value ( E , E )  , let  ]
[ F ->  · value ( E , E )  , next  ]
[ F ->  · value ( E , E )  , if  ]
[ F ->  · value ( E , E )  , goto  ]
[ F ->  · value ( E , E )  , load  ]
[ F ->  · value ( E , E )  , put  ]
[ F ->  · value ( E , E )  , switch  ]
[ F ->  · value ( E , E )  , error  ]
[ F ->  · value ( E , E )  , comment  ]
[ F ->  · value ( E , E )  , -  ]
[ F ->  · value ( E , E )  , +  ]
[ F ->  · value ( E , E )  , *  ]
[ F ->  · value ( E , E )  , /  ]
[ F ->  · value ( E , E )  , %  ]
[ F ->  · derivative ( E )  , ;  ]
[ F ->  · derivative ( E )  , V  ]
[ F ->  · derivative ( E )  , :  ]
[ F ->  · derivative ( E )  , let  ]
[ F ->  · derivative ( E )  , next  ]
[ F ->  · derivative ( E )  , if  ]
[ F ->  · derivative ( E )  , goto  ]
[ F ->  · derivative ( E )  , load  ]
[ F ->  · derivative ( E )  , put  ]
[ F ->  · derivative ( E )  , switch  ]
[ F ->  · derivative ( E )  , error  ]
[ F ->  · derivative ( E )  , comment  ]
[ F ->  · derivative ( E )  , -  ]
[ F ->  · derivative ( E )  , +  ]
[ F ->  · derivative ( E )  , *  ]
[ F ->  · derivative ( E )  , /  ]
[ F ->  · derivative ( E )  , %  ]
[ F ->  · coeff ( E , E )  , ;  ]
[ F ->  · coeff ( E , E )  , V  ]
[ F ->  · coeff ( E , E )  , :  ]
[ F ->  · coeff ( E , E )  , let  ]
[ F ->  · coeff ( E , E )  , next  ]
[ F ->  · coeff ( E , E )  , if  ]
[ F ->  · coeff ( E , E )  , goto  ]
[ F ->  · coeff ( E , E )  , load  ]
[ F ->  · coeff ( E , E )  , put  ]
[ F ->  · coeff ( E , E )  , switch  ]
[ F ->  · coeff ( E , E )  , error  ]
[ F ->  · coeff ( E , E )  , comment  ]
[ F ->  · coeff ( E , E )  , -  ]
[ F ->  · coeff ( E , E )  , +  ]
[ F ->  · coeff ( E , E )  , *  ]
[ F ->  · coeff ( E , E )  , /  ]
[ F ->  · coeff ( E , E )  , %  ]
[ F ->  · deg ( E )  , ;  ]
[ F ->  · deg ( E )  , V  ]
[ F ->  · deg ( E )  , :  ]
[ F ->  · deg ( E )  , let  ]
[ F ->  · deg ( E )  , next  ]
[ F ->  · deg ( E )  , if  ]
[ F ->  · deg ( E )  , goto  ]
[ F ->  · deg ( E )  , load  ]
[ F ->  · deg ( E )  , put  ]
[ F ->  · deg ( E )  , switch  ]
[ F ->  · deg ( E )  , error  ]
[ F ->  · deg ( E )  , comment  ]
[ F ->  · deg ( E )  , -  ]
[ F ->  · deg ( E )  , +  ]
[ F ->  · deg ( E )  , *  ]
[ F ->  · deg ( E )  , /  ]
[ F ->  · deg ( E )  , %  ]
}

set 458 = GOTO( set 395 , * ) :
{
[ T -> T *  · F  , ;  ]
[ T -> T *  · F  , V  ]
[ T -> T *  · F  , :  ]
[ T -> T *  · F  , let  ]
[ T -> T *  · F  , next  ]
[ T -> T *  · F  , if  ]
[ T -> T *  · F  , goto  ]
[ T -> T *  · F  , load  ]
[ T -> T *  · F  , put  ]
[ T -> T *  · F  , switch  ]
[ T -> T *  · F  , error  ]
[ T -> T *  · F  , comment  ]
[ T -> T *  · F  , -  ]
[ T -> T *  · F  , +  ]
[ T -> T *  · F  , *  ]
[ T -> T *  · F  , /  ]
[ T -> T *  · F  , %  ]
[ F ->  · V  , ;  ]
[ F ->  · V  , V  ]
[ F ->  · V  , :  ]
[ F ->  · V  , let  ]
[ F ->  · V  , next  ]
[ F ->  · V  , if  ]
[ F ->  · V  , goto  ]
[ F ->  · V  , load  ]
[ F ->  · V  , put  ]
[ F ->  · V  , switch  ]
[ F ->  · V  , error  ]
[ F ->  · V  , comment  ]
[ F ->  · V  , -  ]
[ F ->  · V  , +  ]
[ F ->  · V  , *  ]
[ F ->  · V  , /  ]
[ F ->  · V  , %  ]
[ F ->  · ( E )  , ;  ]
[ F ->  · ( E )  , V  ]
[ F ->  · ( E )  , :  ]
[ F ->  · ( E )  , let  ]
[ F ->  · ( E )  , next  ]
[ F ->  · ( E )  , if  ]
[ F ->  · ( E )  , goto  ]
[ F ->  · ( E )  , load  ]
[ F ->  · ( E )  , put  ]
[ F ->  · ( E )  , switch  ]
[ F ->  · ( E )  , error  ]
[ F ->  · ( E )  , comment  ]
[ F ->  · ( E )  , -  ]
[ F ->  · ( E )  , +  ]
[ F ->  · ( E )  , *  ]
[ F ->  · ( E )  , /  ]
[ F ->  · ( E )  , %  ]
[ F ->  · C  , ;  ]
[ F ->  · C  , V  ]
[ F ->  · C  , :  ]
[ F ->  · C  , let  ]
[ F ->  · C  , next  ]
[ F ->  · C  , if  ]
[ F ->  · C  , goto  ]
[ F ->  · C  , load  ]
[ F ->  · C  , put  ]
[ F ->  · C  , switch  ]
[ F ->  · C  , error  ]
[ F ->  · C  , comment  ]
[ F ->  · C  , -  ]
[ F ->  · C  , +  ]
[ F ->  · C  , *  ]
[ F ->  · C  , /  ]
[ F ->  · C  , %  ]
[ F ->  · value ( E , E )  , ;  ]
[ F ->  · value ( E , E )  , V  ]
[ F ->  · value ( E , E )  , :  ]
[ F ->  · value ( E , E )  , let  ]
[ F ->  · value ( E , E )  , next  ]
[ F ->  · value ( E , E )  , if  ]
[ F ->  · value ( E , E )  , goto  ]
[ F ->  · value ( E , E )  , load  ]
[ F ->  · value ( E , E )  , put  ]
[ F ->  · value ( E , E )  , switch  ]
[ F ->  · value ( E , E )  , error  ]
[ F ->  · value ( E , E )  , comment  ]
[ F ->  · value ( E , E )  , -  ]
[ F ->  · value ( E , E )  , +  ]
[ F ->  · value ( E , E )  , *  ]
[ F ->  · value ( E , E )  , /  ]
[ F ->  · value ( E , E )  , %  ]
[ F ->  · derivative ( E )  , ;  ]
[ F ->  · derivative ( E )  , V  ]
[ F ->  · derivative ( E )  , :  ]
[ F ->  · derivative ( E )  , let  ]
[ F ->  · derivative ( E )  , next  ]
[ F ->  · derivative ( E )  , if  ]
[ F ->  · derivative ( E )  , goto  ]
[ F ->  · derivative ( E )  , load  ]
[ F ->  · derivative ( E )  , put  ]
[ F ->  · derivative ( E )  , switch  ]
[ F ->  · derivative ( E )  , error  ]
[ F ->  · derivative ( E )  , comment  ]
[ F ->  · derivative ( E )  , -  ]
[ F ->  · derivative ( E )  , +  ]
[ F ->  · derivative ( E )  , *  ]
[ F ->  · derivative ( E )  , /  ]
[ F ->  · derivative ( E )  , %  ]
[ F ->  · coeff ( E , E )  , ;  ]
[ F ->  · coeff ( E , E )  , V  ]
[ F ->  · coeff ( E , E )  , :  ]
[ F ->  · coeff ( E , E )  , let  ]
[ F ->  · coeff ( E , E )  , next  ]
[ F ->  · coeff ( E , E )  , if  ]
[ F ->  · coeff ( E , E )  , goto  ]
[ F ->  · coeff ( E , E )  , load  ]
[ F ->  · coeff ( E , E )  , put  ]
[ F ->  · coeff ( E , E )  , switch  ]
[ F ->  · coeff ( E , E )  , error  ]
[ F ->  · coeff ( E , E )  , comment  ]
[ F ->  · coeff ( E , E )  , -  ]
[ F ->  · coeff ( E , E )  , +  ]
[ F ->  · coeff ( E , E )  , *  ]
[ F ->  · coeff ( E , E )  , /  ]
[ F ->  · coeff ( E , E )  , %  ]
[ F ->  · deg ( E )  , ;  ]
[ F ->  · deg ( E )  , V  ]
[ F ->  · deg ( E )  , :  ]
[ F ->  · deg ( E )  , let  ]
[ F ->  · deg ( E )  , next  ]
[ F ->  · deg ( E )  , if  ]
[ F ->  · deg ( E )  , goto  ]
[ F ->  · deg ( E )  , load  ]
[ F ->  · deg ( E )  , put  ]
[ F ->  · deg ( E )  , switch  ]
[ F ->  · deg ( E )  , error  ]
[ F ->  · deg ( E )  , comment  ]
[ F ->  · deg ( E )  , -  ]
[ F ->  · deg ( E )  , +  ]
[ F ->  · deg ( E )  , *  ]
[ F ->  · deg ( E )  , /  ]
[ F ->  · deg ( E )  , %  ]
}

set 459 = GOTO( set 395 , / ) :
{
[ T -> T /  · F  , ;  ]
[ T -> T /  · F  , V  ]
[ T -> T /  · F  , :  ]
[ T -> T /  · F  , let  ]
[ T -> T /  · F  , next  ]
[ T -> T /  · F  , if  ]
[ T -> T /  · F  , goto  ]
[ T -> T /  · F  , load  ]
[ T -> T /  · F  , put  ]
[ T -> T /  · F  , switch  ]
[ T -> T /  · F  , error  ]
[ T -> T /  · F  , comment  ]
[ T -> T /  · F  , -  ]
[ T -> T /  · F  , +  ]
[ T -> T /  · F  , *  ]
[ T -> T /  · F  , /  ]
[ T -> T /  · F  , %  ]
[ F ->  · V  , ;  ]
[ F ->  · V  , V  ]
[ F ->  · V  , :  ]
[ F ->  · V  , let  ]
[ F ->  · V  , next  ]
[ F ->  · V  , if  ]
[ F ->  · V  , goto  ]
[ F ->  · V  , load  ]
[ F ->  · V  , put  ]
[ F ->  · V  , switch  ]
[ F ->  · V  , error  ]
[ F ->  · V  , comment  ]
[ F ->  · V  , -  ]
[ F ->  · V  , +  ]
[ F ->  · V  , *  ]
[ F ->  · V  , /  ]
[ F ->  · V  , %  ]
[ F ->  · ( E )  , ;  ]
[ F ->  · ( E )  , V  ]
[ F ->  · ( E )  , :  ]
[ F ->  · ( E )  , let  ]
[ F ->  · ( E )  , next  ]
[ F ->  · ( E )  , if  ]
[ F ->  · ( E )  , goto  ]
[ F ->  · ( E )  , load  ]
[ F ->  · ( E )  , put  ]
[ F ->  · ( E )  , switch  ]
[ F ->  · ( E )  , error  ]
[ F ->  · ( E )  , comment  ]
[ F ->  · ( E )  , -  ]
[ F ->  · ( E )  , +  ]
[ F ->  · ( E )  , *  ]
[ F ->  · ( E )  , /  ]
[ F ->  · ( E )  , %  ]
[ F ->  · C  , ;  ]
[ F ->  · C  , V  ]
[ F ->  · C  , :  ]
[ F ->  · C  , let  ]
[ F ->  · C  , next  ]
[ F ->  · C  , if  ]
[ F ->  · C  , goto  ]
[ F ->  · C  , load  ]
[ F ->  · C  , put  ]
[ F ->  · C  , switch  ]
[ F ->  · C  , error  ]
[ F ->  · C  , comment  ]
[ F ->  · C  , -  ]
[ F ->  · C  , +  ]
[ F ->  · C  , *  ]
[ F ->  · C  , /  ]
[ F ->  · C  , %  ]
[ F ->  · value ( E , E )  , ;  ]
[ F ->  · value ( E , E )  , V  ]
[ F ->  · value ( E , E )  , :  ]
[ F ->  · value ( E , E )  , let  ]
[ F ->  · value ( E , E )  , next  ]
[ F ->  · value ( E , E )  , if  ]
[ F ->  · value ( E , E )  , goto  ]
[ F ->  · value ( E , E )  , load  ]
[ F ->  · value ( E , E )  , put  ]
[ F ->  · value ( E , E )  , switch  ]
[ F ->  · value ( E , E )  , error  ]
[ F ->  · value ( E , E )  , comment  ]
[ F ->  · value ( E , E )  , -  ]
[ F ->  · value ( E , E )  , +  ]
[ F ->  · value ( E , E )  , *  ]
[ F ->  · value ( E , E )  , /  ]
[ F ->  · value ( E , E )  , %  ]
[ F ->  · derivative ( E )  , ;  ]
[ F ->  · derivative ( E )  , V  ]
[ F ->  · derivative ( E )  , :  ]
[ F ->  · derivative ( E )  , let  ]
[ F ->  · derivative ( E )  , next  ]
[ F ->  · derivative ( E )  , if  ]
[ F ->  · derivative ( E )  , goto  ]
[ F ->  · derivative ( E )  , load  ]
[ F ->  · derivative ( E )  , put  ]
[ F ->  · derivative ( E )  , switch  ]
[ F ->  · derivative ( E )  , error  ]
[ F ->  · derivative ( E )  , comment  ]
[ F ->  · derivative ( E )  , -  ]
[ F ->  · derivative ( E )  , +  ]
[ F ->  · derivative ( E )  , *  ]
[ F ->  · derivative ( E )  , /  ]
[ F ->  · derivative ( E )  , %  ]
[ F ->  · coeff ( E , E )  , ;  ]
[ F ->  · coeff ( E , E )  , V  ]
[ F ->  · coeff ( E , E )  , :  ]
[ F ->  · coeff ( E , E )  , let  ]
[ F ->  · coeff ( E , E )  , next  ]
[ F ->  · coeff ( E , E )  , if  ]
[ F ->  · coeff ( E , E )  , goto  ]
[ F ->  · coeff ( E , E )  , load  ]
[ F ->  · coeff ( E , E )  , put  ]
[ F ->  · coeff ( E , E )  , switch  ]
[ F ->  · coeff ( E , E )  , error  ]
[ F ->  · coeff ( E , E )  , comment  ]
[ F ->  · coeff ( E , E )  , -  ]
[ F ->  · coeff ( E , E )  , +  ]
[ F ->  · coeff ( E , E )  , *  ]
[ F ->  · coeff ( E , E )  , /  ]
[ F ->  · coeff ( E , E )  , %  ]
[ F ->  · deg ( E )  , ;  ]
[ F ->  · deg ( E )  , V  ]
[ F ->  · deg ( E )  , :  ]
[ F ->  · deg ( E )  , let  ]
[ F ->  · deg ( E )  , next  ]
[ F ->  · deg ( E )  , if  ]
[ F ->  · deg ( E )  , goto  ]
[ F ->  · deg ( E )  , load  ]
[ F ->  · deg ( E )  , put  ]
[ F ->  · deg ( E )  , switch  ]
[ F ->  · deg ( E )  , error  ]
[ F ->  · deg ( E )  , comment  ]
[ F ->  · deg ( E )  , -  ]
[ F ->  · deg ( E )  , +  ]
[ F ->  · deg ( E )  , *  ]
[ F ->  · deg ( E )  , /  ]
[ F ->  · deg ( E )  , %  ]
}

set 460 = GOTO( set 397 , ( ) :
{
[ E ->  · E - T  , ,  ]
[ E ->  · E - T  , -  ]
[ E ->  · E - T  , +  ]
[ E ->  · E + T  , ,  ]
[ E ->  · E + T  , -  ]
[ E ->  · E + T  , +  ]
[ E ->  · T  , ,  ]
[ E ->  · T  , -  ]
[ E ->  · T  , +  ]
[ T ->  · T * F  , ,  ]
[ T ->  · T * F  , -  ]
[ T ->  · T * F  , +  ]
[ T ->  · T * F  , *  ]
[ T ->  · T * F  , /  ]
[ T ->  · T * F  , %  ]
[ T ->  · T / F  , ,  ]
[ T ->  · T / F  , -  ]
[ T ->  · T / F  , +  ]
[ T ->  · T / F  , *  ]
[ T ->  · T / F  , /  ]
[ T ->  · T / F  , %  ]
[ T ->  · T % F  , ,  ]
[ T ->  · T % F  , -  ]
[ T ->  · T % F  , +  ]
[ T ->  · T % F  , *  ]
[ T ->  · T % F  , /  ]
[ T ->  · T % F  , %  ]
[ T ->  · F  , ,  ]
[ T ->  · F  , -  ]
[ T ->  · F  , +  ]
[ T ->  · F  , *  ]
[ T ->  · F  , /  ]
[ T ->  · F  , %  ]
[ F ->  · V  , ,  ]
[ F ->  · V  , -  ]
[ F ->  · V  , +  ]
[ F ->  · V  , *  ]
[ F ->  · V  , /  ]
[ F ->  · V  , %  ]
[ F ->  · ( E )  , ,  ]
[ F ->  · ( E )  , -  ]
[ F ->  · ( E )  , +  ]
[ F ->  · ( E )  , *  ]
[ F ->  · ( E )  , /  ]
[ F ->  · ( E )  , %  ]
[ F ->  · C  , ,  ]
[ F ->  · C  , -  ]
[ F ->  · C  , +  ]
[ F ->  · C  , *  ]
[ F ->  · C  , /  ]
[ F ->  · C  , %  ]
[ F ->  · value ( E , E )  , ,  ]
[ F ->  · value ( E , E )  , -  ]
[ F ->  · value ( E , E )  , +  ]
[ F ->  · value ( E , E )  , *  ]
[ F ->  · value ( E , E )  , /  ]
[ F ->  · value ( E , E )  , %  ]
[ F ->  · derivative ( E )  , ,  ]
[ F ->  · derivative ( E )  , -  ]
[ F ->  · derivative ( E )  , +  ]
[ F ->  · derivative ( E )  , *  ]
[ F ->  · derivative ( E )  , /  ]
[ F ->  · derivative ( E )  , %  ]
[ F ->  · coeff ( E , E )  , ,  ]
[ F ->  · coeff ( E , E )  , -  ]
[ F ->  · coeff ( E , E )  , +  ]
[ F ->  · coeff ( E , E )  , *  ]
[ F ->  · coeff ( E , E )  , /  ]
[ F ->  · coeff ( E , E )  , %  ]
[ F ->  · deg ( E )  , ,  ]
[ F ->  · deg ( E )  , -  ]
[ F ->  · deg ( E )  , +  ]
[ F ->  · deg ( E )  , *  ]
[ F ->  · deg ( E )  , /  ]
[ F ->  · deg ( E )  , %  ]
[ F -> coeff (  · E , E )  , ;  ]
[ F -> coeff (  · E , E )  , V  ]
[ F -> coeff (  · E , E )  , :  ]
[ F -> coeff (  · E , E )  , let  ]
[ F -> coeff (  · E , E )  , next  ]
[ F -> coeff (  · E , E )  , if  ]
[ F -> coeff (  · E , E )  , goto  ]
[ F -> coeff (  · E , E )  , load  ]
[ F -> coeff (  · E , E )  , put  ]
[ F -> coeff (  · E , E )  , switch  ]
[ F -> coeff (  · E , E )  , error  ]
[ F -> coeff (  · E , E )  , comment  ]
[ F -> coeff (  · E , E )  , -  ]
[ F -> coeff (  · E , E )  , +  ]
[ F -> coeff (  · E , E )  , *  ]
[ F -> coeff (  · E , E )  , /  ]
[ F -> coeff (  · E , E )  , %  ]
}

set 461 = GOTO( set 398 , ( ) :
{
[ E ->  · E - T  , )  ]
[ E ->  · E - T  , -  ]
[ E ->  · E - T  , +  ]
[ E ->  · E + T  , )  ]
[ E ->  · E + T  , -  ]
[ E ->  · E + T  , +  ]
[ E ->  · T  , )  ]
[ E ->  · T  , -  ]
[ E ->  · T  , +  ]
[ T ->  · T * F  , )  ]
[ T ->  · T * F  , -  ]
[ T ->  · T * F  , +  ]
[ T ->  · T * F  , *  ]
[ T ->  · T * F  , /  ]
[ T ->  · T * F  , %  ]
[ T ->  · T / F  , )  ]
[ T ->  · T / F  , -  ]
[ T ->  · T / F  , +  ]
[ T ->  · T / F  , *  ]
[ T ->  · T / F  , /  ]
[ T ->  · T / F  , %  ]
[ T ->  · T % F  , )  ]
[ T ->  · T % F  , -  ]
[ T ->  · T % F  , +  ]
[ T ->  · T % F  , *  ]
[ T ->  · T % F  , /  ]
[ T ->  · T % F  , %  ]
[ T ->  · F  , )  ]
[ T ->  · F  , -  ]
[ T ->  · F  , +  ]
[ T ->  · F  , *  ]
[ T ->  · F  , /  ]
[ T ->  · F  , %  ]
[ F ->  · V  , )  ]
[ F ->  · V  , -  ]
[ F ->  · V  , +  ]
[ F ->  · V  , *  ]
[ F ->  · V  , /  ]
[ F ->  · V  , %  ]
[ F ->  · ( E )  , )  ]
[ F ->  · ( E )  , -  ]
[ F ->  · ( E )  , +  ]
[ F ->  · ( E )  , *  ]
[ F ->  · ( E )  , /  ]
[ F ->  · ( E )  , %  ]
[ F ->  · C  , )  ]
[ F ->  · C  , -  ]
[ F ->  · C  , +  ]
[ F ->  · C  , *  ]
[ F ->  · C  , /  ]
[ F ->  · C  , %  ]
[ F ->  · value ( E , E )  , )  ]
[ F ->  · value ( E , E )  , -  ]
[ F ->  · value ( E , E )  , +  ]
[ F ->  · value ( E , E )  , *  ]
[ F ->  · value ( E , E )  , /  ]
[ F ->  · value ( E , E )  , %  ]
[ F ->  · derivative ( E )  , )  ]
[ F ->  · derivative ( E )  , -  ]
[ F ->  · derivative ( E )  , +  ]
[ F ->  · derivative ( E )  , *  ]
[ F ->  · derivative ( E )  , /  ]
[ F ->  · derivative ( E )  , %  ]
[ F ->  · coeff ( E , E )  , )  ]
[ F ->  · coeff ( E , E )  , -  ]
[ F ->  · coeff ( E , E )  , +  ]
[ F ->  · coeff ( E , E )  , *  ]
[ F ->  · coeff ( E , E )  , /  ]
[ F ->  · coeff ( E , E )  , %  ]
[ F ->  · deg ( E )  , )  ]
[ F ->  · deg ( E )  , -  ]
[ F ->  · deg ( E )  , +  ]
[ F ->  · deg ( E )  , *  ]
[ F ->  · deg ( E )  , /  ]
[ F ->  · deg ( E )  , %  ]
[ F -> deg (  · E )  , ;  ]
[ F -> deg (  · E )  , V  ]
[ F -> deg (  · E )  , :  ]
[ F -> deg (  · E )  , let  ]
[ F -> deg (  · E )  , next  ]
[ F -> deg (  · E )  , if  ]
[ F -> deg (  · E )  , goto  ]
[ F -> deg (  · E )  , load  ]
[ F -> deg (  · E )  , put  ]
[ F -> deg (  · E )  , switch  ]
[ F -> deg (  · E )  , error  ]
[ F -> deg (  · E )  , comment  ]
[ F -> deg (  · E )  , -  ]
[ F -> deg (  · E )  , +  ]
[ F -> deg (  · E )  , *  ]
[ F -> deg (  · E )  , /  ]
[ F -> deg (  · E )  , %  ]
}

set 462 = GOTO( set 399 , ( ) :
{
[ E ->  · E - T  , )  ]
[ E ->  · E - T  , -  ]
[ E ->  · E - T  , +  ]
[ E ->  · E + T  , )  ]
[ E ->  · E + T  , -  ]
[ E ->  · E + T  , +  ]
[ E ->  · T  , )  ]
[ E ->  · T  , -  ]
[ E ->  · T  , +  ]
[ T ->  · T * F  , )  ]
[ T ->  · T * F  , -  ]
[ T ->  · T * F  , +  ]
[ T ->  · T * F  , *  ]
[ T ->  · T * F  , /  ]
[ T ->  · T * F  , %  ]
[ T ->  · T / F  , )  ]
[ T ->  · T / F  , -  ]
[ T ->  · T / F  , +  ]
[ T ->  · T / F  , *  ]
[ T ->  · T / F  , /  ]
[ T ->  · T / F  , %  ]
[ T ->  · T % F  , )  ]
[ T ->  · T % F  , -  ]
[ T ->  · T % F  , +  ]
[ T ->  · T % F  , *  ]
[ T ->  · T % F  , /  ]
[ T ->  · T % F  , %  ]
[ T ->  · F  , )  ]
[ T ->  · F  , -  ]
[ T ->  · F  , +  ]
[ T ->  · F  , *  ]
[ T ->  · F  , /  ]
[ T ->  · F  , %  ]
[ F ->  · V  , )  ]
[ F ->  · V  , -  ]
[ F ->  · V  , +  ]
[ F ->  · V  , *  ]
[ F ->  · V  , /  ]
[ F ->  · V  , %  ]
[ F ->  · ( E )  , )  ]
[ F ->  · ( E )  , -  ]
[ F ->  · ( E )  , +  ]
[ F ->  · ( E )  , *  ]
[ F ->  · ( E )  , /  ]
[ F ->  · ( E )  , %  ]
[ F ->  · C  , )  ]
[ F ->  · C  , -  ]
[ F ->  · C  , +  ]
[ F ->  · C  , *  ]
[ F ->  · C  , /  ]
[ F ->  · C  , %  ]
[ F ->  · value ( E , E )  , )  ]
[ F ->  · value ( E , E )  , -  ]
[ F ->  · value ( E , E )  , +  ]
[ F ->  · value ( E , E )  , *  ]
[ F ->  · value ( E , E )  , /  ]
[ F ->  · value ( E , E )  , %  ]
[ F ->  · derivative ( E )  , )  ]
[ F ->  · derivative ( E )  , -  ]
[ F ->  · derivative ( E )  , +  ]
[ F ->  · derivative ( E )  , *  ]
[ F ->  · derivative ( E )  , /  ]
[ F ->  · derivative ( E )  , %  ]
[ F ->  · coeff ( E , E )  , )  ]
[ F ->  · coeff ( E , E )  , -  ]
[ F ->  · coeff ( E , E )  , +  ]
[ F ->  · coeff ( E , E )  , *  ]
[ F ->  · coeff ( E , E )  , /  ]
[ F ->  · coeff ( E , E )  , %  ]
[ F ->  · deg ( E )  , )  ]
[ F ->  · deg ( E )  , -  ]
[ F ->  · deg ( E )  , +  ]
[ F ->  · deg ( E )  , *  ]
[ F ->  · deg ( E )  , /  ]
[ F ->  · deg ( E )  , %  ]
[ F -> derivative (  · E )  , ;  ]
[ F -> derivative (  · E )  , V  ]
[ F -> derivative (  · E )  , :  ]
[ F -> derivative (  · E )  , let  ]
[ F -> derivative (  · E )  , next  ]
[ F -> derivative (  · E )  , if  ]
[ F -> derivative (  · E )  , goto  ]
[ F -> derivative (  · E )  , load  ]
[ F -> derivative (  · E )  , put  ]
[ F -> derivative (  · E )  , switch  ]
[ F -> derivative (  · E )  , error  ]
[ F -> derivative (  · E )  , comment  ]
[ F -> derivative (  · E )  , -  ]
[ F -> derivative (  · E )  , +  ]
[ F -> derivative (  · E )  , *  ]
[ F -> derivative (  · E )  , /  ]
[ F -> derivative (  · E )  , %  ]
}

set 463 = GOTO( set 400 , ( ) :
{
[ E ->  · E - T  , ,  ]
[ E ->  · E - T  , -  ]
[ E ->  · E - T  , +  ]
[ E ->  · E + T  , ,  ]
[ E ->  · E + T  , -  ]
[ E ->  · E + T  , +  ]
[ E ->  · T  , ,  ]
[ E ->  · T  , -  ]
[ E ->  · T  , +  ]
[ T ->  · T * F  , ,  ]
[ T ->  · T * F  , -  ]
[ T ->  · T * F  , +  ]
[ T ->  · T * F  , *  ]
[ T ->  · T * F  , /  ]
[ T ->  · T * F  , %  ]
[ T ->  · T / F  , ,  ]
[ T ->  · T / F  , -  ]
[ T ->  · T / F  , +  ]
[ T ->  · T / F  , *  ]
[ T ->  · T / F  , /  ]
[ T ->  · T / F  , %  ]
[ T ->  · T % F  , ,  ]
[ T ->  · T % F  , -  ]
[ T ->  · T % F  , +  ]
[ T ->  · T % F  , *  ]
[ T ->  · T % F  , /  ]
[ T ->  · T % F  , %  ]
[ T ->  · F  , ,  ]
[ T ->  · F  , -  ]
[ T ->  · F  , +  ]
[ T ->  · F  , *  ]
[ T ->  · F  , /  ]
[ T ->  · F  , %  ]
[ F ->  · V  , ,  ]
[ F ->  · V  , -  ]
[ F ->  · V  , +  ]
[ F ->  · V  , *  ]
[ F ->  · V  , /  ]
[ F ->  · V  , %  ]
[ F ->  · ( E )  , ,  ]
[ F ->  · ( E )  , -  ]
[ F ->  · ( E )  , +  ]
[ F ->  · ( E )  , *  ]
[ F ->  · ( E )  , /  ]
[ F ->  · ( E )  , %  ]
[ F ->  · C  , ,  ]
[ F ->  · C  , -  ]
[ F ->  · C  , +  ]
[ F ->  · C  , *  ]
[ F ->  · C  , /  ]
[ F ->  · C  , %  ]
[ F ->  · value ( E , E )  , ,  ]
[ F ->  · value ( E , E )  , -  ]
[ F ->  · value ( E , E )  , +  ]
[ F ->  · value ( E , E )  , *  ]
[ F ->  · value ( E , E )  , /  ]
[ F ->  · value ( E , E )  , %  ]
[ F ->  · derivative ( E )  , ,  ]
[ F ->  · derivative ( E )  , -  ]
[ F ->  · derivative ( E )  , +  ]
[ F ->  · derivative ( E )  , *  ]
[ F ->  · derivative ( E )  , /  ]
[ F ->  · derivative ( E )  , %  ]
[ F ->  · coeff ( E , E )  , ,  ]
[ F ->  · coeff ( E , E )  , -  ]
[ F ->  · coeff ( E , E )  , +  ]
[ F ->  · coeff ( E , E )  , *  ]
[ F ->  · coeff ( E , E )  , /  ]
[ F ->  · coeff ( E , E )  , %  ]
[ F ->  · deg ( E )  , ,  ]
[ F ->  · deg ( E )  , -  ]
[ F ->  · deg ( E )  , +  ]
[ F ->  · deg ( E )  , *  ]
[ F ->  · deg ( E )  , /  ]
[ F ->  · deg ( E )  , %  ]
[ F -> value (  · E , E )  , ;  ]
[ F -> value (  · E , E )  , V  ]
[ F -> value (  · E , E )  , :  ]
[ F -> value (  · E , E )  , let  ]
[ F -> value (  · E , E )  , next  ]
[ F -> value (  · E , E )  , if  ]
[ F -> value (  · E , E )  , goto  ]
[ F -> value (  · E , E )  , load  ]
[ F -> value (  · E , E )  , put  ]
[ F -> value (  · E , E )  , switch  ]
[ F -> value (  · E , E )  , error  ]
[ F -> value (  · E , E )  , comment  ]
[ F -> value (  · E , E )  , -  ]
[ F -> value (  · E , E )  , +  ]
[ F -> value (  · E , E )  , *  ]
[ F -> value (  · E , E )  , /  ]
[ F -> value (  · E , E )  , %  ]
}

set 464 = GOTO( set 404 , , ) :
{
[ E ->  · E - T  , )  ]
[ E ->  · E - T  , -  ]
[ E ->  · E - T  , +  ]
[ E ->  · E + T  , )  ]
[ E ->  · E + T  , -  ]
[ E ->  · E + T  , +  ]
[ E ->  · T  , )  ]
[ E ->  · T  , -  ]
[ E ->  · T  , +  ]
[ T ->  · T * F  , )  ]
[ T ->  · T * F  , -  ]
[ T ->  · T * F  , +  ]
[ T ->  · T * F  , *  ]
[ T ->  · T * F  , /  ]
[ T ->  · T * F  , %  ]
[ T ->  · T / F  , )  ]
[ T ->  · T / F  , -  ]
[ T ->  · T / F  , +  ]
[ T ->  · T / F  , *  ]
[ T ->  · T / F  , /  ]
[ T ->  · T / F  , %  ]
[ T ->  · T % F  , )  ]
[ T ->  · T % F  , -  ]
[ T ->  · T % F  , +  ]
[ T ->  · T % F  , *  ]
[ T ->  · T % F  , /  ]
[ T ->  · T % F  , %  ]
[ T ->  · F  , )  ]
[ T ->  · F  , -  ]
[ T ->  · F  , +  ]
[ T ->  · F  , *  ]
[ T ->  · F  , /  ]
[ T ->  · F  , %  ]
[ F ->  · V  , )  ]
[ F ->  · V  , -  ]
[ F ->  · V  , +  ]
[ F ->  · V  , *  ]
[ F ->  · V  , /  ]
[ F ->  · V  , %  ]
[ F ->  · ( E )  , )  ]
[ F ->  · ( E )  , -  ]
[ F ->  · ( E )  , +  ]
[ F ->  · ( E )  , *  ]
[ F ->  · ( E )  , /  ]
[ F ->  · ( E )  , %  ]
[ F ->  · C  , )  ]
[ F ->  · C  , -  ]
[ F ->  · C  , +  ]
[ F ->  · C  , *  ]
[ F ->  · C  , /  ]
[ F ->  · C  , %  ]
[ F ->  · value ( E , E )  , )  ]
[ F ->  · value ( E , E )  , -  ]
[ F ->  · value ( E , E )  , +  ]
[ F ->  · value ( E , E )  , *  ]
[ F ->  · value ( E , E )  , /  ]
[ F ->  · value ( E , E )  , %  ]
[ F ->  · derivative ( E )  , )  ]
[ F ->  · derivative ( E )  , -  ]
[ F ->  · derivative ( E )  , +  ]
[ F ->  · derivative ( E )  , *  ]
[ F ->  · derivative ( E )  , /  ]
[ F ->  · derivative ( E )  , %  ]
[ F ->  · coeff ( E , E )  , )  ]
[ F ->  · coeff ( E , E )  , -  ]
[ F ->  · coeff ( E , E )  , +  ]
[ F ->  · coeff ( E , E )  , *  ]
[ F ->  · coeff ( E , E )  , /  ]
[ F ->  · coeff ( E , E )  , %  ]
[ F ->  · deg ( E )  , )  ]
[ F ->  · deg ( E )  , -  ]
[ F ->  · deg ( E )  , +  ]
[ F ->  · deg ( E )  , *  ]
[ F ->  · deg ( E )  , /  ]
[ F ->  · deg ( E )  , %  ]
[ F -> coeff ( E ,  · E )  , ;  ]
[ F -> coeff ( E ,  · E )  , V  ]
[ F -> coeff ( E ,  · E )  , :  ]
[ F -> coeff ( E ,  · E )  , let  ]
[ F -> coeff ( E ,  · E )  , next  ]
[ F -> coeff ( E ,  · E )  , adding  ]
[ F -> coeff ( E ,  · E )  , if  ]
[ F -> coeff ( E ,  · E )  , goto  ]
[ F -> coeff ( E ,  · E )  , load  ]
[ F -> coeff ( E ,  · E )  , put  ]
[ F -> coeff ( E ,  · E )  , switch  ]
[ F -> coeff ( E ,  · E )  , error  ]
[ F -> coeff ( E ,  · E )  , comment  ]
[ F -> coeff ( E ,  · E )  , -  ]
[ F -> coeff ( E ,  · E )  , +  ]
[ F -> coeff ( E ,  · E )  , *  ]
[ F -> coeff ( E ,  · E )  , /  ]
[ F -> coeff ( E ,  · E )  , %  ]
}

set 465 = GOTO( set 405 , ) ) :
{
[ F -> deg ( E )  ·  , ;  ]
[ F -> deg ( E )  ·  , V  ]
[ F -> deg ( E )  ·  , :  ]
[ F -> deg ( E )  ·  , let  ]
[ F -> deg ( E )  ·  , next  ]
[ F -> deg ( E )  ·  , adding  ]
[ F -> deg ( E )  ·  , if  ]
[ F -> deg ( E )  ·  , goto  ]
[ F -> deg ( E )  ·  , load  ]
[ F -> deg ( E )  ·  , put  ]
[ F -> deg ( E )  ·  , switch  ]
[ F -> deg ( E )  ·  , error  ]
[ F -> deg ( E )  ·  , comment  ]
[ F -> deg ( E )  ·  , -  ]
[ F -> deg ( E )  ·  , +  ]
[ F -> deg ( E )  ·  , *  ]
[ F -> deg ( E )  ·  , /  ]
[ F -> deg ( E )  ·  , %  ]
}

set 466 = GOTO( set 406 , ) ) :
{
[ F -> derivative ( E )  ·  , ;  ]
[ F -> derivative ( E )  ·  , V  ]
[ F -> derivative ( E )  ·  , :  ]
[ F -> derivative ( E )  ·  , let  ]
[ F -> derivative ( E )  ·  , next  ]
[ F -> derivative ( E )  ·  , adding  ]
[ F -> derivative ( E )  ·  , if  ]
[ F -> derivative ( E )  ·  , goto  ]
[ F -> derivative ( E )  ·  , load  ]
[ F -> derivative ( E )  ·  , put  ]
[ F -> derivative ( E )  ·  , switch  ]
[ F -> derivative ( E )  ·  , error  ]
[ F -> derivative ( E )  ·  , comment  ]
[ F -> derivative ( E )  ·  , -  ]
[ F -> derivative ( E )  ·  , +  ]
[ F -> derivative ( E )  ·  , *  ]
[ F -> derivative ( E )  ·  , /  ]
[ F -> derivative ( E )  ·  , %  ]
}

set 467 = GOTO( set 407 , , ) :
{
[ E ->  · E - T  , )  ]
[ E ->  · E - T  , -  ]
[ E ->  · E - T  , +  ]
[ E ->  · E + T  , )  ]
[ E ->  · E + T  , -  ]
[ E ->  · E + T  , +  ]
[ E ->  · T  , )  ]
[ E ->  · T  , -  ]
[ E ->  · T  , +  ]
[ T ->  · T * F  , )  ]
[ T ->  · T * F  , -  ]
[ T ->  · T * F  , +  ]
[ T ->  · T * F  , *  ]
[ T ->  · T * F  , /  ]
[ T ->  · T * F  , %  ]
[ T ->  · T / F  , )  ]
[ T ->  · T / F  , -  ]
[ T ->  · T / F  , +  ]
[ T ->  · T / F  , *  ]
[ T ->  · T / F  , /  ]
[ T ->  · T / F  , %  ]
[ T ->  · T % F  , )  ]
[ T ->  · T % F  , -  ]
[ T ->  · T % F  , +  ]
[ T ->  · T % F  , *  ]
[ T ->  · T % F  , /  ]
[ T ->  · T % F  , %  ]
[ T ->  · F  , )  ]
[ T ->  · F  , -  ]
[ T ->  · F  , +  ]
[ T ->  · F  , *  ]
[ T ->  · F  , /  ]
[ T ->  · F  , %  ]
[ F ->  · V  , )  ]
[ F ->  · V  , -  ]
[ F ->  · V  , +  ]
[ F ->  · V  , *  ]
[ F ->  · V  , /  ]
[ F ->  · V  , %  ]
[ F ->  · ( E )  , )  ]
[ F ->  · ( E )  , -  ]
[ F ->  · ( E )  , +  ]
[ F ->  · ( E )  , *  ]
[ F ->  · ( E )  , /  ]
[ F ->  · ( E )  , %  ]
[ F ->  · C  , )  ]
[ F ->  · C  , -  ]
[ F ->  · C  , +  ]
[ F ->  · C  , *  ]
[ F ->  · C  , /  ]
[ F ->  · C  , %  ]
[ F ->  · value ( E , E )  , )  ]
[ F ->  · value ( E , E )  , -  ]
[ F ->  · value ( E , E )  , +  ]
[ F ->  · value ( E , E )  , *  ]
[ F ->  · value ( E , E )  , /  ]
[ F ->  · value ( E , E )  , %  ]
[ F ->  · derivative ( E )  , )  ]
[ F ->  · derivative ( E )  , -  ]
[ F ->  · derivative ( E )  , +  ]
[ F ->  · derivative ( E )  , *  ]
[ F ->  · derivative ( E )  , /  ]
[ F ->  · derivative ( E )  , %  ]
[ F ->  · coeff ( E , E )  , )  ]
[ F ->  · coeff ( E , E )  , -  ]
[ F ->  · coeff ( E , E )  , +  ]
[ F ->  · coeff ( E , E )  , *  ]
[ F ->  · coeff ( E , E )  , /  ]
[ F ->  · coeff ( E , E )  , %  ]
[ F ->  · deg ( E )  , )  ]
[ F ->  · deg ( E )  , -  ]
[ F ->  · deg ( E )  , +  ]
[ F ->  · deg ( E )  , *  ]
[ F ->  · deg ( E )  , /  ]
[ F ->  · deg ( E )  , %  ]
[ F -> value ( E ,  · E )  , ;  ]
[ F -> value ( E ,  · E )  , V  ]
[ F -> value ( E ,  · E )  , :  ]
[ F -> value ( E ,  · E )  , let  ]
[ F -> value ( E ,  · E )  , next  ]
[ F -> value ( E ,  · E )  , adding  ]
[ F -> value ( E ,  · E )  , if  ]
[ F -> value ( E ,  · E )  , goto  ]
[ F -> value ( E ,  · E )  , load  ]
[ F -> value ( E ,  · E )  , put  ]
[ F -> value ( E ,  · E )  , switch  ]
[ F -> value ( E ,  · E )  , error  ]
[ F -> value ( E ,  · E )  , comment  ]
[ F -> value ( E ,  · E )  , -  ]
[ F -> value ( E ,  · E )  , +  ]
[ F -> value ( E ,  · E )  , *  ]
[ F -> value ( E ,  · E )  , /  ]
[ F -> value ( E ,  · E )  , %  ]
}

set 468 = GOTO( set 408 , ) ) :
{
[ F -> coeff ( E , E )  ·  , to  ]
[ F -> coeff ( E , E )  ·  , -  ]
[ F -> coeff ( E , E )  ·  , +  ]
[ F -> coeff ( E , E )  ·  , *  ]
[ F -> coeff ( E , E )  ·  , /  ]
[ F -> coeff ( E , E )  ·  , %  ]
}

set 469 = GOTO( set 409 , ) ) :
{
[ F -> value ( E , E )  ·  , to  ]
[ F -> value ( E , E )  ·  , -  ]
[ F -> value ( E , E )  ·  , +  ]
[ F -> value ( E , E )  ·  , *  ]
[ F -> value ( E , E )  ·  , /  ]
[ F -> value ( E , E )  ·  , %  ]
}

set 470 = GOTO( set 419 , ; ) :
{
[ <break> -> break ;  ·  , end  ]
}

set 471 = GOTO( set 420 , : ) :
{
[ <op> -> V <listV> :  · TYPE ;  , ;  ]
[ <op> -> V <listV> :  · TYPE ;  , V  ]
[ <op> -> V <listV> :  · TYPE ;  , :  ]
[ <op> -> V <listV> :  · TYPE ;  , let  ]
[ <op> -> V <listV> :  · TYPE ;  , if  ]
[ <op> -> V <listV> :  · TYPE ;  , goto  ]
[ <op> -> V <listV> :  · TYPE ;  , load  ]
[ <op> -> V <listV> :  · TYPE ;  , put  ]
[ <op> -> V <listV> :  · TYPE ;  , switch  ]
[ <op> -> V <listV> :  · TYPE ;  , end  ]
[ <op> -> V <listV> :  · TYPE ;  , break  ]
[ <op> -> V <listV> :  · TYPE ;  , error  ]
[ <op> -> V <listV> :  · TYPE ;  , comment  ]
}

set 472 = GOTO( set 421 , V ) :
{
[ <op> -> V for V  · = E to E <step> <pr> next V  , ;  ]
[ <op> -> V for V  · = E to E <step> <pr> next V  , V  ]
[ <op> -> V for V  · = E to E <step> <pr> next V  , :  ]
[ <op> -> V for V  · = E to E <step> <pr> next V  , let  ]
[ <op> -> V for V  · = E to E <step> <pr> next V  , if  ]
[ <op> -> V for V  · = E to E <step> <pr> next V  , goto  ]
[ <op> -> V for V  · = E to E <step> <pr> next V  , load  ]
[ <op> -> V for V  · = E to E <step> <pr> next V  , put  ]
[ <op> -> V for V  · = E to E <step> <pr> next V  , switch  ]
[ <op> -> V for V  · = E to E <step> <pr> next V  , end  ]
[ <op> -> V for V  · = E to E <step> <pr> next V  , break  ]
[ <op> -> V for V  · = E to E <step> <pr> next V  , error  ]
[ <op> -> V for V  · = E to E <step> <pr> next V  , comment  ]
}

set 473 = GOTO( set 424 , goto ) :
{
[ <op> -> if <test> goto  · V <else> ;  , ;  ]
[ <op> -> if <test> goto  · V <else> ;  , V  ]
[ <op> -> if <test> goto  · V <else> ;  , :  ]
[ <op> -> if <test> goto  · V <else> ;  , let  ]
[ <op> -> if <test> goto  · V <else> ;  , if  ]
[ <op> -> if <test> goto  · V <else> ;  , goto  ]
[ <op> -> if <test> goto  · V <else> ;  , load  ]
[ <op> -> if <test> goto  · V <else> ;  , put  ]
[ <op> -> if <test> goto  · V <else> ;  , switch  ]
[ <op> -> if <test> goto  · V <else> ;  , end  ]
[ <op> -> if <test> goto  · V <else> ;  , break  ]
[ <op> -> if <test> goto  · V <else> ;  , error  ]
[ <op> -> if <test> goto  · V <else> ;  , comment  ]
}

set 474 = GOTO( set 425 , <listA> ) :
{
[ <op> -> let V <listA>  ·  , ;  ]
[ <op> -> let V <listA>  ·  , V  ]
[ <op> -> let V <listA>  ·  , :  ]
[ <op> -> let V <listA>  ·  , let  ]
[ <op> -> let V <listA>  ·  , if  ]
[ <op> -> let V <listA>  ·  , goto  ]
[ <op> -> let V <listA>  ·  , load  ]
[ <op> -> let V <listA>  ·  , put  ]
[ <op> -> let V <listA>  ·  , switch  ]
[ <op> -> let V <listA>  ·  , end  ]
[ <op> -> let V <listA>  ·  , break  ]
[ <op> -> let V <listA>  ·  , error  ]
[ <op> -> let V <listA>  ·  , comment  ]
}

set 475 = GOTO( set 425 , = ) :
{
[ <listA> -> =  · V <listA>  , ;  ]
[ <listA> -> =  · V <listA>  , V  ]
[ <listA> -> =  · V <listA>  , :  ]
[ <listA> -> =  · V <listA>  , let  ]
[ <listA> -> =  · V <listA>  , if  ]
[ <listA> -> =  · V <listA>  , goto  ]
[ <listA> -> =  · V <listA>  , load  ]
[ <listA> -> =  · V <listA>  , put  ]
[ <listA> -> =  · V <listA>  , switch  ]
[ <listA> -> =  · V <listA>  , end  ]
[ <listA> -> =  · V <listA>  , break  ]
[ <listA> -> =  · V <listA>  , error  ]
[ <listA> -> =  · V <listA>  , comment  ]
[ <listA> -> =  · E ;  , ;  ]
[ <listA> -> =  · E ;  , V  ]
[ <listA> -> =  · E ;  , :  ]
[ <listA> -> =  · E ;  , let  ]
[ <listA> -> =  · E ;  , if  ]
[ <listA> -> =  · E ;  , goto  ]
[ <listA> -> =  · E ;  , load  ]
[ <listA> -> =  · E ;  , put  ]
[ <listA> -> =  · E ;  , switch  ]
[ <listA> -> =  · E ;  , end  ]
[ <listA> -> =  · E ;  , break  ]
[ <listA> -> =  · E ;  , error  ]
[ <listA> -> =  · E ;  , comment  ]
[ E ->  · E - T  , ;  ]
[ E ->  · E - T  , -  ]
[ E ->  · E - T  , +  ]
[ E ->  · E + T  , ;  ]
[ E ->  · E + T  , -  ]
[ E ->  · E + T  , +  ]
[ E ->  · T  , ;  ]
[ E ->  · T  , -  ]
[ E ->  · T  , +  ]
[ T ->  · T * F  , ;  ]
[ T ->  · T * F  , -  ]
[ T ->  · T * F  , +  ]
[ T ->  · T * F  , *  ]
[ T ->  · T * F  , /  ]
[ T ->  · T * F  , %  ]
[ T ->  · T / F  , ;  ]
[ T ->  · T / F  , -  ]
[ T ->  · T / F  , +  ]
[ T ->  · T / F  , *  ]
[ T ->  · T / F  , /  ]
[ T ->  · T / F  , %  ]
[ T ->  · T % F  , ;  ]
[ T ->  · T % F  , -  ]
[ T ->  · T % F  , +  ]
[ T ->  · T % F  , *  ]
[ T ->  · T % F  , /  ]
[ T ->  · T % F  , %  ]
[ T ->  · F  , ;  ]
[ T ->  · F  , -  ]
[ T ->  · F  , +  ]
[ T ->  · F  , *  ]
[ T ->  · F  , /  ]
[ T ->  · F  , %  ]
[ F ->  · V  , ;  ]
[ F ->  · V  , -  ]
[ F ->  · V  , +  ]
[ F ->  · V  , *  ]
[ F ->  · V  , /  ]
[ F ->  · V  , %  ]
[ F ->  · ( E )  , ;  ]
[ F ->  · ( E )  , -  ]
[ F ->  · ( E )  , +  ]
[ F ->  · ( E )  , *  ]
[ F ->  · ( E )  , /  ]
[ F ->  · ( E )  , %  ]
[ F ->  · C  , ;  ]
[ F ->  · C  , -  ]
[ F ->  · C  , +  ]
[ F ->  · C  , *  ]
[ F ->  · C  , /  ]
[ F ->  · C  , %  ]
[ F ->  · value ( E , E )  , ;  ]
[ F ->  · value ( E , E )  , -  ]
[ F ->  · value ( E , E )  , +  ]
[ F ->  · value ( E , E )  , *  ]
[ F ->  · value ( E , E )  , /  ]
[ F ->  · value ( E , E )  , %  ]
[ F ->  · derivative ( E )  , ;  ]
[ F ->  · derivative ( E )  , -  ]
[ F ->  · derivative ( E )  , +  ]
[ F ->  · derivative ( E )  , *  ]
[ F ->  · derivative ( E )  , /  ]
[ F ->  · derivative ( E )  , %  ]
[ F ->  · coeff ( E , E )  , ;  ]
[ F ->  · coeff ( E , E )  , -  ]
[ F ->  · coeff ( E , E )  , +  ]
[ F ->  · coeff ( E , E )  , *  ]
[ F ->  · coeff ( E , E )  , /  ]
[ F ->  · coeff ( E , E )  , %  ]
[ F ->  · deg ( E )  , ;  ]
[ F ->  · deg ( E )  , -  ]
[ F ->  · deg ( E )  , +  ]
[ F ->  · deg ( E )  , *  ]
[ F ->  · deg ( E )  , /  ]
[ F ->  · deg ( E )  , %  ]
}

set 476 = GOTO( set 426 , V ) :
{
[ <op> -> load ( V  · <listV> ) ;  , ;  ]
[ <op> -> load ( V  · <listV> ) ;  , V  ]
[ <op> -> load ( V  · <listV> ) ;  , :  ]
[ <op> -> load ( V  · <listV> ) ;  , let  ]
[ <op> -> load ( V  · <listV> ) ;  , if  ]
[ <op> -> load ( V  · <listV> ) ;  , goto  ]
[ <op> -> load ( V  · <listV> ) ;  , load  ]
[ <op> -> load ( V  · <listV> ) ;  , put  ]
[ <op> -> load ( V  · <listV> ) ;  , switch  ]
[ <op> -> load ( V  · <listV> ) ;  , end  ]
[ <op> -> load ( V  · <listV> ) ;  , break  ]
[ <op> -> load ( V  · <listV> ) ;  , error  ]
[ <op> -> load ( V  · <listV> ) ;  , comment  ]
[ <listV> ->  ·  , )  ]
[ <listV> ->  · , V <listV>  , )  ]
}

set 477 = GOTO( set 427 , E ) :
{
[ <op> -> put ( E  · <listE> ) ;  , ;  ]
[ <op> -> put ( E  · <listE> ) ;  , V  ]
[ <op> -> put ( E  · <listE> ) ;  , :  ]
[ <op> -> put ( E  · <listE> ) ;  , let  ]
[ <op> -> put ( E  · <listE> ) ;  , if  ]
[ <op> -> put ( E  · <listE> ) ;  , goto  ]
[ <op> -> put ( E  · <listE> ) ;  , load  ]
[ <op> -> put ( E  · <listE> ) ;  , put  ]
[ <op> -> put ( E  · <listE> ) ;  , switch  ]
[ <op> -> put ( E  · <listE> ) ;  , end  ]
[ <op> -> put ( E  · <listE> ) ;  , break  ]
[ <op> -> put ( E  · <listE> ) ;  , error  ]
[ <op> -> put ( E  · <listE> ) ;  , comment  ]
[ E -> E  · - T  , ,  ]
[ E -> E  · - T  , )  ]
[ E -> E  · - T  , -  ]
[ E -> E  · - T  , +  ]
[ E -> E  · + T  , ,  ]
[ E -> E  · + T  , )  ]
[ E -> E  · + T  , -  ]
[ E -> E  · + T  , +  ]
[ <listE> ->  ·  , )  ]
[ <listE> ->  · , E <listE>  , )  ]
}

set 478 = GOTO( set 428 , E ) :
{
[ <op> -> switch ( E  · ) <switch_body> end switch ;  , ;  ]
[ <op> -> switch ( E  · ) <switch_body> end switch ;  , V  ]
[ <op> -> switch ( E  · ) <switch_body> end switch ;  , :  ]
[ <op> -> switch ( E  · ) <switch_body> end switch ;  , let  ]
[ <op> -> switch ( E  · ) <switch_body> end switch ;  , if  ]
[ <op> -> switch ( E  · ) <switch_body> end switch ;  , goto  ]
[ <op> -> switch ( E  · ) <switch_body> end switch ;  , load  ]
[ <op> -> switch ( E  · ) <switch_body> end switch ;  , put  ]
[ <op> -> switch ( E  · ) <switch_body> end switch ;  , switch  ]
[ <op> -> switch ( E  · ) <switch_body> end switch ;  , end  ]
[ <op> -> switch ( E  · ) <switch_body> end switch ;  , break  ]
[ <op> -> switch ( E  · ) <switch_body> end switch ;  , error  ]
[ <op> -> switch ( E  · ) <switch_body> end switch ;  , comment  ]
[ E -> E  · - T  , )  ]
[ E -> E  · - T  , -  ]
[ E -> E  · - T  , +  ]
[ E -> E  · + T  , )  ]
[ E -> E  · + T  , -  ]
[ E -> E  · + T  , +  ]
}

set 479 = GOTO( set 431 , <list_case> ) :
{
[ <list_case> -> case C : <pr> <break> <list_case>  ·  , end  ]
[ <list_case> -> case C : <pr> <break> <list_case>  ·  , default  ]
}

set 480 = GOTO( set 432 , ; ) :
{
[ <break> -> break ;  ·  , end  ]
[ <break> -> break ;  ·  , case  ]
[ <break> -> break ;  ·  , default  ]
}

set 481 = GOTO( set 433 , : ) :
{
[ <op> -> V <listV> :  · TYPE ;  , ;  ]
[ <op> -> V <listV> :  · TYPE ;  , V  ]
[ <op> -> V <listV> :  · TYPE ;  , :  ]
[ <op> -> V <listV> :  · TYPE ;  , let  ]
[ <op> -> V <listV> :  · TYPE ;  , if  ]
[ <op> -> V <listV> :  · TYPE ;  , goto  ]
[ <op> -> V <listV> :  · TYPE ;  , load  ]
[ <op> -> V <listV> :  · TYPE ;  , put  ]
[ <op> -> V <listV> :  · TYPE ;  , switch  ]
[ <op> -> V <listV> :  · TYPE ;  , end  ]
[ <op> -> V <listV> :  · TYPE ;  , case  ]
[ <op> -> V <listV> :  · TYPE ;  , break  ]
[ <op> -> V <listV> :  · TYPE ;  , default  ]
[ <op> -> V <listV> :  · TYPE ;  , error  ]
[ <op> -> V <listV> :  · TYPE ;  , comment  ]
}

set 482 = GOTO( set 434 , V ) :
{
[ <op> -> V for V  · = E to E <step> <pr> next V  , ;  ]
[ <op> -> V for V  · = E to E <step> <pr> next V  , V  ]
[ <op> -> V for V  · = E to E <step> <pr> next V  , :  ]
[ <op> -> V for V  · = E to E <step> <pr> next V  , let  ]
[ <op> -> V for V  · = E to E <step> <pr> next V  , if  ]
[ <op> -> V for V  · = E to E <step> <pr> next V  , goto  ]
[ <op> -> V for V  · = E to E <step> <pr> next V  , load  ]
[ <op> -> V for V  · = E to E <step> <pr> next V  , put  ]
[ <op> -> V for V  · = E to E <step> <pr> next V  , switch  ]
[ <op> -> V for V  · = E to E <step> <pr> next V  , end  ]
[ <op> -> V for V  · = E to E <step> <pr> next V  , case  ]
[ <op> -> V for V  · = E to E <step> <pr> next V  , break  ]
[ <op> -> V for V  · = E to E <step> <pr> next V  , default  ]
[ <op> -> V for V  · = E to E <step> <pr> next V  , error  ]
[ <op> -> V for V  · = E to E <step> <pr> next V  , comment  ]
}

set 483 = GOTO( set 437 , goto ) :
{
[ <op> -> if <test> goto  · V <else> ;  , ;  ]
[ <op> -> if <test> goto  · V <else> ;  , V  ]
[ <op> -> if <test> goto  · V <else> ;  , :  ]
[ <op> -> if <test> goto  · V <else> ;  , let  ]
[ <op> -> if <test> goto  · V <else> ;  , if  ]
[ <op> -> if <test> goto  · V <else> ;  , goto  ]
[ <op> -> if <test> goto  · V <else> ;  , load  ]
[ <op> -> if <test> goto  · V <else> ;  , put  ]
[ <op> -> if <test> goto  · V <else> ;  , switch  ]
[ <op> -> if <test> goto  · V <else> ;  , end  ]
[ <op> -> if <test> goto  · V <else> ;  , case  ]
[ <op> -> if <test> goto  · V <else> ;  , break  ]
[ <op> -> if <test> goto  · V <else> ;  , default  ]
[ <op> -> if <test> goto  · V <else> ;  , error  ]
[ <op> -> if <test> goto  · V <else> ;  , comment  ]
}

set 484 = GOTO( set 438 , <listA> ) :
{
[ <op> -> let V <listA>  ·  , ;  ]
[ <op> -> let V <listA>  ·  , V  ]
[ <op> -> let V <listA>  ·  , :  ]
[ <op> -> let V <listA>  ·  , let  ]
[ <op> -> let V <listA>  ·  , if  ]
[ <op> -> let V <listA>  ·  , goto  ]
[ <op> -> let V <listA>  ·  , load  ]
[ <op> -> let V <listA>  ·  , put  ]
[ <op> -> let V <listA>  ·  , switch  ]
[ <op> -> let V <listA>  ·  , end  ]
[ <op> -> let V <listA>  ·  , case  ]
[ <op> -> let V <listA>  ·  , break  ]
[ <op> -> let V <listA>  ·  , default  ]
[ <op> -> let V <listA>  ·  , error  ]
[ <op> -> let V <listA>  ·  , comment  ]
}

set 485 = GOTO( set 438 , = ) :
{
[ <listA> -> =  · V <listA>  , ;  ]
[ <listA> -> =  · V <listA>  , V  ]
[ <listA> -> =  · V <listA>  , :  ]
[ <listA> -> =  · V <listA>  , let  ]
[ <listA> -> =  · V <listA>  , if  ]
[ <listA> -> =  · V <listA>  , goto  ]
[ <listA> -> =  · V <listA>  , load  ]
[ <listA> -> =  · V <listA>  , put  ]
[ <listA> -> =  · V <listA>  , switch  ]
[ <listA> -> =  · V <listA>  , end  ]
[ <listA> -> =  · V <listA>  , case  ]
[ <listA> -> =  · V <listA>  , break  ]
[ <listA> -> =  · V <listA>  , default  ]
[ <listA> -> =  · V <listA>  , error  ]
[ <listA> -> =  · V <listA>  , comment  ]
[ <listA> -> =  · E ;  , ;  ]
[ <listA> -> =  · E ;  , V  ]
[ <listA> -> =  · E ;  , :  ]
[ <listA> -> =  · E ;  , let  ]
[ <listA> -> =  · E ;  , if  ]
[ <listA> -> =  · E ;  , goto  ]
[ <listA> -> =  · E ;  , load  ]
[ <listA> -> =  · E ;  , put  ]
[ <listA> -> =  · E ;  , switch  ]
[ <listA> -> =  · E ;  , end  ]
[ <listA> -> =  · E ;  , case  ]
[ <listA> -> =  · E ;  , break  ]
[ <listA> -> =  · E ;  , default  ]
[ <listA> -> =  · E ;  , error  ]
[ <listA> -> =  · E ;  , comment  ]
[ E ->  · E - T  , ;  ]
[ E ->  · E - T  , -  ]
[ E ->  · E - T  , +  ]
[ E ->  · E + T  , ;  ]
[ E ->  · E + T  , -  ]
[ E ->  · E + T  , +  ]
[ E ->  · T  , ;  ]
[ E ->  · T  , -  ]
[ E ->  · T  , +  ]
[ T ->  · T * F  , ;  ]
[ T ->  · T * F  , -  ]
[ T ->  · T * F  , +  ]
[ T ->  · T * F  , *  ]
[ T ->  · T * F  , /  ]
[ T ->  · T * F  , %  ]
[ T ->  · T / F  , ;  ]
[ T ->  · T / F  , -  ]
[ T ->  · T / F  , +  ]
[ T ->  · T / F  , *  ]
[ T ->  · T / F  , /  ]
[ T ->  · T / F  , %  ]
[ T ->  · T % F  , ;  ]
[ T ->  · T % F  , -  ]
[ T ->  · T % F  , +  ]
[ T ->  · T % F  , *  ]
[ T ->  · T % F  , /  ]
[ T ->  · T % F  , %  ]
[ T ->  · F  , ;  ]
[ T ->  · F  , -  ]
[ T ->  · F  , +  ]
[ T ->  · F  , *  ]
[ T ->  · F  , /  ]
[ T ->  · F  , %  ]
[ F ->  · V  , ;  ]
[ F ->  · V  , -  ]
[ F ->  · V  , +  ]
[ F ->  · V  , *  ]
[ F ->  · V  , /  ]
[ F ->  · V  , %  ]
[ F ->  · ( E )  , ;  ]
[ F ->  · ( E )  , -  ]
[ F ->  · ( E )  , +  ]
[ F ->  · ( E )  , *  ]
[ F ->  · ( E )  , /  ]
[ F ->  · ( E )  , %  ]
[ F ->  · C  , ;  ]
[ F ->  · C  , -  ]
[ F ->  · C  , +  ]
[ F ->  · C  , *  ]
[ F ->  · C  , /  ]
[ F ->  · C  , %  ]
[ F ->  · value ( E , E )  , ;  ]
[ F ->  · value ( E , E )  , -  ]
[ F ->  · value ( E , E )  , +  ]
[ F ->  · value ( E , E )  , *  ]
[ F ->  · value ( E , E )  , /  ]
[ F ->  · value ( E , E )  , %  ]
[ F ->  · derivative ( E )  , ;  ]
[ F ->  · derivative ( E )  , -  ]
[ F ->  · derivative ( E )  , +  ]
[ F ->  · derivative ( E )  , *  ]
[ F ->  · derivative ( E )  , /  ]
[ F ->  · derivative ( E )  , %  ]
[ F ->  · coeff ( E , E )  , ;  ]
[ F ->  · coeff ( E , E )  , -  ]
[ F ->  · coeff ( E , E )  , +  ]
[ F ->  · coeff ( E , E )  , *  ]
[ F ->  · coeff ( E , E )  , /  ]
[ F ->  · coeff ( E , E )  , %  ]
[ F ->  · deg ( E )  , ;  ]
[ F ->  · deg ( E )  , -  ]
[ F ->  · deg ( E )  , +  ]
[ F ->  · deg ( E )  , *  ]
[ F ->  · deg ( E )  , /  ]
[ F ->  · deg ( E )  , %  ]
}

set 486 = GOTO( set 439 , V ) :
{
[ <op> -> load ( V  · <listV> ) ;  , ;  ]
[ <op> -> load ( V  · <listV> ) ;  , V  ]
[ <op> -> load ( V  · <listV> ) ;  , :  ]
[ <op> -> load ( V  · <listV> ) ;  , let  ]
[ <op> -> load ( V  · <listV> ) ;  , if  ]
[ <op> -> load ( V  · <listV> ) ;  , goto  ]
[ <op> -> load ( V  · <listV> ) ;  , load  ]
[ <op> -> load ( V  · <listV> ) ;  , put  ]
[ <op> -> load ( V  · <listV> ) ;  , switch  ]
[ <op> -> load ( V  · <listV> ) ;  , end  ]
[ <op> -> load ( V  · <listV> ) ;  , case  ]
[ <op> -> load ( V  · <listV> ) ;  , break  ]
[ <op> -> load ( V  · <listV> ) ;  , default  ]
[ <op> -> load ( V  · <listV> ) ;  , error  ]
[ <op> -> load ( V  · <listV> ) ;  , comment  ]
[ <listV> ->  ·  , )  ]
[ <listV> ->  · , V <listV>  , )  ]
}

set 487 = GOTO( set 440 , E ) :
{
[ <op> -> put ( E  · <listE> ) ;  , ;  ]
[ <op> -> put ( E  · <listE> ) ;  , V  ]
[ <op> -> put ( E  · <listE> ) ;  , :  ]
[ <op> -> put ( E  · <listE> ) ;  , let  ]
[ <op> -> put ( E  · <listE> ) ;  , if  ]
[ <op> -> put ( E  · <listE> ) ;  , goto  ]
[ <op> -> put ( E  · <listE> ) ;  , load  ]
[ <op> -> put ( E  · <listE> ) ;  , put  ]
[ <op> -> put ( E  · <listE> ) ;  , switch  ]
[ <op> -> put ( E  · <listE> ) ;  , end  ]
[ <op> -> put ( E  · <listE> ) ;  , case  ]
[ <op> -> put ( E  · <listE> ) ;  , break  ]
[ <op> -> put ( E  · <listE> ) ;  , default  ]
[ <op> -> put ( E  · <listE> ) ;  , error  ]
[ <op> -> put ( E  · <listE> ) ;  , comment  ]
[ E -> E  · - T  , ,  ]
[ E -> E  · - T  , )  ]
[ E -> E  · - T  , -  ]
[ E -> E  · - T  , +  ]
[ E -> E  · + T  , ,  ]
[ E -> E  · + T  , )  ]
[ E -> E  · + T  , -  ]
[ E -> E  · + T  , +  ]
[ <listE> ->  ·  , )  ]
[ <listE> ->  · , E <listE>  , )  ]
}

set 488 = GOTO( set 441 , E ) :
{
[ <op> -> switch ( E  · ) <switch_body> end switch ;  , ;  ]
[ <op> -> switch ( E  · ) <switch_body> end switch ;  , V  ]
[ <op> -> switch ( E  · ) <switch_body> end switch ;  , :  ]
[ <op> -> switch ( E  · ) <switch_body> end switch ;  , let  ]
[ <op> -> switch ( E  · ) <switch_body> end switch ;  , if  ]
[ <op> -> switch ( E  · ) <switch_body> end switch ;  , goto  ]
[ <op> -> switch ( E  · ) <switch_body> end switch ;  , load  ]
[ <op> -> switch ( E  · ) <switch_body> end switch ;  , put  ]
[ <op> -> switch ( E  · ) <switch_body> end switch ;  , switch  ]
[ <op> -> switch ( E  · ) <switch_body> end switch ;  , end  ]
[ <op> -> switch ( E  · ) <switch_body> end switch ;  , case  ]
[ <op> -> switch ( E  · ) <switch_body> end switch ;  , break  ]
[ <op> -> switch ( E  · ) <switch_body> end switch ;  , default  ]
[ <op> -> switch ( E  · ) <switch_body> end switch ;  , error  ]
[ <op> -> switch ( E  · ) <switch_body> end switch ;  , comment  ]
[ E -> E  · - T  , )  ]
[ E -> E  · - T  , -  ]
[ E -> E  · - T  , +  ]
[ E -> E  · + T  , )  ]
[ E -> E  · + T  , -  ]
[ E -> E  · + T  , +  ]
}

set 489 = GOTO( set 444 , V ) :
{
[ <op> -> V for V = E to E <step> <pr> next V  ·  ,  ]
[ <op> -> V for V = E to E <step> <pr> next V  ·  , ;  ]
[ <op> -> V for V = E to E <step> <pr> next V  ·  , V  ]
[ <op> -> V for V = E to E <step> <pr> next V  ·  , :  ]
[ <op> -> V for V = E to E <step> <pr> next V  ·  , let  ]
[ <op> -> V for V = E to E <step> <pr> next V  ·  , if  ]
[ <op> -> V for V = E to E <step> <pr> next V  ·  , goto  ]
[ <op> -> V for V = E to E <step> <pr> next V  ·  , load  ]
[ <op> -> V for V = E to E <step> <pr> next V  ·  , put  ]
[ <op> -> V for V = E to E <step> <pr> next V  ·  , switch  ]
[ <op> -> V for V = E to E <step> <pr> next V  ·  , error  ]
[ <op> -> V for V = E to E <step> <pr> next V  ·  , comment  ]
}

set 490 = GOTO( set 445 , : ) :
{
[ <op> -> V <listV> :  · TYPE ;  , ;  ]
[ <op> -> V <listV> :  · TYPE ;  , V  ]
[ <op> -> V <listV> :  · TYPE ;  , :  ]
[ <op> -> V <listV> :  · TYPE ;  , let  ]
[ <op> -> V <listV> :  · TYPE ;  , next  ]
[ <op> -> V <listV> :  · TYPE ;  , if  ]
[ <op> -> V <listV> :  · TYPE ;  , goto  ]
[ <op> -> V <listV> :  · TYPE ;  , load  ]
[ <op> -> V <listV> :  · TYPE ;  , put  ]
[ <op> -> V <listV> :  · TYPE ;  , switch  ]
[ <op> -> V <listV> :  · TYPE ;  , error  ]
[ <op> -> V <listV> :  · TYPE ;  , comment  ]
}

set 491 = GOTO( set 446 , V ) :
{
[ <op> -> V for V  · = E to E <step> <pr> next V  , ;  ]
[ <op> -> V for V  · = E to E <step> <pr> next V  , V  ]
[ <op> -> V for V  · = E to E <step> <pr> next V  , :  ]
[ <op> -> V for V  · = E to E <step> <pr> next V  , let  ]
[ <op> -> V for V  · = E to E <step> <pr> next V  , next  ]
[ <op> -> V for V  · = E to E <step> <pr> next V  , if  ]
[ <op> -> V for V  · = E to E <step> <pr> next V  , goto  ]
[ <op> -> V for V  · = E to E <step> <pr> next V  , load  ]
[ <op> -> V for V  · = E to E <step> <pr> next V  , put  ]
[ <op> -> V for V  · = E to E <step> <pr> next V  , switch  ]
[ <op> -> V for V  · = E to E <step> <pr> next V  , error  ]
[ <op> -> V for V  · = E to E <step> <pr> next V  , comment  ]
}

set 492 = GOTO( set 449 , goto ) :
{
[ <op> -> if <test> goto  · V <else> ;  , ;  ]
[ <op> -> if <test> goto  · V <else> ;  , V  ]
[ <op> -> if <test> goto  · V <else> ;  , :  ]
[ <op> -> if <test> goto  · V <else> ;  , let  ]
[ <op> -> if <test> goto  · V <else> ;  , next  ]
[ <op> -> if <test> goto  · V <else> ;  , if  ]
[ <op> -> if <test> goto  · V <else> ;  , goto  ]
[ <op> -> if <test> goto  · V <else> ;  , load  ]
[ <op> -> if <test> goto  · V <else> ;  , put  ]
[ <op> -> if <test> goto  · V <else> ;  , switch  ]
[ <op> -> if <test> goto  · V <else> ;  , error  ]
[ <op> -> if <test> goto  · V <else> ;  , comment  ]
}

set 493 = GOTO( set 450 , <listA> ) :
{
[ <op> -> let V <listA>  ·  , ;  ]
[ <op> -> let V <listA>  ·  , V  ]
[ <op> -> let V <listA>  ·  , :  ]
[ <op> -> let V <listA>  ·  , let  ]
[ <op> -> let V <listA>  ·  , next  ]
[ <op> -> let V <listA>  ·  , if  ]
[ <op> -> let V <listA>  ·  , goto  ]
[ <op> -> let V <listA>  ·  , load  ]
[ <op> -> let V <listA>  ·  , put  ]
[ <op> -> let V <listA>  ·  , switch  ]
[ <op> -> let V <listA>  ·  , error  ]
[ <op> -> let V <listA>  ·  , comment  ]
}

set 494 = GOTO( set 450 , = ) :
{
[ <listA> -> =  · V <listA>  , ;  ]
[ <listA> -> =  · V <listA>  , V  ]
[ <listA> -> =  · V <listA>  , :  ]
[ <listA> -> =  · V <listA>  , let  ]
[ <listA> -> =  · V <listA>  , next  ]
[ <listA> -> =  · V <listA>  , if  ]
[ <listA> -> =  · V <listA>  , goto  ]
[ <listA> -> =  · V <listA>  , load  ]
[ <listA> -> =  · V <listA>  , put  ]
[ <listA> -> =  · V <listA>  , switch  ]
[ <listA> -> =  · V <listA>  , error  ]
[ <listA> -> =  · V <listA>  , comment  ]
[ <listA> -> =  · E ;  , ;  ]
[ <listA> -> =  · E ;  , V  ]
[ <listA> -> =  · E ;  , :  ]
[ <listA> -> =  · E ;  , let  ]
[ <listA> -> =  · E ;  , next  ]
[ <listA> -> =  · E ;  , if  ]
[ <listA> -> =  · E ;  , goto  ]
[ <listA> -> =  · E ;  , load  ]
[ <listA> -> =  · E ;  , put  ]
[ <listA> -> =  · E ;  , switch  ]
[ <listA> -> =  · E ;  , error  ]
[ <listA> -> =  · E ;  , comment  ]
[ E ->  · E - T  , ;  ]
[ E ->  · E - T  , -  ]
[ E ->  · E - T  , +  ]
[ E ->  · E + T  , ;  ]
[ E ->  · E + T  , -  ]
[ E ->  · E + T  , +  ]
[ E ->  · T  , ;  ]
[ E ->  · T  , -  ]
[ E ->  · T  , +  ]
[ T ->  · T * F  , ;  ]
[ T ->  · T * F  , -  ]
[ T ->  · T * F  , +  ]
[ T ->  · T * F  , *  ]
[ T ->  · T * F  , /  ]
[ T ->  · T * F  , %  ]
[ T ->  · T / F  , ;  ]
[ T ->  · T / F  , -  ]
[ T ->  · T / F  , +  ]
[ T ->  · T / F  , *  ]
[ T ->  · T / F  , /  ]
[ T ->  · T / F  , %  ]
[ T ->  · T % F  , ;  ]
[ T ->  · T % F  , -  ]
[ T ->  · T % F  , +  ]
[ T ->  · T % F  , *  ]
[ T ->  · T % F  , /  ]
[ T ->  · T % F  , %  ]
[ T ->  · F  , ;  ]
[ T ->  · F  , -  ]
[ T ->  · F  , +  ]
[ T ->  · F  , *  ]
[ T ->  · F  , /  ]
[ T ->  · F  , %  ]
[ F ->  · V  , ;  ]
[ F ->  · V  , -  ]
[ F ->  · V  , +  ]
[ F ->  · V  , *  ]
[ F ->  · V  , /  ]
[ F ->  · V  , %  ]
[ F ->  · ( E )  , ;  ]
[ F ->  · ( E )  , -  ]
[ F ->  · ( E )  , +  ]
[ F ->  · ( E )  , *  ]
[ F ->  · ( E )  , /  ]
[ F ->  · ( E )  , %  ]
[ F ->  · C  , ;  ]
[ F ->  · C  , -  ]
[ F ->  · C  , +  ]
[ F ->  · C  , *  ]
[ F ->  · C  , /  ]
[ F ->  · C  , %  ]
[ F ->  · value ( E , E )  , ;  ]
[ F ->  · value ( E , E )  , -  ]
[ F ->  · value ( E , E )  , +  ]
[ F ->  · value ( E , E )  , *  ]
[ F ->  · value ( E , E )  , /  ]
[ F ->  · value ( E , E )  , %  ]
[ F ->  · derivative ( E )  , ;  ]
[ F ->  · derivative ( E )  , -  ]
[ F ->  · derivative ( E )  , +  ]
[ F ->  · derivative ( E )  , *  ]
[ F ->  · derivative ( E )  , /  ]
[ F ->  · derivative ( E )  , %  ]
[ F ->  · coeff ( E , E )  , ;  ]
[ F ->  · coeff ( E , E )  , -  ]
[ F ->  · coeff ( E , E )  , +  ]
[ F ->  · coeff ( E , E )  , *  ]
[ F ->  · coeff ( E , E )  , /  ]
[ F ->  · coeff ( E , E )  , %  ]
[ F ->  · deg ( E )  , ;  ]
[ F ->  · deg ( E )  , -  ]
[ F ->  · deg ( E )  , +  ]
[ F ->  · deg ( E )  , *  ]
[ F ->  · deg ( E )  , /  ]
[ F ->  · deg ( E )  , %  ]
}

set 495 = GOTO( set 451 , V ) :
{
[ <op> -> load ( V  · <listV> ) ;  , ;  ]
[ <op> -> load ( V  · <listV> ) ;  , V  ]
[ <op> -> load ( V  · <listV> ) ;  , :  ]
[ <op> -> load ( V  · <listV> ) ;  , let  ]
[ <op> -> load ( V  · <listV> ) ;  , next  ]
[ <op> -> load ( V  · <listV> ) ;  , if  ]
[ <op> -> load ( V  · <listV> ) ;  , goto  ]
[ <op> -> load ( V  · <listV> ) ;  , load  ]
[ <op> -> load ( V  · <listV> ) ;  , put  ]
[ <op> -> load ( V  · <listV> ) ;  , switch  ]
[ <op> -> load ( V  · <listV> ) ;  , error  ]
[ <op> -> load ( V  · <listV> ) ;  , comment  ]
[ <listV> ->  ·  , )  ]
[ <listV> ->  · , V <listV>  , )  ]
}

set 496 = GOTO( set 452 , E ) :
{
[ <op> -> put ( E  · <listE> ) ;  , ;  ]
[ <op> -> put ( E  · <listE> ) ;  , V  ]
[ <op> -> put ( E  · <listE> ) ;  , :  ]
[ <op> -> put ( E  · <listE> ) ;  , let  ]
[ <op> -> put ( E  · <listE> ) ;  , next  ]
[ <op> -> put ( E  · <listE> ) ;  , if  ]
[ <op> -> put ( E  · <listE> ) ;  , goto  ]
[ <op> -> put ( E  · <listE> ) ;  , load  ]
[ <op> -> put ( E  · <listE> ) ;  , put  ]
[ <op> -> put ( E  · <listE> ) ;  , switch  ]
[ <op> -> put ( E  · <listE> ) ;  , error  ]
[ <op> -> put ( E  · <listE> ) ;  , comment  ]
[ E -> E  · - T  , ,  ]
[ E -> E  · - T  , )  ]
[ E -> E  · - T  , -  ]
[ E -> E  · - T  , +  ]
[ E -> E  · + T  , ,  ]
[ E -> E  · + T  , )  ]
[ E -> E  · + T  , -  ]
[ E -> E  · + T  , +  ]
[ <listE> ->  ·  , )  ]
[ <listE> ->  · , E <listE>  , )  ]
}

set 497 = GOTO( set 453 , E ) :
{
[ <op> -> switch ( E  · ) <switch_body> end switch ;  , ;  ]
[ <op> -> switch ( E  · ) <switch_body> end switch ;  , V  ]
[ <op> -> switch ( E  · ) <switch_body> end switch ;  , :  ]
[ <op> -> switch ( E  · ) <switch_body> end switch ;  , let  ]
[ <op> -> switch ( E  · ) <switch_body> end switch ;  , next  ]
[ <op> -> switch ( E  · ) <switch_body> end switch ;  , if  ]
[ <op> -> switch ( E  · ) <switch_body> end switch ;  , goto  ]
[ <op> -> switch ( E  · ) <switch_body> end switch ;  , load  ]
[ <op> -> switch ( E  · ) <switch_body> end switch ;  , put  ]
[ <op> -> switch ( E  · ) <switch_body> end switch ;  , switch  ]
[ <op> -> switch ( E  · ) <switch_body> end switch ;  , error  ]
[ <op> -> switch ( E  · ) <switch_body> end switch ;  , comment  ]
[ E -> E  · - T  , )  ]
[ E -> E  · - T  , -  ]
[ E -> E  · - T  , +  ]
[ E -> E  · + T  , )  ]
[ E -> E  · + T  , -  ]
[ E -> E  · + T  , +  ]
}

set 498 = GOTO( set 454 , ) ) :
{
[ F -> ( E )  ·  , ;  ]
[ F -> ( E )  ·  , V  ]
[ F -> ( E )  ·  , :  ]
[ F -> ( E )  ·  , let  ]
[ F -> ( E )  ·  , next  ]
[ F -> ( E )  ·  , if  ]
[ F -> ( E )  ·  , goto  ]
[ F -> ( E )  ·  , load  ]
[ F -> ( E )  ·  , put  ]
[ F -> ( E )  ·  , switch  ]
[ F -> ( E )  ·  , error  ]
[ F -> ( E )  ·  , comment  ]
[ F -> ( E )  ·  , -  ]
[ F -> ( E )  ·  , +  ]
[ F -> ( E )  ·  , *  ]
[ F -> ( E )  ·  , /  ]
[ F -> ( E )  ·  , %  ]
}

set 499 = GOTO( set 455 , T ) :
{
[ E -> E + T  ·  , ;  ]
[ E -> E + T  ·  , V  ]
[ E -> E + T  ·  , :  ]
[ E -> E + T  ·  , let  ]
[ E -> E + T  ·  , next  ]
[ E -> E + T  ·  , if  ]
[ E -> E + T  ·  , goto  ]
[ E -> E + T  ·  , load  ]
[ E -> E + T  ·  , put  ]
[ E -> E + T  ·  , switch  ]
[ E -> E + T  ·  , error  ]
[ E -> E + T  ·  , comment  ]
[ E -> E + T  ·  , -  ]
[ E -> E + T  ·  , +  ]
[ T -> T  · * F  , ;  ]
[ T -> T  · * F  , V  ]
[ T -> T  · * F  , :  ]
[ T -> T  · * F  , let  ]
[ T -> T  · * F  , next  ]
[ T -> T  · * F  , if  ]
[ T -> T  · * F  , goto  ]
[ T -> T  · * F  , load  ]
[ T -> T  · * F  , put  ]
[ T -> T  · * F  , switch  ]
[ T -> T  · * F  , error  ]
[ T -> T  · * F  , comment  ]
[ T -> T  · * F  , -  ]
[ T -> T  · * F  , +  ]
[ T -> T  · * F  , *  ]
[ T -> T  · * F  , /  ]
[ T -> T  · * F  , %  ]
[ T -> T  · / F  , ;  ]
[ T -> T  · / F  , V  ]
[ T -> T  · / F  , :  ]
[ T -> T  · / F  , let  ]
[ T -> T  · / F  , next  ]
[ T -> T  · / F  , if  ]
[ T -> T  · / F  , goto  ]
[ T -> T  · / F  , load  ]
[ T -> T  · / F  , put  ]
[ T -> T  · / F  , switch  ]
[ T -> T  · / F  , error  ]
[ T -> T  · / F  , comment  ]
[ T -> T  · / F  , -  ]
[ T -> T  · / F  , +  ]
[ T -> T  · / F  , *  ]
[ T -> T  · / F  , /  ]
[ T -> T  · / F  , %  ]
[ T -> T  · % F  , ;  ]
[ T -> T  · % F  , V  ]
[ T -> T  · % F  , :  ]
[ T -> T  · % F  , let  ]
[ T -> T  · % F  , next  ]
[ T -> T  · % F  , if  ]
[ T -> T  · % F  , goto  ]
[ T -> T  · % F  , load  ]
[ T -> T  · % F  , put  ]
[ T -> T  · % F  , switch  ]
[ T -> T  · % F  , error  ]
[ T -> T  · % F  , comment  ]
[ T -> T  · % F  , -  ]
[ T -> T  · % F  , +  ]
[ T -> T  · % F  , *  ]
[ T -> T  · % F  , /  ]
[ T -> T  · % F  , %  ]
}

set 500 = GOTO( set 456 , T ) :
{
[ E -> E - T  ·  , ;  ]
[ E -> E - T  ·  , V  ]
[ E -> E - T  ·  , :  ]
[ E -> E - T  ·  , let  ]
[ E -> E - T  ·  , next  ]
[ E -> E - T  ·  , if  ]
[ E -> E - T  ·  , goto  ]
[ E -> E - T  ·  , load  ]
[ E -> E - T  ·  , put  ]
[ E -> E - T  ·  , switch  ]
[ E -> E - T  ·  , error  ]
[ E -> E - T  ·  , comment  ]
[ E -> E - T  ·  , -  ]
[ E -> E - T  ·  , +  ]
[ T -> T  · * F  , ;  ]
[ T -> T  · * F  , V  ]
[ T -> T  · * F  , :  ]
[ T -> T  · * F  , let  ]
[ T -> T  · * F  , next  ]
[ T -> T  · * F  , if  ]
[ T -> T  · * F  , goto  ]
[ T -> T  · * F  , load  ]
[ T -> T  · * F  , put  ]
[ T -> T  · * F  , switch  ]
[ T -> T  · * F  , error  ]
[ T -> T  · * F  , comment  ]
[ T -> T  · * F  , -  ]
[ T -> T  · * F  , +  ]
[ T -> T  · * F  , *  ]
[ T -> T  · * F  , /  ]
[ T -> T  · * F  , %  ]
[ T -> T  · / F  , ;  ]
[ T -> T  · / F  , V  ]
[ T -> T  · / F  , :  ]
[ T -> T  · / F  , let  ]
[ T -> T  · / F  , next  ]
[ T -> T  · / F  , if  ]
[ T -> T  · / F  , goto  ]
[ T -> T  · / F  , load  ]
[ T -> T  · / F  , put  ]
[ T -> T  · / F  , switch  ]
[ T -> T  · / F  , error  ]
[ T -> T  · / F  , comment  ]
[ T -> T  · / F  , -  ]
[ T -> T  · / F  , +  ]
[ T -> T  · / F  , *  ]
[ T -> T  · / F  , /  ]
[ T -> T  · / F  , %  ]
[ T -> T  · % F  , ;  ]
[ T -> T  · % F  , V  ]
[ T -> T  · % F  , :  ]
[ T -> T  · % F  , let  ]
[ T -> T  · % F  , next  ]
[ T -> T  · % F  , if  ]
[ T -> T  · % F  , goto  ]
[ T -> T  · % F  , load  ]
[ T -> T  · % F  , put  ]
[ T -> T  · % F  , switch  ]
[ T -> T  · % F  , error  ]
[ T -> T  · % F  , comment  ]
[ T -> T  · % F  , -  ]
[ T -> T  · % F  , +  ]
[ T -> T  · % F  , *  ]
[ T -> T  · % F  , /  ]
[ T -> T  · % F  , %  ]
}

set 501 = GOTO( set 457 , F ) :
{
[ T -> T % F  ·  , ;  ]
[ T -> T % F  ·  , V  ]
[ T -> T % F  ·  , :  ]
[ T -> T % F  ·  , let  ]
[ T -> T % F  ·  , next  ]
[ T -> T % F  ·  , if  ]
[ T -> T % F  ·  , goto  ]
[ T -> T % F  ·  , load  ]
[ T -> T % F  ·  , put  ]
[ T -> T % F  ·  , switch  ]
[ T -> T % F  ·  , error  ]
[ T -> T % F  ·  , comment  ]
[ T -> T % F  ·  , -  ]
[ T -> T % F  ·  , +  ]
[ T -> T % F  ·  , *  ]
[ T -> T % F  ·  , /  ]
[ T -> T % F  ·  , %  ]
}

set 502 = GOTO( set 458 , F ) :
{
[ T -> T * F  ·  , ;  ]
[ T -> T * F  ·  , V  ]
[ T -> T * F  ·  , :  ]
[ T -> T * F  ·  , let  ]
[ T -> T * F  ·  , next  ]
[ T -> T * F  ·  , if  ]
[ T -> T * F  ·  , goto  ]
[ T -> T * F  ·  , load  ]
[ T -> T * F  ·  , put  ]
[ T -> T * F  ·  , switch  ]
[ T -> T * F  ·  , error  ]
[ T -> T * F  ·  , comment  ]
[ T -> T * F  ·  , -  ]
[ T -> T * F  ·  , +  ]
[ T -> T * F  ·  , *  ]
[ T -> T * F  ·  , /  ]
[ T -> T * F  ·  , %  ]
}

set 503 = GOTO( set 459 , F ) :
{
[ T -> T / F  ·  , ;  ]
[ T -> T / F  ·  , V  ]
[ T -> T / F  ·  , :  ]
[ T -> T / F  ·  , let  ]
[ T -> T / F  ·  , next  ]
[ T -> T / F  ·  , if  ]
[ T -> T / F  ·  , goto  ]
[ T -> T / F  ·  , load  ]
[ T -> T / F  ·  , put  ]
[ T -> T / F  ·  , switch  ]
[ T -> T / F  ·  , error  ]
[ T -> T / F  ·  , comment  ]
[ T -> T / F  ·  , -  ]
[ T -> T / F  ·  , +  ]
[ T -> T / F  ·  , *  ]
[ T -> T / F  ·  , /  ]
[ T -> T / F  ·  , %  ]
}

set 504 = GOTO( set 460 , E ) :
{
[ E -> E  · - T  , ,  ]
[ E -> E  · - T  , -  ]
[ E -> E  · - T  , +  ]
[ E -> E  · + T  , ,  ]
[ E -> E  · + T  , -  ]
[ E -> E  · + T  , +  ]
[ F -> coeff ( E  · , E )  , ;  ]
[ F -> coeff ( E  · , E )  , V  ]
[ F -> coeff ( E  · , E )  , :  ]
[ F -> coeff ( E  · , E )  , let  ]
[ F -> coeff ( E  · , E )  , next  ]
[ F -> coeff ( E  · , E )  , if  ]
[ F -> coeff ( E  · , E )  , goto  ]
[ F -> coeff ( E  · , E )  , load  ]
[ F -> coeff ( E  · , E )  , put  ]
[ F -> coeff ( E  · , E )  , switch  ]
[ F -> coeff ( E  · , E )  , error  ]
[ F -> coeff ( E  · , E )  , comment  ]
[ F -> coeff ( E  · , E )  , -  ]
[ F -> coeff ( E  · , E )  , +  ]
[ F -> coeff ( E  · , E )  , *  ]
[ F -> coeff ( E  · , E )  , /  ]
[ F -> coeff ( E  · , E )  , %  ]
}

set 505 = GOTO( set 461 , E ) :
{
[ E -> E  · - T  , )  ]
[ E -> E  · - T  , -  ]
[ E -> E  · - T  , +  ]
[ E -> E  · + T  , )  ]
[ E -> E  · + T  , -  ]
[ E -> E  · + T  , +  ]
[ F -> deg ( E  · )  , ;  ]
[ F -> deg ( E  · )  , V  ]
[ F -> deg ( E  · )  , :  ]
[ F -> deg ( E  · )  , let  ]
[ F -> deg ( E  · )  , next  ]
[ F -> deg ( E  · )  , if  ]
[ F -> deg ( E  · )  , goto  ]
[ F -> deg ( E  · )  , load  ]
[ F -> deg ( E  · )  , put  ]
[ F -> deg ( E  · )  , switch  ]
[ F -> deg ( E  · )  , error  ]
[ F -> deg ( E  · )  , comment  ]
[ F -> deg ( E  · )  , -  ]
[ F -> deg ( E  · )  , +  ]
[ F -> deg ( E  · )  , *  ]
[ F -> deg ( E  · )  , /  ]
[ F -> deg ( E  · )  , %  ]
}

set 506 = GOTO( set 462 , E ) :
{
[ E -> E  · - T  , )  ]
[ E -> E  · - T  , -  ]
[ E -> E  · - T  , +  ]
[ E -> E  · + T  , )  ]
[ E -> E  · + T  , -  ]
[ E -> E  · + T  , +  ]
[ F -> derivative ( E  · )  , ;  ]
[ F -> derivative ( E  · )  , V  ]
[ F -> derivative ( E  · )  , :  ]
[ F -> derivative ( E  · )  , let  ]
[ F -> derivative ( E  · )  , next  ]
[ F -> derivative ( E  · )  , if  ]
[ F -> derivative ( E  · )  , goto  ]
[ F -> derivative ( E  · )  , load  ]
[ F -> derivative ( E  · )  , put  ]
[ F -> derivative ( E  · )  , switch  ]
[ F -> derivative ( E  · )  , error  ]
[ F -> derivative ( E  · )  , comment  ]
[ F -> derivative ( E  · )  , -  ]
[ F -> derivative ( E  · )  , +  ]
[ F -> derivative ( E  · )  , *  ]
[ F -> derivative ( E  · )  , /  ]
[ F -> derivative ( E  · )  , %  ]
}

set 507 = GOTO( set 463 , E ) :
{
[ E -> E  · - T  , ,  ]
[ E -> E  · - T  , -  ]
[ E -> E  · - T  , +  ]
[ E -> E  · + T  , ,  ]
[ E -> E  · + T  , -  ]
[ E -> E  · + T  , +  ]
[ F -> value ( E  · , E )  , ;  ]
[ F -> value ( E  · , E )  , V  ]
[ F -> value ( E  · , E )  , :  ]
[ F -> value ( E  · , E )  , let  ]
[ F -> value ( E  · , E )  , next  ]
[ F -> value ( E  · , E )  , if  ]
[ F -> value ( E  · , E )  , goto  ]
[ F -> value ( E  · , E )  , load  ]
[ F -> value ( E  · , E )  , put  ]
[ F -> value ( E  · , E )  , switch  ]
[ F -> value ( E  · , E )  , error  ]
[ F -> value ( E  · , E )  , comment  ]
[ F -> value ( E  · , E )  , -  ]
[ F -> value ( E  · , E )  , +  ]
[ F -> value ( E  · , E )  , *  ]
[ F -> value ( E  · , E )  , /  ]
[ F -> value ( E  · , E )  , %  ]
}

set 508 = GOTO( set 464 , E ) :
{
[ E -> E  · - T  , )  ]
[ E -> E  · - T  , -  ]
[ E -> E  · - T  , +  ]
[ E -> E  · + T  , )  ]
[ E -> E  · + T  , -  ]
[ E -> E  · + T  , +  ]
[ F -> coeff ( E , E  · )  , ;  ]
[ F -> coeff ( E , E  · )  , V  ]
[ F -> coeff ( E , E  · )  , :  ]
[ F -> coeff ( E , E  · )  , let  ]
[ F -> coeff ( E , E  · )  , next  ]
[ F -> coeff ( E , E  · )  , adding  ]
[ F -> coeff ( E , E  · )  , if  ]
[ F -> coeff ( E , E  · )  , goto  ]
[ F -> coeff ( E , E  · )  , load  ]
[ F -> coeff ( E , E  · )  , put  ]
[ F -> coeff ( E , E  · )  , switch  ]
[ F -> coeff ( E , E  · )  , error  ]
[ F -> coeff ( E , E  · )  , comment  ]
[ F -> coeff ( E , E  · )  , -  ]
[ F -> coeff ( E , E  · )  , +  ]
[ F -> coeff ( E , E  · )  , *  ]
[ F -> coeff ( E , E  · )  , /  ]
[ F -> coeff ( E , E  · )  , %  ]
}

set 509 = GOTO( set 467 , E ) :
{
[ E -> E  · - T  , )  ]
[ E -> E  · - T  , -  ]
[ E -> E  · - T  , +  ]
[ E -> E  · + T  , )  ]
[ E -> E  · + T  , -  ]
[ E -> E  · + T  , +  ]
[ F -> value ( E , E  · )  , ;  ]
[ F -> value ( E , E  · )  , V  ]
[ F -> value ( E , E  · )  , :  ]
[ F -> value ( E , E  · )  , let  ]
[ F -> value ( E , E  · )  , next  ]
[ F -> value ( E , E  · )  , adding  ]
[ F -> value ( E , E  · )  , if  ]
[ F -> value ( E , E  · )  , goto  ]
[ F -> value ( E , E  · )  , load  ]
[ F -> value ( E , E  · )  , put  ]
[ F -> value ( E , E  · )  , switch  ]
[ F -> value ( E , E  · )  , error  ]
[ F -> value ( E , E  · )  , comment  ]
[ F -> value ( E , E  · )  , -  ]
[ F -> value ( E , E  · )  , +  ]
[ F -> value ( E , E  · )  , *  ]
[ F -> value ( E , E  · )  , /  ]
[ F -> value ( E , E  · )  , %  ]
}

set 510 = GOTO( set 471 , TYPE ) :
{
[ <op> -> V <listV> : TYPE  · ;  , ;  ]
[ <op> -> V <listV> : TYPE  · ;  , V  ]
[ <op> -> V <listV> : TYPE  · ;  , :  ]
[ <op> -> V <listV> : TYPE  · ;  , let  ]
[ <op> -> V <listV> : TYPE  · ;  , if  ]
[ <op> -> V <listV> : TYPE  · ;  , goto  ]
[ <op> -> V <listV> : TYPE  · ;  , load  ]
[ <op> -> V <listV> : TYPE  · ;  , put  ]
[ <op> -> V <listV> : TYPE  · ;  , switch  ]
[ <op> -> V <listV> : TYPE  · ;  , end  ]
[ <op> -> V <listV> : TYPE  · ;  , break  ]
[ <op> -> V <listV> : TYPE  · ;  , error  ]
[ <op> -> V <listV> : TYPE  · ;  , comment  ]
}

set 511 = GOTO( set 472 , = ) :
{
[ <op> -> V for V =  · E to E <step> <pr> next V  , ;  ]
[ <op> -> V for V =  · E to E <step> <pr> next V  , V  ]
[ <op> -> V for V =  · E to E <step> <pr> next V  , :  ]
[ <op> -> V for V =  · E to E <step> <pr> next V  , let  ]
[ <op> -> V for V =  · E to E <step> <pr> next V  , if  ]
[ <op> -> V for V =  · E to E <step> <pr> next V  , goto  ]
[ <op> -> V for V =  · E to E <step> <pr> next V  , load  ]
[ <op> -> V for V =  · E to E <step> <pr> next V  , put  ]
[ <op> -> V for V =  · E to E <step> <pr> next V  , switch  ]
[ <op> -> V for V =  · E to E <step> <pr> next V  , end  ]
[ <op> -> V for V =  · E to E <step> <pr> next V  , break  ]
[ <op> -> V for V =  · E to E <step> <pr> next V  , error  ]
[ <op> -> V for V =  · E to E <step> <pr> next V  , comment  ]
[ E ->  · E - T  , to  ]
[ E ->  · E - T  , -  ]
[ E ->  · E - T  , +  ]
[ E ->  · E + T  , to  ]
[ E ->  · E + T  , -  ]
[ E ->  · E + T  , +  ]
[ E ->  · T  , to  ]
[ E ->  · T  , -  ]
[ E ->  · T  , +  ]
[ T ->  · T * F  , to  ]
[ T ->  · T * F  , -  ]
[ T ->  · T * F  , +  ]
[ T ->  · T * F  , *  ]
[ T ->  · T * F  , /  ]
[ T ->  · T * F  , %  ]
[ T ->  · T / F  , to  ]
[ T ->  · T / F  , -  ]
[ T ->  · T / F  , +  ]
[ T ->  · T / F  , *  ]
[ T ->  · T / F  , /  ]
[ T ->  · T / F  , %  ]
[ T ->  · T % F  , to  ]
[ T ->  · T % F  , -  ]
[ T ->  · T % F  , +  ]
[ T ->  · T % F  , *  ]
[ T ->  · T % F  , /  ]
[ T ->  · T % F  , %  ]
[ T ->  · F  , to  ]
[ T ->  · F  , -  ]
[ T ->  · F  , +  ]
[ T ->  · F  , *  ]
[ T ->  · F  , /  ]
[ T ->  · F  , %  ]
[ F ->  · V  , to  ]
[ F ->  · V  , -  ]
[ F ->  · V  , +  ]
[ F ->  · V  , *  ]
[ F ->  · V  , /  ]
[ F ->  · V  , %  ]
[ F ->  · ( E )  , to  ]
[ F ->  · ( E )  , -  ]
[ F ->  · ( E )  , +  ]
[ F ->  · ( E )  , *  ]
[ F ->  · ( E )  , /  ]
[ F ->  · ( E )  , %  ]
[ F ->  · C  , to  ]
[ F ->  · C  , -  ]
[ F ->  · C  , +  ]
[ F ->  · C  , *  ]
[ F ->  · C  , /  ]
[ F ->  · C  , %  ]
[ F ->  · value ( E , E )  , to  ]
[ F ->  · value ( E , E )  , -  ]
[ F ->  · value ( E , E )  , +  ]
[ F ->  · value ( E , E )  , *  ]
[ F ->  · value ( E , E )  , /  ]
[ F ->  · value ( E , E )  , %  ]
[ F ->  · derivative ( E )  , to  ]
[ F ->  · derivative ( E )  , -  ]
[ F ->  · derivative ( E )  , +  ]
[ F ->  · derivative ( E )  , *  ]
[ F ->  · derivative ( E )  , /  ]
[ F ->  · derivative ( E )  , %  ]
[ F ->  · coeff ( E , E )  , to  ]
[ F ->  · coeff ( E , E )  , -  ]
[ F ->  · coeff ( E , E )  , +  ]
[ F ->  · coeff ( E , E )  , *  ]
[ F ->  · coeff ( E , E )  , /  ]
[ F ->  · coeff ( E , E )  , %  ]
[ F ->  · deg ( E )  , to  ]
[ F ->  · deg ( E )  , -  ]
[ F ->  · deg ( E )  , +  ]
[ F ->  · deg ( E )  , *  ]
[ F ->  · deg ( E )  , /  ]
[ F ->  · deg ( E )  , %  ]
}

set 512 = GOTO( set 473 , V ) :
{
[ <op> -> if <test> goto V  · <else> ;  , ;  ]
[ <op> -> if <test> goto V  · <else> ;  , V  ]
[ <op> -> if <test> goto V  · <else> ;  , :  ]
[ <op> -> if <test> goto V  · <else> ;  , let  ]
[ <op> -> if <test> goto V  · <else> ;  , if  ]
[ <op> -> if <test> goto V  · <else> ;  , goto  ]
[ <op> -> if <test> goto V  · <else> ;  , load  ]
[ <op> -> if <test> goto V  · <else> ;  , put  ]
[ <op> -> if <test> goto V  · <else> ;  , switch  ]
[ <op> -> if <test> goto V  · <else> ;  , end  ]
[ <op> -> if <test> goto V  · <else> ;  , break  ]
[ <op> -> if <test> goto V  · <else> ;  , error  ]
[ <op> -> if <test> goto V  · <else> ;  , comment  ]
[ <else> ->  ·  , ;  ]
[ <else> ->  · else goto V  , ;  ]
}

set 513 = GOTO( set 475 , E ) :
{
[ <listA> -> = E  · ;  , ;  ]
[ <listA> -> = E  · ;  , V  ]
[ <listA> -> = E  · ;  , :  ]
[ <listA> -> = E  · ;  , let  ]
[ <listA> -> = E  · ;  , if  ]
[ <listA> -> = E  · ;  , goto  ]
[ <listA> -> = E  · ;  , load  ]
[ <listA> -> = E  · ;  , put  ]
[ <listA> -> = E  · ;  , switch  ]
[ <listA> -> = E  · ;  , end  ]
[ <listA> -> = E  · ;  , break  ]
[ <listA> -> = E  · ;  , error  ]
[ <listA> -> = E  · ;  , comment  ]
[ E -> E  · - T  , ;  ]
[ E -> E  · - T  , -  ]
[ E -> E  · - T  , +  ]
[ E -> E  · + T  , ;  ]
[ E -> E  · + T  , -  ]
[ E -> E  · + T  , +  ]
}

set 514 = GOTO( set 475 , V ) :
{
[ <listA> ->  · = V <listA>  , ;  ]
[ <listA> ->  · = V <listA>  , V  ]
[ <listA> ->  · = V <listA>  , :  ]
[ <listA> ->  · = V <listA>  , let  ]
[ <listA> ->  · = V <listA>  , if  ]
[ <listA> ->  · = V <listA>  , goto  ]
[ <listA> ->  · = V <listA>  , load  ]
[ <listA> ->  · = V <listA>  , put  ]
[ <listA> ->  · = V <listA>  , switch  ]
[ <listA> ->  · = V <listA>  , end  ]
[ <listA> ->  · = V <listA>  , break  ]
[ <listA> ->  · = V <listA>  , error  ]
[ <listA> ->  · = V <listA>  , comment  ]
[ <listA> ->  · = E ;  , ;  ]
[ <listA> ->  · = E ;  , V  ]
[ <listA> ->  · = E ;  , :  ]
[ <listA> ->  · = E ;  , let  ]
[ <listA> ->  · = E ;  , if  ]
[ <listA> ->  · = E ;  , goto  ]
[ <listA> ->  · = E ;  , load  ]
[ <listA> ->  · = E ;  , put  ]
[ <listA> ->  · = E ;  , switch  ]
[ <listA> ->  · = E ;  , end  ]
[ <listA> ->  · = E ;  , break  ]
[ <listA> ->  · = E ;  , error  ]
[ <listA> ->  · = E ;  , comment  ]
[ <listA> -> = V  · <listA>  , ;  ]
[ <listA> -> = V  · <listA>  , V  ]
[ <listA> -> = V  · <listA>  , :  ]
[ <listA> -> = V  · <listA>  , let  ]
[ <listA> -> = V  · <listA>  , if  ]
[ <listA> -> = V  · <listA>  , goto  ]
[ <listA> -> = V  · <listA>  , load  ]
[ <listA> -> = V  · <listA>  , put  ]
[ <listA> -> = V  · <listA>  , switch  ]
[ <listA> -> = V  · <listA>  , end  ]
[ <listA> -> = V  · <listA>  , break  ]
[ <listA> -> = V  · <listA>  , error  ]
[ <listA> -> = V  · <listA>  , comment  ]
[ F -> V  ·  , ;  ]
[ F -> V  ·  , -  ]
[ F -> V  ·  , +  ]
[ F -> V  ·  , *  ]
[ F -> V  ·  , /  ]
[ F -> V  ·  , %  ]
}

set 515 = GOTO( set 476 , <listV> ) :
{
[ <op> -> load ( V <listV>  · ) ;  , ;  ]
[ <op> -> load ( V <listV>  · ) ;  , V  ]
[ <op> -> load ( V <listV>  · ) ;  , :  ]
[ <op> -> load ( V <listV>  · ) ;  , let  ]
[ <op> -> load ( V <listV>  · ) ;  , if  ]
[ <op> -> load ( V <listV>  · ) ;  , goto  ]
[ <op> -> load ( V <listV>  · ) ;  , load  ]
[ <op> -> load ( V <listV>  · ) ;  , put  ]
[ <op> -> load ( V <listV>  · ) ;  , switch  ]
[ <op> -> load ( V <listV>  · ) ;  , end  ]
[ <op> -> load ( V <listV>  · ) ;  , break  ]
[ <op> -> load ( V <listV>  · ) ;  , error  ]
[ <op> -> load ( V <listV>  · ) ;  , comment  ]
}

set 516 = GOTO( set 477 , <listE> ) :
{
[ <op> -> put ( E <listE>  · ) ;  , ;  ]
[ <op> -> put ( E <listE>  · ) ;  , V  ]
[ <op> -> put ( E <listE>  · ) ;  , :  ]
[ <op> -> put ( E <listE>  · ) ;  , let  ]
[ <op> -> put ( E <listE>  · ) ;  , if  ]
[ <op> -> put ( E <listE>  · ) ;  , goto  ]
[ <op> -> put ( E <listE>  · ) ;  , load  ]
[ <op> -> put ( E <listE>  · ) ;  , put  ]
[ <op> -> put ( E <listE>  · ) ;  , switch  ]
[ <op> -> put ( E <listE>  · ) ;  , end  ]
[ <op> -> put ( E <listE>  · ) ;  , break  ]
[ <op> -> put ( E <listE>  · ) ;  , error  ]
[ <op> -> put ( E <listE>  · ) ;  , comment  ]
}

set 517 = GOTO( set 478 , ) ) :
{
[ <op> -> switch ( E )  · <switch_body> end switch ;  , ;  ]
[ <op> -> switch ( E )  · <switch_body> end switch ;  , V  ]
[ <op> -> switch ( E )  · <switch_body> end switch ;  , :  ]
[ <op> -> switch ( E )  · <switch_body> end switch ;  , let  ]
[ <op> -> switch ( E )  · <switch_body> end switch ;  , if  ]
[ <op> -> switch ( E )  · <switch_body> end switch ;  , goto  ]
[ <op> -> switch ( E )  · <switch_body> end switch ;  , load  ]
[ <op> -> switch ( E )  · <switch_body> end switch ;  , put  ]
[ <op> -> switch ( E )  · <switch_body> end switch ;  , switch  ]
[ <op> -> switch ( E )  · <switch_body> end switch ;  , end  ]
[ <op> -> switch ( E )  · <switch_body> end switch ;  , break  ]
[ <op> -> switch ( E )  · <switch_body> end switch ;  , error  ]
[ <op> -> switch ( E )  · <switch_body> end switch ;  , comment  ]
[ <switch_body> ->  · <list_case> <default>  , end  ]
[ <list_case> ->  ·  , end  ]
[ <list_case> ->  ·  , default  ]
[ <list_case> ->  · case C : <pr> <break> <list_case>  , end  ]
[ <list_case> ->  · case C : <pr> <break> <list_case>  , default  ]
}

set 518 = GOTO( set 481 , TYPE ) :
{
[ <op> -> V <listV> : TYPE  · ;  , ;  ]
[ <op> -> V <listV> : TYPE  · ;  , V  ]
[ <op> -> V <listV> : TYPE  · ;  , :  ]
[ <op> -> V <listV> : TYPE  · ;  , let  ]
[ <op> -> V <listV> : TYPE  · ;  , if  ]
[ <op> -> V <listV> : TYPE  · ;  , goto  ]
[ <op> -> V <listV> : TYPE  · ;  , load  ]
[ <op> -> V <listV> : TYPE  · ;  , put  ]
[ <op> -> V <listV> : TYPE  · ;  , switch  ]
[ <op> -> V <listV> : TYPE  · ;  , end  ]
[ <op> -> V <listV> : TYPE  · ;  , case  ]
[ <op> -> V <listV> : TYPE  · ;  , break  ]
[ <op> -> V <listV> : TYPE  · ;  , default  ]
[ <op> -> V <listV> : TYPE  · ;  , error  ]
[ <op> -> V <listV> : TYPE  · ;  , comment  ]
}

set 519 = GOTO( set 482 , = ) :
{
[ <op> -> V for V =  · E to E <step> <pr> next V  , ;  ]
[ <op> -> V for V =  · E to E <step> <pr> next V  , V  ]
[ <op> -> V for V =  · E to E <step> <pr> next V  , :  ]
[ <op> -> V for V =  · E to E <step> <pr> next V  , let  ]
[ <op> -> V for V =  · E to E <step> <pr> next V  , if  ]
[ <op> -> V for V =  · E to E <step> <pr> next V  , goto  ]
[ <op> -> V for V =  · E to E <step> <pr> next V  , load  ]
[ <op> -> V for V =  · E to E <step> <pr> next V  , put  ]
[ <op> -> V for V =  · E to E <step> <pr> next V  , switch  ]
[ <op> -> V for V =  · E to E <step> <pr> next V  , end  ]
[ <op> -> V for V =  · E to E <step> <pr> next V  , case  ]
[ <op> -> V for V =  · E to E <step> <pr> next V  , break  ]
[ <op> -> V for V =  · E to E <step> <pr> next V  , default  ]
[ <op> -> V for V =  · E to E <step> <pr> next V  , error  ]
[ <op> -> V for V =  · E to E <step> <pr> next V  , comment  ]
[ E ->  · E - T  , to  ]
[ E ->  · E - T  , -  ]
[ E ->  · E - T  , +  ]
[ E ->  · E + T  , to  ]
[ E ->  · E + T  , -  ]
[ E ->  · E + T  , +  ]
[ E ->  · T  , to  ]
[ E ->  · T  , -  ]
[ E ->  · T  , +  ]
[ T ->  · T * F  , to  ]
[ T ->  · T * F  , -  ]
[ T ->  · T * F  , +  ]
[ T ->  · T * F  , *  ]
[ T ->  · T * F  , /  ]
[ T ->  · T * F  , %  ]
[ T ->  · T / F  , to  ]
[ T ->  · T / F  , -  ]
[ T ->  · T / F  , +  ]
[ T ->  · T / F  , *  ]
[ T ->  · T / F  , /  ]
[ T ->  · T / F  , %  ]
[ T ->  · T % F  , to  ]
[ T ->  · T % F  , -  ]
[ T ->  · T % F  , +  ]
[ T ->  · T % F  , *  ]
[ T ->  · T % F  , /  ]
[ T ->  · T % F  , %  ]
[ T ->  · F  , to  ]
[ T ->  · F  , -  ]
[ T ->  · F  , +  ]
[ T ->  · F  , *  ]
[ T ->  · F  , /  ]
[ T ->  · F  , %  ]
[ F ->  · V  , to  ]
[ F ->  · V  , -  ]
[ F ->  · V  , +  ]
[ F ->  · V  , *  ]
[ F ->  · V  , /  ]
[ F ->  · V  , %  ]
[ F ->  · ( E )  , to  ]
[ F ->  · ( E )  , -  ]
[ F ->  · ( E )  , +  ]
[ F ->  · ( E )  , *  ]
[ F ->  · ( E )  , /  ]
[ F ->  · ( E )  , %  ]
[ F ->  · C  , to  ]
[ F ->  · C  , -  ]
[ F ->  · C  , +  ]
[ F ->  · C  , *  ]
[ F ->  · C  , /  ]
[ F ->  · C  , %  ]
[ F ->  · value ( E , E )  , to  ]
[ F ->  · value ( E , E )  , -  ]
[ F ->  · value ( E , E )  , +  ]
[ F ->  · value ( E , E )  , *  ]
[ F ->  · value ( E , E )  , /  ]
[ F ->  · value ( E , E )  , %  ]
[ F ->  · derivative ( E )  , to  ]
[ F ->  · derivative ( E )  , -  ]
[ F ->  · derivative ( E )  , +  ]
[ F ->  · derivative ( E )  , *  ]
[ F ->  · derivative ( E )  , /  ]
[ F ->  · derivative ( E )  , %  ]
[ F ->  · coeff ( E , E )  , to  ]
[ F ->  · coeff ( E , E )  , -  ]
[ F ->  · coeff ( E , E )  , +  ]
[ F ->  · coeff ( E , E )  , *  ]
[ F ->  · coeff ( E , E )  , /  ]
[ F ->  · coeff ( E , E )  , %  ]
[ F ->  · deg ( E )  , to  ]
[ F ->  · deg ( E )  , -  ]
[ F ->  · deg ( E )  , +  ]
[ F ->  · deg ( E )  , *  ]
[ F ->  · deg ( E )  , /  ]
[ F ->  · deg ( E )  , %  ]
}

set 520 = GOTO( set 483 , V ) :
{
[ <op> -> if <test> goto V  · <else> ;  , ;  ]
[ <op> -> if <test> goto V  · <else> ;  , V  ]
[ <op> -> if <test> goto V  · <else> ;  , :  ]
[ <op> -> if <test> goto V  · <else> ;  , let  ]
[ <op> -> if <test> goto V  · <else> ;  , if  ]
[ <op> -> if <test> goto V  · <else> ;  , goto  ]
[ <op> -> if <test> goto V  · <else> ;  , load  ]
[ <op> -> if <test> goto V  · <else> ;  , put  ]
[ <op> -> if <test> goto V  · <else> ;  , switch  ]
[ <op> -> if <test> goto V  · <else> ;  , end  ]
[ <op> -> if <test> goto V  · <else> ;  , case  ]
[ <op> -> if <test> goto V  · <else> ;  , break  ]
[ <op> -> if <test> goto V  · <else> ;  , default  ]
[ <op> -> if <test> goto V  · <else> ;  , error  ]
[ <op> -> if <test> goto V  · <else> ;  , comment  ]
[ <else> ->  ·  , ;  ]
[ <else> ->  · else goto V  , ;  ]
}

set 521 = GOTO( set 485 , E ) :
{
[ <listA> -> = E  · ;  , ;  ]
[ <listA> -> = E  · ;  , V  ]
[ <listA> -> = E  · ;  , :  ]
[ <listA> -> = E  · ;  , let  ]
[ <listA> -> = E  · ;  , if  ]
[ <listA> -> = E  · ;  , goto  ]
[ <listA> -> = E  · ;  , load  ]
[ <listA> -> = E  · ;  , put  ]
[ <listA> -> = E  · ;  , switch  ]
[ <listA> -> = E  · ;  , end  ]
[ <listA> -> = E  · ;  , case  ]
[ <listA> -> = E  · ;  , break  ]
[ <listA> -> = E  · ;  , default  ]
[ <listA> -> = E  · ;  , error  ]
[ <listA> -> = E  · ;  , comment  ]
[ E -> E  · - T  , ;  ]
[ E -> E  · - T  , -  ]
[ E -> E  · - T  , +  ]
[ E -> E  · + T  , ;  ]
[ E -> E  · + T  , -  ]
[ E -> E  · + T  , +  ]
}

set 522 = GOTO( set 485 , V ) :
{
[ <listA> ->  · = V <listA>  , ;  ]
[ <listA> ->  · = V <listA>  , V  ]
[ <listA> ->  · = V <listA>  , :  ]
[ <listA> ->  · = V <listA>  , let  ]
[ <listA> ->  · = V <listA>  , if  ]
[ <listA> ->  · = V <listA>  , goto  ]
[ <listA> ->  · = V <listA>  , load  ]
[ <listA> ->  · = V <listA>  , put  ]
[ <listA> ->  · = V <listA>  , switch  ]
[ <listA> ->  · = V <listA>  , end  ]
[ <listA> ->  · = V <listA>  , case  ]
[ <listA> ->  · = V <listA>  , break  ]
[ <listA> ->  · = V <listA>  , default  ]
[ <listA> ->  · = V <listA>  , error  ]
[ <listA> ->  · = V <listA>  , comment  ]
[ <listA> ->  · = E ;  , ;  ]
[ <listA> ->  · = E ;  , V  ]
[ <listA> ->  · = E ;  , :  ]
[ <listA> ->  · = E ;  , let  ]
[ <listA> ->  · = E ;  , if  ]
[ <listA> ->  · = E ;  , goto  ]
[ <listA> ->  · = E ;  , load  ]
[ <listA> ->  · = E ;  , put  ]
[ <listA> ->  · = E ;  , switch  ]
[ <listA> ->  · = E ;  , end  ]
[ <listA> ->  · = E ;  , case  ]
[ <listA> ->  · = E ;  , break  ]
[ <listA> ->  · = E ;  , default  ]
[ <listA> ->  · = E ;  , error  ]
[ <listA> ->  · = E ;  , comment  ]
[ <listA> -> = V  · <listA>  , ;  ]
[ <listA> -> = V  · <listA>  , V  ]
[ <listA> -> = V  · <listA>  , :  ]
[ <listA> -> = V  · <listA>  , let  ]
[ <listA> -> = V  · <listA>  , if  ]
[ <listA> -> = V  · <listA>  , goto  ]
[ <listA> -> = V  · <listA>  , load  ]
[ <listA> -> = V  · <listA>  , put  ]
[ <listA> -> = V  · <listA>  , switch  ]
[ <listA> -> = V  · <listA>  , end  ]
[ <listA> -> = V  · <listA>  , case  ]
[ <listA> -> = V  · <listA>  , break  ]
[ <listA> -> = V  · <listA>  , default  ]
[ <listA> -> = V  · <listA>  , error  ]
[ <listA> -> = V  · <listA>  , comment  ]
[ F -> V  ·  , ;  ]
[ F -> V  ·  , -  ]
[ F -> V  ·  , +  ]
[ F -> V  ·  , *  ]
[ F -> V  ·  , /  ]
[ F -> V  ·  , %  ]
}

set 523 = GOTO( set 486 , <listV> ) :
{
[ <op> -> load ( V <listV>  · ) ;  , ;  ]
[ <op> -> load ( V <listV>  · ) ;  , V  ]
[ <op> -> load ( V <listV>  · ) ;  , :  ]
[ <op> -> load ( V <listV>  · ) ;  , let  ]
[ <op> -> load ( V <listV>  · ) ;  , if  ]
[ <op> -> load ( V <listV>  · ) ;  , goto  ]
[ <op> -> load ( V <listV>  · ) ;  , load  ]
[ <op> -> load ( V <listV>  · ) ;  , put  ]
[ <op> -> load ( V <listV>  · ) ;  , switch  ]
[ <op> -> load ( V <listV>  · ) ;  , end  ]
[ <op> -> load ( V <listV>  · ) ;  , case  ]
[ <op> -> load ( V <listV>  · ) ;  , break  ]
[ <op> -> load ( V <listV>  · ) ;  , default  ]
[ <op> -> load ( V <listV>  · ) ;  , error  ]
[ <op> -> load ( V <listV>  · ) ;  , comment  ]
}

set 524 = GOTO( set 487 , <listE> ) :
{
[ <op> -> put ( E <listE>  · ) ;  , ;  ]
[ <op> -> put ( E <listE>  · ) ;  , V  ]
[ <op> -> put ( E <listE>  · ) ;  , :  ]
[ <op> -> put ( E <listE>  · ) ;  , let  ]
[ <op> -> put ( E <listE>  · ) ;  , if  ]
[ <op> -> put ( E <listE>  · ) ;  , goto  ]
[ <op> -> put ( E <listE>  · ) ;  , load  ]
[ <op> -> put ( E <listE>  · ) ;  , put  ]
[ <op> -> put ( E <listE>  · ) ;  , switch  ]
[ <op> -> put ( E <listE>  · ) ;  , end  ]
[ <op> -> put ( E <listE>  · ) ;  , case  ]
[ <op> -> put ( E <listE>  · ) ;  , break  ]
[ <op> -> put ( E <listE>  · ) ;  , default  ]
[ <op> -> put ( E <listE>  · ) ;  , error  ]
[ <op> -> put ( E <listE>  · ) ;  , comment  ]
}

set 525 = GOTO( set 488 , ) ) :
{
[ <op> -> switch ( E )  · <switch_body> end switch ;  , ;  ]
[ <op> -> switch ( E )  · <switch_body> end switch ;  , V  ]
[ <op> -> switch ( E )  · <switch_body> end switch ;  , :  ]
[ <op> -> switch ( E )  · <switch_body> end switch ;  , let  ]
[ <op> -> switch ( E )  · <switch_body> end switch ;  , if  ]
[ <op> -> switch ( E )  · <switch_body> end switch ;  , goto  ]
[ <op> -> switch ( E )  · <switch_body> end switch ;  , load  ]
[ <op> -> switch ( E )  · <switch_body> end switch ;  , put  ]
[ <op> -> switch ( E )  · <switch_body> end switch ;  , switch  ]
[ <op> -> switch ( E )  · <switch_body> end switch ;  , end  ]
[ <op> -> switch ( E )  · <switch_body> end switch ;  , case  ]
[ <op> -> switch ( E )  · <switch_body> end switch ;  , break  ]
[ <op> -> switch ( E )  · <switch_body> end switch ;  , default  ]
[ <op> -> switch ( E )  · <switch_body> end switch ;  , error  ]
[ <op> -> switch ( E )  · <switch_body> end switch ;  , comment  ]
[ <switch_body> ->  · <list_case> <default>  , end  ]
[ <list_case> ->  ·  , end  ]
[ <list_case> ->  ·  , default  ]
[ <list_case> ->  · case C : <pr> <break> <list_case>  , end  ]
[ <list_case> ->  · case C : <pr> <break> <list_case>  , default  ]
}

set 526 = GOTO( set 490 , TYPE ) :
{
[ <op> -> V <listV> : TYPE  · ;  , ;  ]
[ <op> -> V <listV> : TYPE  · ;  , V  ]
[ <op> -> V <listV> : TYPE  · ;  , :  ]
[ <op> -> V <listV> : TYPE  · ;  , let  ]
[ <op> -> V <listV> : TYPE  · ;  , next  ]
[ <op> -> V <listV> : TYPE  · ;  , if  ]
[ <op> -> V <listV> : TYPE  · ;  , goto  ]
[ <op> -> V <listV> : TYPE  · ;  , load  ]
[ <op> -> V <listV> : TYPE  · ;  , put  ]
[ <op> -> V <listV> : TYPE  · ;  , switch  ]
[ <op> -> V <listV> : TYPE  · ;  , error  ]
[ <op> -> V <listV> : TYPE  · ;  , comment  ]
}

set 527 = GOTO( set 491 , = ) :
{
[ <op> -> V for V =  · E to E <step> <pr> next V  , ;  ]
[ <op> -> V for V =  · E to E <step> <pr> next V  , V  ]
[ <op> -> V for V =  · E to E <step> <pr> next V  , :  ]
[ <op> -> V for V =  · E to E <step> <pr> next V  , let  ]
[ <op> -> V for V =  · E to E <step> <pr> next V  , next  ]
[ <op> -> V for V =  · E to E <step> <pr> next V  , if  ]
[ <op> -> V for V =  · E to E <step> <pr> next V  , goto  ]
[ <op> -> V for V =  · E to E <step> <pr> next V  , load  ]
[ <op> -> V for V =  · E to E <step> <pr> next V  , put  ]
[ <op> -> V for V =  · E to E <step> <pr> next V  , switch  ]
[ <op> -> V for V =  · E to E <step> <pr> next V  , error  ]
[ <op> -> V for V =  · E to E <step> <pr> next V  , comment  ]
[ E ->  · E - T  , to  ]
[ E ->  · E - T  , -  ]
[ E ->  · E - T  , +  ]
[ E ->  · E + T  , to  ]
[ E ->  · E + T  , -  ]
[ E ->  · E + T  , +  ]
[ E ->  · T  , to  ]
[ E ->  · T  , -  ]
[ E ->  · T  , +  ]
[ T ->  · T * F  , to  ]
[ T ->  · T * F  , -  ]
[ T ->  · T * F  , +  ]
[ T ->  · T * F  , *  ]
[ T ->  · T * F  , /  ]
[ T ->  · T * F  , %  ]
[ T ->  · T / F  , to  ]
[ T ->  · T / F  , -  ]
[ T ->  · T / F  , +  ]
[ T ->  · T / F  , *  ]
[ T ->  · T / F  , /  ]
[ T ->  · T / F  , %  ]
[ T ->  · T % F  , to  ]
[ T ->  · T % F  , -  ]
[ T ->  · T % F  , +  ]
[ T ->  · T % F  , *  ]
[ T ->  · T % F  , /  ]
[ T ->  · T % F  , %  ]
[ T ->  · F  , to  ]
[ T ->  · F  , -  ]
[ T ->  · F  , +  ]
[ T ->  · F  , *  ]
[ T ->  · F  , /  ]
[ T ->  · F  , %  ]
[ F ->  · V  , to  ]
[ F ->  · V  , -  ]
[ F ->  · V  , +  ]
[ F ->  · V  , *  ]
[ F ->  · V  , /  ]
[ F ->  · V  , %  ]
[ F ->  · ( E )  , to  ]
[ F ->  · ( E )  , -  ]
[ F ->  · ( E )  , +  ]
[ F ->  · ( E )  , *  ]
[ F ->  · ( E )  , /  ]
[ F ->  · ( E )  , %  ]
[ F ->  · C  , to  ]
[ F ->  · C  , -  ]
[ F ->  · C  , +  ]
[ F ->  · C  , *  ]
[ F ->  · C  , /  ]
[ F ->  · C  , %  ]
[ F ->  · value ( E , E )  , to  ]
[ F ->  · value ( E , E )  , -  ]
[ F ->  · value ( E , E )  , +  ]
[ F ->  · value ( E , E )  , *  ]
[ F ->  · value ( E , E )  , /  ]
[ F ->  · value ( E , E )  , %  ]
[ F ->  · derivative ( E )  , to  ]
[ F ->  · derivative ( E )  , -  ]
[ F ->  · derivative ( E )  , +  ]
[ F ->  · derivative ( E )  , *  ]
[ F ->  · derivative ( E )  , /  ]
[ F ->  · derivative ( E )  , %  ]
[ F ->  · coeff ( E , E )  , to  ]
[ F ->  · coeff ( E , E )  , -  ]
[ F ->  · coeff ( E , E )  , +  ]
[ F ->  · coeff ( E , E )  , *  ]
[ F ->  · coeff ( E , E )  , /  ]
[ F ->  · coeff ( E , E )  , %  ]
[ F ->  · deg ( E )  , to  ]
[ F ->  · deg ( E )  , -  ]
[ F ->  · deg ( E )  , +  ]
[ F ->  · deg ( E )  , *  ]
[ F ->  · deg ( E )  , /  ]
[ F ->  · deg ( E )  , %  ]
}

set 528 = GOTO( set 492 , V ) :
{
[ <op> -> if <test> goto V  · <else> ;  , ;  ]
[ <op> -> if <test> goto V  · <else> ;  , V  ]
[ <op> -> if <test> goto V  · <else> ;  , :  ]
[ <op> -> if <test> goto V  · <else> ;  , let  ]
[ <op> -> if <test> goto V  · <else> ;  , next  ]
[ <op> -> if <test> goto V  · <else> ;  , if  ]
[ <op> -> if <test> goto V  · <else> ;  , goto  ]
[ <op> -> if <test> goto V  · <else> ;  , load  ]
[ <op> -> if <test> goto V  · <else> ;  , put  ]
[ <op> -> if <test> goto V  · <else> ;  , switch  ]
[ <op> -> if <test> goto V  · <else> ;  , error  ]
[ <op> -> if <test> goto V  · <else> ;  , comment  ]
[ <else> ->  ·  , ;  ]
[ <else> ->  · else goto V  , ;  ]
}

set 529 = GOTO( set 494 , E ) :
{
[ <listA> -> = E  · ;  , ;  ]
[ <listA> -> = E  · ;  , V  ]
[ <listA> -> = E  · ;  , :  ]
[ <listA> -> = E  · ;  , let  ]
[ <listA> -> = E  · ;  , next  ]
[ <listA> -> = E  · ;  , if  ]
[ <listA> -> = E  · ;  , goto  ]
[ <listA> -> = E  · ;  , load  ]
[ <listA> -> = E  · ;  , put  ]
[ <listA> -> = E  · ;  , switch  ]
[ <listA> -> = E  · ;  , error  ]
[ <listA> -> = E  · ;  , comment  ]
[ E -> E  · - T  , ;  ]
[ E -> E  · - T  , -  ]
[ E -> E  · - T  , +  ]
[ E -> E  · + T  , ;  ]
[ E -> E  · + T  , -  ]
[ E -> E  · + T  , +  ]
}

set 530 = GOTO( set 494 , V ) :
{
[ <listA> ->  · = V <listA>  , ;  ]
[ <listA> ->  · = V <listA>  , V  ]
[ <listA> ->  · = V <listA>  , :  ]
[ <listA> ->  · = V <listA>  , let  ]
[ <listA> ->  · = V <listA>  , next  ]
[ <listA> ->  · = V <listA>  , if  ]
[ <listA> ->  · = V <listA>  , goto  ]
[ <listA> ->  · = V <listA>  , load  ]
[ <listA> ->  · = V <listA>  , put  ]
[ <listA> ->  · = V <listA>  , switch  ]
[ <listA> ->  · = V <listA>  , error  ]
[ <listA> ->  · = V <listA>  , comment  ]
[ <listA> ->  · = E ;  , ;  ]
[ <listA> ->  · = E ;  , V  ]
[ <listA> ->  · = E ;  , :  ]
[ <listA> ->  · = E ;  , let  ]
[ <listA> ->  · = E ;  , next  ]
[ <listA> ->  · = E ;  , if  ]
[ <listA> ->  · = E ;  , goto  ]
[ <listA> ->  · = E ;  , load  ]
[ <listA> ->  · = E ;  , put  ]
[ <listA> ->  · = E ;  , switch  ]
[ <listA> ->  · = E ;  , error  ]
[ <listA> ->  · = E ;  , comment  ]
[ <listA> -> = V  · <listA>  , ;  ]
[ <listA> -> = V  · <listA>  , V  ]
[ <listA> -> = V  · <listA>  , :  ]
[ <listA> -> = V  · <listA>  , let  ]
[ <listA> -> = V  · <listA>  , next  ]
[ <listA> -> = V  · <listA>  , if  ]
[ <listA> -> = V  · <listA>  , goto  ]
[ <listA> -> = V  · <listA>  , load  ]
[ <listA> -> = V  · <listA>  , put  ]
[ <listA> -> = V  · <listA>  , switch  ]
[ <listA> -> = V  · <listA>  , error  ]
[ <listA> -> = V  · <listA>  , comment  ]
[ F -> V  ·  , ;  ]
[ F -> V  ·  , -  ]
[ F -> V  ·  , +  ]
[ F -> V  ·  , *  ]
[ F -> V  ·  , /  ]
[ F -> V  ·  , %  ]
}

set 531 = GOTO( set 495 , <listV> ) :
{
[ <op> -> load ( V <listV>  · ) ;  , ;  ]
[ <op> -> load ( V <listV>  · ) ;  , V  ]
[ <op> -> load ( V <listV>  · ) ;  , :  ]
[ <op> -> load ( V <listV>  · ) ;  , let  ]
[ <op> -> load ( V <listV>  · ) ;  , next  ]
[ <op> -> load ( V <listV>  · ) ;  , if  ]
[ <op> -> load ( V <listV>  · ) ;  , goto  ]
[ <op> -> load ( V <listV>  · ) ;  , load  ]
[ <op> -> load ( V <listV>  · ) ;  , put  ]
[ <op> -> load ( V <listV>  · ) ;  , switch  ]
[ <op> -> load ( V <listV>  · ) ;  , error  ]
[ <op> -> load ( V <listV>  · ) ;  , comment  ]
}

set 532 = GOTO( set 496 , <listE> ) :
{
[ <op> -> put ( E <listE>  · ) ;  , ;  ]
[ <op> -> put ( E <listE>  · ) ;  , V  ]
[ <op> -> put ( E <listE>  · ) ;  , :  ]
[ <op> -> put ( E <listE>  · ) ;  , let  ]
[ <op> -> put ( E <listE>  · ) ;  , next  ]
[ <op> -> put ( E <listE>  · ) ;  , if  ]
[ <op> -> put ( E <listE>  · ) ;  , goto  ]
[ <op> -> put ( E <listE>  · ) ;  , load  ]
[ <op> -> put ( E <listE>  · ) ;  , put  ]
[ <op> -> put ( E <listE>  · ) ;  , switch  ]
[ <op> -> put ( E <listE>  · ) ;  , error  ]
[ <op> -> put ( E <listE>  · ) ;  , comment  ]
}

set 533 = GOTO( set 497 , ) ) :
{
[ <op> -> switch ( E )  · <switch_body> end switch ;  , ;  ]
[ <op> -> switch ( E )  · <switch_body> end switch ;  , V  ]
[ <op> -> switch ( E )  · <switch_body> end switch ;  , :  ]
[ <op> -> switch ( E )  · <switch_body> end switch ;  , let  ]
[ <op> -> switch ( E )  · <switch_body> end switch ;  , next  ]
[ <op> -> switch ( E )  · <switch_body> end switch ;  , if  ]
[ <op> -> switch ( E )  · <switch_body> end switch ;  , goto  ]
[ <op> -> switch ( E )  · <switch_body> end switch ;  , load  ]
[ <op> -> switch ( E )  · <switch_body> end switch ;  , put  ]
[ <op> -> switch ( E )  · <switch_body> end switch ;  , switch  ]
[ <op> -> switch ( E )  · <switch_body> end switch ;  , error  ]
[ <op> -> switch ( E )  · <switch_body> end switch ;  , comment  ]
[ <switch_body> ->  · <list_case> <default>  , end  ]
[ <list_case> ->  ·  , end  ]
[ <list_case> ->  ·  , default  ]
[ <list_case> ->  · case C : <pr> <break> <list_case>  , end  ]
[ <list_case> ->  · case C : <pr> <break> <list_case>  , default  ]
}

set 534 = GOTO( set 504 , , ) :
{
[ E ->  · E - T  , )  ]
[ E ->  · E - T  , -  ]
[ E ->  · E - T  , +  ]
[ E ->  · E + T  , )  ]
[ E ->  · E + T  , -  ]
[ E ->  · E + T  , +  ]
[ E ->  · T  , )  ]
[ E ->  · T  , -  ]
[ E ->  · T  , +  ]
[ T ->  · T * F  , )  ]
[ T ->  · T * F  , -  ]
[ T ->  · T * F  , +  ]
[ T ->  · T * F  , *  ]
[ T ->  · T * F  , /  ]
[ T ->  · T * F  , %  ]
[ T ->  · T / F  , )  ]
[ T ->  · T / F  , -  ]
[ T ->  · T / F  , +  ]
[ T ->  · T / F  , *  ]
[ T ->  · T / F  , /  ]
[ T ->  · T / F  , %  ]
[ T ->  · T % F  , )  ]
[ T ->  · T % F  , -  ]
[ T ->  · T % F  , +  ]
[ T ->  · T % F  , *  ]
[ T ->  · T % F  , /  ]
[ T ->  · T % F  , %  ]
[ T ->  · F  , )  ]
[ T ->  · F  , -  ]
[ T ->  · F  , +  ]
[ T ->  · F  , *  ]
[ T ->  · F  , /  ]
[ T ->  · F  , %  ]
[ F ->  · V  , )  ]
[ F ->  · V  , -  ]
[ F ->  · V  , +  ]
[ F ->  · V  , *  ]
[ F ->  · V  , /  ]
[ F ->  · V  , %  ]
[ F ->  · ( E )  , )  ]
[ F ->  · ( E )  , -  ]
[ F ->  · ( E )  , +  ]
[ F ->  · ( E )  , *  ]
[ F ->  · ( E )  , /  ]
[ F ->  · ( E )  , %  ]
[ F ->  · C  , )  ]
[ F ->  · C  , -  ]
[ F ->  · C  , +  ]
[ F ->  · C  , *  ]
[ F ->  · C  , /  ]
[ F ->  · C  , %  ]
[ F ->  · value ( E , E )  , )  ]
[ F ->  · value ( E , E )  , -  ]
[ F ->  · value ( E , E )  , +  ]
[ F ->  · value ( E , E )  , *  ]
[ F ->  · value ( E , E )  , /  ]
[ F ->  · value ( E , E )  , %  ]
[ F ->  · derivative ( E )  , )  ]
[ F ->  · derivative ( E )  , -  ]
[ F ->  · derivative ( E )  , +  ]
[ F ->  · derivative ( E )  , *  ]
[ F ->  · derivative ( E )  , /  ]
[ F ->  · derivative ( E )  , %  ]
[ F ->  · coeff ( E , E )  , )  ]
[ F ->  · coeff ( E , E )  , -  ]
[ F ->  · coeff ( E , E )  , +  ]
[ F ->  · coeff ( E , E )  , *  ]
[ F ->  · coeff ( E , E )  , /  ]
[ F ->  · coeff ( E , E )  , %  ]
[ F ->  · deg ( E )  , )  ]
[ F ->  · deg ( E )  , -  ]
[ F ->  · deg ( E )  , +  ]
[ F ->  · deg ( E )  , *  ]
[ F ->  · deg ( E )  , /  ]
[ F ->  · deg ( E )  , %  ]
[ F -> coeff ( E ,  · E )  , ;  ]
[ F -> coeff ( E ,  · E )  , V  ]
[ F -> coeff ( E ,  · E )  , :  ]
[ F -> coeff ( E ,  · E )  , let  ]
[ F -> coeff ( E ,  · E )  , next  ]
[ F -> coeff ( E ,  · E )  , if  ]
[ F -> coeff ( E ,  · E )  , goto  ]
[ F -> coeff ( E ,  · E )  , load  ]
[ F -> coeff ( E ,  · E )  , put  ]
[ F -> coeff ( E ,  · E )  , switch  ]
[ F -> coeff ( E ,  · E )  , error  ]
[ F -> coeff ( E ,  · E )  , comment  ]
[ F -> coeff ( E ,  · E )  , -  ]
[ F -> coeff ( E ,  · E )  , +  ]
[ F -> coeff ( E ,  · E )  , *  ]
[ F -> coeff ( E ,  · E )  , /  ]
[ F -> coeff ( E ,  · E )  , %  ]
}

set 535 = GOTO( set 505 , ) ) :
{
[ F -> deg ( E )  ·  , ;  ]
[ F -> deg ( E )  ·  , V  ]
[ F -> deg ( E )  ·  , :  ]
[ F -> deg ( E )  ·  , let  ]
[ F -> deg ( E )  ·  , next  ]
[ F -> deg ( E )  ·  , if  ]
[ F -> deg ( E )  ·  , goto  ]
[ F -> deg ( E )  ·  , load  ]
[ F -> deg ( E )  ·  , put  ]
[ F -> deg ( E )  ·  , switch  ]
[ F -> deg ( E )  ·  , error  ]
[ F -> deg ( E )  ·  , comment  ]
[ F -> deg ( E )  ·  , -  ]
[ F -> deg ( E )  ·  , +  ]
[ F -> deg ( E )  ·  , *  ]
[ F -> deg ( E )  ·  , /  ]
[ F -> deg ( E )  ·  , %  ]
}

set 536 = GOTO( set 506 , ) ) :
{
[ F -> derivative ( E )  ·  , ;  ]
[ F -> derivative ( E )  ·  , V  ]
[ F -> derivative ( E )  ·  , :  ]
[ F -> derivative ( E )  ·  , let  ]
[ F -> derivative ( E )  ·  , next  ]
[ F -> derivative ( E )  ·  , if  ]
[ F -> derivative ( E )  ·  , goto  ]
[ F -> derivative ( E )  ·  , load  ]
[ F -> derivative ( E )  ·  , put  ]
[ F -> derivative ( E )  ·  , switch  ]
[ F -> derivative ( E )  ·  , error  ]
[ F -> derivative ( E )  ·  , comment  ]
[ F -> derivative ( E )  ·  , -  ]
[ F -> derivative ( E )  ·  , +  ]
[ F -> derivative ( E )  ·  , *  ]
[ F -> derivative ( E )  ·  , /  ]
[ F -> derivative ( E )  ·  , %  ]
}

set 537 = GOTO( set 507 , , ) :
{
[ E ->  · E - T  , )  ]
[ E ->  · E - T  , -  ]
[ E ->  · E - T  , +  ]
[ E ->  · E + T  , )  ]
[ E ->  · E + T  , -  ]
[ E ->  · E + T  , +  ]
[ E ->  · T  , )  ]
[ E ->  · T  , -  ]
[ E ->  · T  , +  ]
[ T ->  · T * F  , )  ]
[ T ->  · T * F  , -  ]
[ T ->  · T * F  , +  ]
[ T ->  · T * F  , *  ]
[ T ->  · T * F  , /  ]
[ T ->  · T * F  , %  ]
[ T ->  · T / F  , )  ]
[ T ->  · T / F  , -  ]
[ T ->  · T / F  , +  ]
[ T ->  · T / F  , *  ]
[ T ->  · T / F  , /  ]
[ T ->  · T / F  , %  ]
[ T ->  · T % F  , )  ]
[ T ->  · T % F  , -  ]
[ T ->  · T % F  , +  ]
[ T ->  · T % F  , *  ]
[ T ->  · T % F  , /  ]
[ T ->  · T % F  , %  ]
[ T ->  · F  , )  ]
[ T ->  · F  , -  ]
[ T ->  · F  , +  ]
[ T ->  · F  , *  ]
[ T ->  · F  , /  ]
[ T ->  · F  , %  ]
[ F ->  · V  , )  ]
[ F ->  · V  , -  ]
[ F ->  · V  , +  ]
[ F ->  · V  , *  ]
[ F ->  · V  , /  ]
[ F ->  · V  , %  ]
[ F ->  · ( E )  , )  ]
[ F ->  · ( E )  , -  ]
[ F ->  · ( E )  , +  ]
[ F ->  · ( E )  , *  ]
[ F ->  · ( E )  , /  ]
[ F ->  · ( E )  , %  ]
[ F ->  · C  , )  ]
[ F ->  · C  , -  ]
[ F ->  · C  , +  ]
[ F ->  · C  , *  ]
[ F ->  · C  , /  ]
[ F ->  · C  , %  ]
[ F ->  · value ( E , E )  , )  ]
[ F ->  · value ( E , E )  , -  ]
[ F ->  · value ( E , E )  , +  ]
[ F ->  · value ( E , E )  , *  ]
[ F ->  · value ( E , E )  , /  ]
[ F ->  · value ( E , E )  , %  ]
[ F ->  · derivative ( E )  , )  ]
[ F ->  · derivative ( E )  , -  ]
[ F ->  · derivative ( E )  , +  ]
[ F ->  · derivative ( E )  , *  ]
[ F ->  · derivative ( E )  , /  ]
[ F ->  · derivative ( E )  , %  ]
[ F ->  · coeff ( E , E )  , )  ]
[ F ->  · coeff ( E , E )  , -  ]
[ F ->  · coeff ( E , E )  , +  ]
[ F ->  · coeff ( E , E )  , *  ]
[ F ->  · coeff ( E , E )  , /  ]
[ F ->  · coeff ( E , E )  , %  ]
[ F ->  · deg ( E )  , )  ]
[ F ->  · deg ( E )  , -  ]
[ F ->  · deg ( E )  , +  ]
[ F ->  · deg ( E )  , *  ]
[ F ->  · deg ( E )  , /  ]
[ F ->  · deg ( E )  , %  ]
[ F -> value ( E ,  · E )  , ;  ]
[ F -> value ( E ,  · E )  , V  ]
[ F -> value ( E ,  · E )  , :  ]
[ F -> value ( E ,  · E )  , let  ]
[ F -> value ( E ,  · E )  , next  ]
[ F -> value ( E ,  · E )  , if  ]
[ F -> value ( E ,  · E )  , goto  ]
[ F -> value ( E ,  · E )  , load  ]
[ F -> value ( E ,  · E )  , put  ]
[ F -> value ( E ,  · E )  , switch  ]
[ F -> value ( E ,  · E )  , error  ]
[ F -> value ( E ,  · E )  , comment  ]
[ F -> value ( E ,  · E )  , -  ]
[ F -> value ( E ,  · E )  , +  ]
[ F -> value ( E ,  · E )  , *  ]
[ F -> value ( E ,  · E )  , /  ]
[ F -> value ( E ,  · E )  , %  ]
}

set 538 = GOTO( set 508 , ) ) :
{
[ F -> coeff ( E , E )  ·  , ;  ]
[ F -> coeff ( E , E )  ·  , V  ]
[ F -> coeff ( E , E )  ·  , :  ]
[ F -> coeff ( E , E )  ·  , let  ]
[ F -> coeff ( E , E )  ·  , next  ]
[ F -> coeff ( E , E )  ·  , adding  ]
[ F -> coeff ( E , E )  ·  , if  ]
[ F -> coeff ( E , E )  ·  , goto  ]
[ F -> coeff ( E , E )  ·  , load  ]
[ F -> coeff ( E , E )  ·  , put  ]
[ F -> coeff ( E , E )  ·  , switch  ]
[ F -> coeff ( E , E )  ·  , error  ]
[ F -> coeff ( E , E )  ·  , comment  ]
[ F -> coeff ( E , E )  ·  , -  ]
[ F -> coeff ( E , E )  ·  , +  ]
[ F -> coeff ( E , E )  ·  , *  ]
[ F -> coeff ( E , E )  ·  , /  ]
[ F -> coeff ( E , E )  ·  , %  ]
}

set 539 = GOTO( set 509 , ) ) :
{
[ F -> value ( E , E )  ·  , ;  ]
[ F -> value ( E , E )  ·  , V  ]
[ F -> value ( E , E )  ·  , :  ]
[ F -> value ( E , E )  ·  , let  ]
[ F -> value ( E , E )  ·  , next  ]
[ F -> value ( E , E )  ·  , adding  ]
[ F -> value ( E , E )  ·  , if  ]
[ F -> value ( E , E )  ·  , goto  ]
[ F -> value ( E , E )  ·  , load  ]
[ F -> value ( E , E )  ·  , put  ]
[ F -> value ( E , E )  ·  , switch  ]
[ F -> value ( E , E )  ·  , error  ]
[ F -> value ( E , E )  ·  , comment  ]
[ F -> value ( E , E )  ·  , -  ]
[ F -> value ( E , E )  ·  , +  ]
[ F -> value ( E , E )  ·  , *  ]
[ F -> value ( E , E )  ·  , /  ]
[ F -> value ( E , E )  ·  , %  ]
}

set 540 = GOTO( set 510 , ; ) :
{
[ <op> -> V <listV> : TYPE ;  ·  , ;  ]
[ <op> -> V <listV> : TYPE ;  ·  , V  ]
[ <op> -> V <listV> : TYPE ;  ·  , :  ]
[ <op> -> V <listV> : TYPE ;  ·  , let  ]
[ <op> -> V <listV> : TYPE ;  ·  , if  ]
[ <op> -> V <listV> : TYPE ;  ·  , goto  ]
[ <op> -> V <listV> : TYPE ;  ·  , load  ]
[ <op> -> V <listV> : TYPE ;  ·  , put  ]
[ <op> -> V <listV> : TYPE ;  ·  , switch  ]
[ <op> -> V <listV> : TYPE ;  ·  , end  ]
[ <op> -> V <listV> : TYPE ;  ·  , break  ]
[ <op> -> V <listV> : TYPE ;  ·  , error  ]
[ <op> -> V <listV> : TYPE ;  ·  , comment  ]
}

set 541 = GOTO( set 511 , E ) :
{
[ <op> -> V for V = E  · to E <step> <pr> next V  , ;  ]
[ <op> -> V for V = E  · to E <step> <pr> next V  , V  ]
[ <op> -> V for V = E  · to E <step> <pr> next V  , :  ]
[ <op> -> V for V = E  · to E <step> <pr> next V  , let  ]
[ <op> -> V for V = E  · to E <step> <pr> next V  , if  ]
[ <op> -> V for V = E  · to E <step> <pr> next V  , goto  ]
[ <op> -> V for V = E  · to E <step> <pr> next V  , load  ]
[ <op> -> V for V = E  · to E <step> <pr> next V  , put  ]
[ <op> -> V for V = E  · to E <step> <pr> next V  , switch  ]
[ <op> -> V for V = E  · to E <step> <pr> next V  , end  ]
[ <op> -> V for V = E  · to E <step> <pr> next V  , break  ]
[ <op> -> V for V = E  · to E <step> <pr> next V  , error  ]
[ <op> -> V for V = E  · to E <step> <pr> next V  , comment  ]
[ E -> E  · - T  , to  ]
[ E -> E  · - T  , -  ]
[ E -> E  · - T  , +  ]
[ E -> E  · + T  , to  ]
[ E -> E  · + T  , -  ]
[ E -> E  · + T  , +  ]
}

set 542 = GOTO( set 512 , <else> ) :
{
[ <op> -> if <test> goto V <else>  · ;  , ;  ]
[ <op> -> if <test> goto V <else>  · ;  , V  ]
[ <op> -> if <test> goto V <else>  · ;  , :  ]
[ <op> -> if <test> goto V <else>  · ;  , let  ]
[ <op> -> if <test> goto V <else>  · ;  , if  ]
[ <op> -> if <test> goto V <else>  · ;  , goto  ]
[ <op> -> if <test> goto V <else>  · ;  , load  ]
[ <op> -> if <test> goto V <else>  · ;  , put  ]
[ <op> -> if <test> goto V <else>  · ;  , switch  ]
[ <op> -> if <test> goto V <else>  · ;  , end  ]
[ <op> -> if <test> goto V <else>  · ;  , break  ]
[ <op> -> if <test> goto V <else>  · ;  , error  ]
[ <op> -> if <test> goto V <else>  · ;  , comment  ]
}

set 543 = GOTO( set 513 , ; ) :
{
[ <listA> -> = E ;  ·  , ;  ]
[ <listA> -> = E ;  ·  , V  ]
[ <listA> -> = E ;  ·  , :  ]
[ <listA> -> = E ;  ·  , let  ]
[ <listA> -> = E ;  ·  , if  ]
[ <listA> -> = E ;  ·  , goto  ]
[ <listA> -> = E ;  ·  , load  ]
[ <listA> -> = E ;  ·  , put  ]
[ <listA> -> = E ;  ·  , switch  ]
[ <listA> -> = E ;  ·  , end  ]
[ <listA> -> = E ;  ·  , break  ]
[ <listA> -> = E ;  ·  , error  ]
[ <listA> -> = E ;  ·  , comment  ]
}

set 544 = GOTO( set 514 , <listA> ) :
{
[ <listA> -> = V <listA>  ·  , ;  ]
[ <listA> -> = V <listA>  ·  , V  ]
[ <listA> -> = V <listA>  ·  , :  ]
[ <listA> -> = V <listA>  ·  , let  ]
[ <listA> -> = V <listA>  ·  , if  ]
[ <listA> -> = V <listA>  ·  , goto  ]
[ <listA> -> = V <listA>  ·  , load  ]
[ <listA> -> = V <listA>  ·  , put  ]
[ <listA> -> = V <listA>  ·  , switch  ]
[ <listA> -> = V <listA>  ·  , end  ]
[ <listA> -> = V <listA>  ·  , break  ]
[ <listA> -> = V <listA>  ·  , error  ]
[ <listA> -> = V <listA>  ·  , comment  ]
}

set 545 = GOTO( set 515 , ) ) :
{
[ <op> -> load ( V <listV> )  · ;  , ;  ]
[ <op> -> load ( V <listV> )  · ;  , V  ]
[ <op> -> load ( V <listV> )  · ;  , :  ]
[ <op> -> load ( V <listV> )  · ;  , let  ]
[ <op> -> load ( V <listV> )  · ;  , if  ]
[ <op> -> load ( V <listV> )  · ;  , goto  ]
[ <op> -> load ( V <listV> )  · ;  , load  ]
[ <op> -> load ( V <listV> )  · ;  , put  ]
[ <op> -> load ( V <listV> )  · ;  , switch  ]
[ <op> -> load ( V <listV> )  · ;  , end  ]
[ <op> -> load ( V <listV> )  · ;  , break  ]
[ <op> -> load ( V <listV> )  · ;  , error  ]
[ <op> -> load ( V <listV> )  · ;  , comment  ]
}

set 546 = GOTO( set 516 , ) ) :
{
[ <op> -> put ( E <listE> )  · ;  , ;  ]
[ <op> -> put ( E <listE> )  · ;  , V  ]
[ <op> -> put ( E <listE> )  · ;  , :  ]
[ <op> -> put ( E <listE> )  · ;  , let  ]
[ <op> -> put ( E <listE> )  · ;  , if  ]
[ <op> -> put ( E <listE> )  · ;  , goto  ]
[ <op> -> put ( E <listE> )  · ;  , load  ]
[ <op> -> put ( E <listE> )  · ;  , put  ]
[ <op> -> put ( E <listE> )  · ;  , switch  ]
[ <op> -> put ( E <listE> )  · ;  , end  ]
[ <op> -> put ( E <listE> )  · ;  , break  ]
[ <op> -> put ( E <listE> )  · ;  , error  ]
[ <op> -> put ( E <listE> )  · ;  , comment  ]
}

set 547 = GOTO( set 517 , <switch_body> ) :
{
[ <op> -> switch ( E ) <switch_body>  · end switch ;  , ;  ]
[ <op> -> switch ( E ) <switch_body>  · end switch ;  , V  ]
[ <op> -> switch ( E ) <switch_body>  · end switch ;  , :  ]
[ <op> -> switch ( E ) <switch_body>  · end switch ;  , let  ]
[ <op> -> switch ( E ) <switch_body>  · end switch ;  , if  ]
[ <op> -> switch ( E ) <switch_body>  · end switch ;  , goto  ]
[ <op> -> switch ( E ) <switch_body>  · end switch ;  , load  ]
[ <op> -> switch ( E ) <switch_body>  · end switch ;  , put  ]
[ <op> -> switch ( E ) <switch_body>  · end switch ;  , switch  ]
[ <op> -> switch ( E ) <switch_body>  · end switch ;  , end  ]
[ <op> -> switch ( E ) <switch_body>  · end switch ;  , break  ]
[ <op> -> switch ( E ) <switch_body>  · end switch ;  , error  ]
[ <op> -> switch ( E ) <switch_body>  · end switch ;  , comment  ]
}

set 548 = GOTO( set 518 , ; ) :
{
[ <op> -> V <listV> : TYPE ;  ·  , ;  ]
[ <op> -> V <listV> : TYPE ;  ·  , V  ]
[ <op> -> V <listV> : TYPE ;  ·  , :  ]
[ <op> -> V <listV> : TYPE ;  ·  , let  ]
[ <op> -> V <listV> : TYPE ;  ·  , if  ]
[ <op> -> V <listV> : TYPE ;  ·  , goto  ]
[ <op> -> V <listV> : TYPE ;  ·  , load  ]
[ <op> -> V <listV> : TYPE ;  ·  , put  ]
[ <op> -> V <listV> : TYPE ;  ·  , switch  ]
[ <op> -> V <listV> : TYPE ;  ·  , end  ]
[ <op> -> V <listV> : TYPE ;  ·  , case  ]
[ <op> -> V <listV> : TYPE ;  ·  , break  ]
[ <op> -> V <listV> : TYPE ;  ·  , default  ]
[ <op> -> V <listV> : TYPE ;  ·  , error  ]
[ <op> -> V <listV> : TYPE ;  ·  , comment  ]
}

set 549 = GOTO( set 519 , E ) :
{
[ <op> -> V for V = E  · to E <step> <pr> next V  , ;  ]
[ <op> -> V for V = E  · to E <step> <pr> next V  , V  ]
[ <op> -> V for V = E  · to E <step> <pr> next V  , :  ]
[ <op> -> V for V = E  · to E <step> <pr> next V  , let  ]
[ <op> -> V for V = E  · to E <step> <pr> next V  , if  ]
[ <op> -> V for V = E  · to E <step> <pr> next V  , goto  ]
[ <op> -> V for V = E  · to E <step> <pr> next V  , load  ]
[ <op> -> V for V = E  · to E <step> <pr> next V  , put  ]
[ <op> -> V for V = E  · to E <step> <pr> next V  , switch  ]
[ <op> -> V for V = E  · to E <step> <pr> next V  , end  ]
[ <op> -> V for V = E  · to E <step> <pr> next V  , case  ]
[ <op> -> V for V = E  · to E <step> <pr> next V  , break  ]
[ <op> -> V for V = E  · to E <step> <pr> next V  , default  ]
[ <op> -> V for V = E  · to E <step> <pr> next V  , error  ]
[ <op> -> V for V = E  · to E <step> <pr> next V  , comment  ]
[ E -> E  · - T  , to  ]
[ E -> E  · - T  , -  ]
[ E -> E  · - T  , +  ]
[ E -> E  · + T  , to  ]
[ E -> E  · + T  , -  ]
[ E -> E  · + T  , +  ]
}

set 550 = GOTO( set 520 , <else> ) :
{
[ <op> -> if <test> goto V <else>  · ;  , ;  ]
[ <op> -> if <test> goto V <else>  · ;  , V  ]
[ <op> -> if <test> goto V <else>  · ;  , :  ]
[ <op> -> if <test> goto V <else>  · ;  , let  ]
[ <op> -> if <test> goto V <else>  · ;  , if  ]
[ <op> -> if <test> goto V <else>  · ;  , goto  ]
[ <op> -> if <test> goto V <else>  · ;  , load  ]
[ <op> -> if <test> goto V <else>  · ;  , put  ]
[ <op> -> if <test> goto V <else>  · ;  , switch  ]
[ <op> -> if <test> goto V <else>  · ;  , end  ]
[ <op> -> if <test> goto V <else>  · ;  , case  ]
[ <op> -> if <test> goto V <else>  · ;  , break  ]
[ <op> -> if <test> goto V <else>  · ;  , default  ]
[ <op> -> if <test> goto V <else>  · ;  , error  ]
[ <op> -> if <test> goto V <else>  · ;  , comment  ]
}

set 551 = GOTO( set 521 , ; ) :
{
[ <listA> -> = E ;  ·  , ;  ]
[ <listA> -> = E ;  ·  , V  ]
[ <listA> -> = E ;  ·  , :  ]
[ <listA> -> = E ;  ·  , let  ]
[ <listA> -> = E ;  ·  , if  ]
[ <listA> -> = E ;  ·  , goto  ]
[ <listA> -> = E ;  ·  , load  ]
[ <listA> -> = E ;  ·  , put  ]
[ <listA> -> = E ;  ·  , switch  ]
[ <listA> -> = E ;  ·  , end  ]
[ <listA> -> = E ;  ·  , case  ]
[ <listA> -> = E ;  ·  , break  ]
[ <listA> -> = E ;  ·  , default  ]
[ <listA> -> = E ;  ·  , error  ]
[ <listA> -> = E ;  ·  , comment  ]
}

set 552 = GOTO( set 522 , <listA> ) :
{
[ <listA> -> = V <listA>  ·  , ;  ]
[ <listA> -> = V <listA>  ·  , V  ]
[ <listA> -> = V <listA>  ·  , :  ]
[ <listA> -> = V <listA>  ·  , let  ]
[ <listA> -> = V <listA>  ·  , if  ]
[ <listA> -> = V <listA>  ·  , goto  ]
[ <listA> -> = V <listA>  ·  , load  ]
[ <listA> -> = V <listA>  ·  , put  ]
[ <listA> -> = V <listA>  ·  , switch  ]
[ <listA> -> = V <listA>  ·  , end  ]
[ <listA> -> = V <listA>  ·  , case  ]
[ <listA> -> = V <listA>  ·  , break  ]
[ <listA> -> = V <listA>  ·  , default  ]
[ <listA> -> = V <listA>  ·  , error  ]
[ <listA> -> = V <listA>  ·  , comment  ]
}

set 553 = GOTO( set 523 , ) ) :
{
[ <op> -> load ( V <listV> )  · ;  , ;  ]
[ <op> -> load ( V <listV> )  · ;  , V  ]
[ <op> -> load ( V <listV> )  · ;  , :  ]
[ <op> -> load ( V <listV> )  · ;  , let  ]
[ <op> -> load ( V <listV> )  · ;  , if  ]
[ <op> -> load ( V <listV> )  · ;  , goto  ]
[ <op> -> load ( V <listV> )  · ;  , load  ]
[ <op> -> load ( V <listV> )  · ;  , put  ]
[ <op> -> load ( V <listV> )  · ;  , switch  ]
[ <op> -> load ( V <listV> )  · ;  , end  ]
[ <op> -> load ( V <listV> )  · ;  , case  ]
[ <op> -> load ( V <listV> )  · ;  , break  ]
[ <op> -> load ( V <listV> )  · ;  , default  ]
[ <op> -> load ( V <listV> )  · ;  , error  ]
[ <op> -> load ( V <listV> )  · ;  , comment  ]
}

set 554 = GOTO( set 524 , ) ) :
{
[ <op> -> put ( E <listE> )  · ;  , ;  ]
[ <op> -> put ( E <listE> )  · ;  , V  ]
[ <op> -> put ( E <listE> )  · ;  , :  ]
[ <op> -> put ( E <listE> )  · ;  , let  ]
[ <op> -> put ( E <listE> )  · ;  , if  ]
[ <op> -> put ( E <listE> )  · ;  , goto  ]
[ <op> -> put ( E <listE> )  · ;  , load  ]
[ <op> -> put ( E <listE> )  · ;  , put  ]
[ <op> -> put ( E <listE> )  · ;  , switch  ]
[ <op> -> put ( E <listE> )  · ;  , end  ]
[ <op> -> put ( E <listE> )  · ;  , case  ]
[ <op> -> put ( E <listE> )  · ;  , break  ]
[ <op> -> put ( E <listE> )  · ;  , default  ]
[ <op> -> put ( E <listE> )  · ;  , error  ]
[ <op> -> put ( E <listE> )  · ;  , comment  ]
}

set 555 = GOTO( set 525 , <switch_body> ) :
{
[ <op> -> switch ( E ) <switch_body>  · end switch ;  , ;  ]
[ <op> -> switch ( E ) <switch_body>  · end switch ;  , V  ]
[ <op> -> switch ( E ) <switch_body>  · end switch ;  , :  ]
[ <op> -> switch ( E ) <switch_body>  · end switch ;  , let  ]
[ <op> -> switch ( E ) <switch_body>  · end switch ;  , if  ]
[ <op> -> switch ( E ) <switch_body>  · end switch ;  , goto  ]
[ <op> -> switch ( E ) <switch_body>  · end switch ;  , load  ]
[ <op> -> switch ( E ) <switch_body>  · end switch ;  , put  ]
[ <op> -> switch ( E ) <switch_body>  · end switch ;  , switch  ]
[ <op> -> switch ( E ) <switch_body>  · end switch ;  , end  ]
[ <op> -> switch ( E ) <switch_body>  · end switch ;  , case  ]
[ <op> -> switch ( E ) <switch_body>  · end switch ;  , break  ]
[ <op> -> switch ( E ) <switch_body>  · end switch ;  , default  ]
[ <op> -> switch ( E ) <switch_body>  · end switch ;  , error  ]
[ <op> -> switch ( E ) <switch_body>  · end switch ;  , comment  ]
}

set 556 = GOTO( set 526 , ; ) :
{
[ <op> -> V <listV> : TYPE ;  ·  , ;  ]
[ <op> -> V <listV> : TYPE ;  ·  , V  ]
[ <op> -> V <listV> : TYPE ;  ·  , :  ]
[ <op> -> V <listV> : TYPE ;  ·  , let  ]
[ <op> -> V <listV> : TYPE ;  ·  , next  ]
[ <op> -> V <listV> : TYPE ;  ·  , if  ]
[ <op> -> V <listV> : TYPE ;  ·  , goto  ]
[ <op> -> V <listV> : TYPE ;  ·  , load  ]
[ <op> -> V <listV> : TYPE ;  ·  , put  ]
[ <op> -> V <listV> : TYPE ;  ·  , switch  ]
[ <op> -> V <listV> : TYPE ;  ·  , error  ]
[ <op> -> V <listV> : TYPE ;  ·  , comment  ]
}

set 557 = GOTO( set 527 , E ) :
{
[ <op> -> V for V = E  · to E <step> <pr> next V  , ;  ]
[ <op> -> V for V = E  · to E <step> <pr> next V  , V  ]
[ <op> -> V for V = E  · to E <step> <pr> next V  , :  ]
[ <op> -> V for V = E  · to E <step> <pr> next V  , let  ]
[ <op> -> V for V = E  · to E <step> <pr> next V  , next  ]
[ <op> -> V for V = E  · to E <step> <pr> next V  , if  ]
[ <op> -> V for V = E  · to E <step> <pr> next V  , goto  ]
[ <op> -> V for V = E  · to E <step> <pr> next V  , load  ]
[ <op> -> V for V = E  · to E <step> <pr> next V  , put  ]
[ <op> -> V for V = E  · to E <step> <pr> next V  , switch  ]
[ <op> -> V for V = E  · to E <step> <pr> next V  , error  ]
[ <op> -> V for V = E  · to E <step> <pr> next V  , comment  ]
[ E -> E  · - T  , to  ]
[ E -> E  · - T  , -  ]
[ E -> E  · - T  , +  ]
[ E -> E  · + T  , to  ]
[ E -> E  · + T  , -  ]
[ E -> E  · + T  , +  ]
}

set 558 = GOTO( set 528 , <else> ) :
{
[ <op> -> if <test> goto V <else>  · ;  , ;  ]
[ <op> -> if <test> goto V <else>  · ;  , V  ]
[ <op> -> if <test> goto V <else>  · ;  , :  ]
[ <op> -> if <test> goto V <else>  · ;  , let  ]
[ <op> -> if <test> goto V <else>  · ;  , next  ]
[ <op> -> if <test> goto V <else>  · ;  , if  ]
[ <op> -> if <test> goto V <else>  · ;  , goto  ]
[ <op> -> if <test> goto V <else>  · ;  , load  ]
[ <op> -> if <test> goto V <else>  · ;  , put  ]
[ <op> -> if <test> goto V <else>  · ;  , switch  ]
[ <op> -> if <test> goto V <else>  · ;  , error  ]
[ <op> -> if <test> goto V <else>  · ;  , comment  ]
}

set 559 = GOTO( set 529 , ; ) :
{
[ <listA> -> = E ;  ·  , ;  ]
[ <listA> -> = E ;  ·  , V  ]
[ <listA> -> = E ;  ·  , :  ]
[ <listA> -> = E ;  ·  , let  ]
[ <listA> -> = E ;  ·  , next  ]
[ <listA> -> = E ;  ·  , if  ]
[ <listA> -> = E ;  ·  , goto  ]
[ <listA> -> = E ;  ·  , load  ]
[ <listA> -> = E ;  ·  , put  ]
[ <listA> -> = E ;  ·  , switch  ]
[ <listA> -> = E ;  ·  , error  ]
[ <listA> -> = E ;  ·  , comment  ]
}

set 560 = GOTO( set 530 , <listA> ) :
{
[ <listA> -> = V <listA>  ·  , ;  ]
[ <listA> -> = V <listA>  ·  , V  ]
[ <listA> -> = V <listA>  ·  , :  ]
[ <listA> -> = V <listA>  ·  , let  ]
[ <listA> -> = V <listA>  ·  , next  ]
[ <listA> -> = V <listA>  ·  , if  ]
[ <listA> -> = V <listA>  ·  , goto  ]
[ <listA> -> = V <listA>  ·  , load  ]
[ <listA> -> = V <listA>  ·  , put  ]
[ <listA> -> = V <listA>  ·  , switch  ]
[ <listA> -> = V <listA>  ·  , error  ]
[ <listA> -> = V <listA>  ·  , comment  ]
}

set 561 = GOTO( set 531 , ) ) :
{
[ <op> -> load ( V <listV> )  · ;  , ;  ]
[ <op> -> load ( V <listV> )  · ;  , V  ]
[ <op> -> load ( V <listV> )  · ;  , :  ]
[ <op> -> load ( V <listV> )  · ;  , let  ]
[ <op> -> load ( V <listV> )  · ;  , next  ]
[ <op> -> load ( V <listV> )  · ;  , if  ]
[ <op> -> load ( V <listV> )  · ;  , goto  ]
[ <op> -> load ( V <listV> )  · ;  , load  ]
[ <op> -> load ( V <listV> )  · ;  , put  ]
[ <op> -> load ( V <listV> )  · ;  , switch  ]
[ <op> -> load ( V <listV> )  · ;  , error  ]
[ <op> -> load ( V <listV> )  · ;  , comment  ]
}

set 562 = GOTO( set 532 , ) ) :
{
[ <op> -> put ( E <listE> )  · ;  , ;  ]
[ <op> -> put ( E <listE> )  · ;  , V  ]
[ <op> -> put ( E <listE> )  · ;  , :  ]
[ <op> -> put ( E <listE> )  · ;  , let  ]
[ <op> -> put ( E <listE> )  · ;  , next  ]
[ <op> -> put ( E <listE> )  · ;  , if  ]
[ <op> -> put ( E <listE> )  · ;  , goto  ]
[ <op> -> put ( E <listE> )  · ;  , load  ]
[ <op> -> put ( E <listE> )  · ;  , put  ]
[ <op> -> put ( E <listE> )  · ;  , switch  ]
[ <op> -> put ( E <listE> )  · ;  , error  ]
[ <op> -> put ( E <listE> )  · ;  , comment  ]
}

set 563 = GOTO( set 533 , <switch_body> ) :
{
[ <op> -> switch ( E ) <switch_body>  · end switch ;  , ;  ]
[ <op> -> switch ( E ) <switch_body>  · end switch ;  , V  ]
[ <op> -> switch ( E ) <switch_body>  · end switch ;  , :  ]
[ <op> -> switch ( E ) <switch_body>  · end switch ;  , let  ]
[ <op> -> switch ( E ) <switch_body>  · end switch ;  , next  ]
[ <op> -> switch ( E ) <switch_body>  · end switch ;  , if  ]
[ <op> -> switch ( E ) <switch_body>  · end switch ;  , goto  ]
[ <op> -> switch ( E ) <switch_body>  · end switch ;  , load  ]
[ <op> -> switch ( E ) <switch_body>  · end switch ;  , put  ]
[ <op> -> switch ( E ) <switch_body>  · end switch ;  , switch  ]
[ <op> -> switch ( E ) <switch_body>  · end switch ;  , error  ]
[ <op> -> switch ( E ) <switch_body>  · end switch ;  , comment  ]
}

set 564 = GOTO( set 534 , E ) :
{
[ E -> E  · - T  , )  ]
[ E -> E  · - T  , -  ]
[ E -> E  · - T  , +  ]
[ E -> E  · + T  , )  ]
[ E -> E  · + T  , -  ]
[ E -> E  · + T  , +  ]
[ F -> coeff ( E , E  · )  , ;  ]
[ F -> coeff ( E , E  · )  , V  ]
[ F -> coeff ( E , E  · )  , :  ]
[ F -> coeff ( E , E  · )  , let  ]
[ F -> coeff ( E , E  · )  , next  ]
[ F -> coeff ( E , E  · )  , if  ]
[ F -> coeff ( E , E  · )  , goto  ]
[ F -> coeff ( E , E  · )  , load  ]
[ F -> coeff ( E , E  · )  , put  ]
[ F -> coeff ( E , E  · )  , switch  ]
[ F -> coeff ( E , E  · )  , error  ]
[ F -> coeff ( E , E  · )  , comment  ]
[ F -> coeff ( E , E  · )  , -  ]
[ F -> coeff ( E , E  · )  , +  ]
[ F -> coeff ( E , E  · )  , *  ]
[ F -> coeff ( E , E  · )  , /  ]
[ F -> coeff ( E , E  · )  , %  ]
}

set 565 = GOTO( set 537 , E ) :
{
[ E -> E  · - T  , )  ]
[ E -> E  · - T  , -  ]
[ E -> E  · - T  , +  ]
[ E -> E  · + T  , )  ]
[ E -> E  · + T  , -  ]
[ E -> E  · + T  , +  ]
[ F -> value ( E , E  · )  , ;  ]
[ F -> value ( E , E  · )  , V  ]
[ F -> value ( E , E  · )  , :  ]
[ F -> value ( E , E  · )  , let  ]
[ F -> value ( E , E  · )  , next  ]
[ F -> value ( E , E  · )  , if  ]
[ F -> value ( E , E  · )  , goto  ]
[ F -> value ( E , E  · )  , load  ]
[ F -> value ( E , E  · )  , put  ]
[ F -> value ( E , E  · )  , switch  ]
[ F -> value ( E , E  · )  , error  ]
[ F -> value ( E , E  · )  , comment  ]
[ F -> value ( E , E  · )  , -  ]
[ F -> value ( E , E  · )  , +  ]
[ F -> value ( E , E  · )  , *  ]
[ F -> value ( E , E  · )  , /  ]
[ F -> value ( E , E  · )  , %  ]
}

set 566 = GOTO( set 541 , to ) :
{
[ <op> -> V for V = E to  · E <step> <pr> next V  , ;  ]
[ <op> -> V for V = E to  · E <step> <pr> next V  , V  ]
[ <op> -> V for V = E to  · E <step> <pr> next V  , :  ]
[ <op> -> V for V = E to  · E <step> <pr> next V  , let  ]
[ <op> -> V for V = E to  · E <step> <pr> next V  , if  ]
[ <op> -> V for V = E to  · E <step> <pr> next V  , goto  ]
[ <op> -> V for V = E to  · E <step> <pr> next V  , load  ]
[ <op> -> V for V = E to  · E <step> <pr> next V  , put  ]
[ <op> -> V for V = E to  · E <step> <pr> next V  , switch  ]
[ <op> -> V for V = E to  · E <step> <pr> next V  , end  ]
[ <op> -> V for V = E to  · E <step> <pr> next V  , break  ]
[ <op> -> V for V = E to  · E <step> <pr> next V  , error  ]
[ <op> -> V for V = E to  · E <step> <pr> next V  , comment  ]
[ E ->  · E - T  , ;  ]
[ E ->  · E - T  , V  ]
[ E ->  · E - T  , :  ]
[ E ->  · E - T  , let  ]
[ E ->  · E - T  , next  ]
[ E ->  · E - T  , adding  ]
[ E ->  · E - T  , if  ]
[ E ->  · E - T  , goto  ]
[ E ->  · E - T  , load  ]
[ E ->  · E - T  , put  ]
[ E ->  · E - T  , switch  ]
[ E ->  · E - T  , error  ]
[ E ->  · E - T  , comment  ]
[ E ->  · E - T  , -  ]
[ E ->  · E - T  , +  ]
[ E ->  · E + T  , ;  ]
[ E ->  · E + T  , V  ]
[ E ->  · E + T  , :  ]
[ E ->  · E + T  , let  ]
[ E ->  · E + T  , next  ]
[ E ->  · E + T  , adding  ]
[ E ->  · E + T  , if  ]
[ E ->  · E + T  , goto  ]
[ E ->  · E + T  , load  ]
[ E ->  · E + T  , put  ]
[ E ->  · E + T  , switch  ]
[ E ->  · E + T  , error  ]
[ E ->  · E + T  , comment  ]
[ E ->  · E + T  , -  ]
[ E ->  · E + T  , +  ]
[ E ->  · T  , ;  ]
[ E ->  · T  , V  ]
[ E ->  · T  , :  ]
[ E ->  · T  , let  ]
[ E ->  · T  , next  ]
[ E ->  · T  , adding  ]
[ E ->  · T  , if  ]
[ E ->  · T  , goto  ]
[ E ->  · T  , load  ]
[ E ->  · T  , put  ]
[ E ->  · T  , switch  ]
[ E ->  · T  , error  ]
[ E ->  · T  , comment  ]
[ E ->  · T  , -  ]
[ E ->  · T  , +  ]
[ T ->  · T * F  , ;  ]
[ T ->  · T * F  , V  ]
[ T ->  · T * F  , :  ]
[ T ->  · T * F  , let  ]
[ T ->  · T * F  , next  ]
[ T ->  · T * F  , adding  ]
[ T ->  · T * F  , if  ]
[ T ->  · T * F  , goto  ]
[ T ->  · T * F  , load  ]
[ T ->  · T * F  , put  ]
[ T ->  · T * F  , switch  ]
[ T ->  · T * F  , error  ]
[ T ->  · T * F  , comment  ]
[ T ->  · T * F  , -  ]
[ T ->  · T * F  , +  ]
[ T ->  · T * F  , *  ]
[ T ->  · T * F  , /  ]
[ T ->  · T * F  , %  ]
[ T ->  · T / F  , ;  ]
[ T ->  · T / F  , V  ]
[ T ->  · T / F  , :  ]
[ T ->  · T / F  , let  ]
[ T ->  · T / F  , next  ]
[ T ->  · T / F  , adding  ]
[ T ->  · T / F  , if  ]
[ T ->  · T / F  , goto  ]
[ T ->  · T / F  , load  ]
[ T ->  · T / F  , put  ]
[ T ->  · T / F  , switch  ]
[ T ->  · T / F  , error  ]
[ T ->  · T / F  , comment  ]
[ T ->  · T / F  , -  ]
[ T ->  · T / F  , +  ]
[ T ->  · T / F  , *  ]
[ T ->  · T / F  , /  ]
[ T ->  · T / F  , %  ]
[ T ->  · T % F  , ;  ]
[ T ->  · T % F  , V  ]
[ T ->  · T % F  , :  ]
[ T ->  · T % F  , let  ]
[ T ->  · T % F  , next  ]
[ T ->  · T % F  , adding  ]
[ T ->  · T % F  , if  ]
[ T ->  · T % F  , goto  ]
[ T ->  · T % F  , load  ]
[ T ->  · T % F  , put  ]
[ T ->  · T % F  , switch  ]
[ T ->  · T % F  , error  ]
[ T ->  · T % F  , comment  ]
[ T ->  · T % F  , -  ]
[ T ->  · T % F  , +  ]
[ T ->  · T % F  , *  ]
[ T ->  · T % F  , /  ]
[ T ->  · T % F  , %  ]
[ T ->  · F  , ;  ]
[ T ->  · F  , V  ]
[ T ->  · F  , :  ]
[ T ->  · F  , let  ]
[ T ->  · F  , next  ]
[ T ->  · F  , adding  ]
[ T ->  · F  , if  ]
[ T ->  · F  , goto  ]
[ T ->  · F  , load  ]
[ T ->  · F  , put  ]
[ T ->  · F  , switch  ]
[ T ->  · F  , error  ]
[ T ->  · F  , comment  ]
[ T ->  · F  , -  ]
[ T ->  · F  , +  ]
[ T ->  · F  , *  ]
[ T ->  · F  , /  ]
[ T ->  · F  , %  ]
[ F ->  · V  , ;  ]
[ F ->  · V  , V  ]
[ F ->  · V  , :  ]
[ F ->  · V  , let  ]
[ F ->  · V  , next  ]
[ F ->  · V  , adding  ]
[ F ->  · V  , if  ]
[ F ->  · V  , goto  ]
[ F ->  · V  , load  ]
[ F ->  · V  , put  ]
[ F ->  · V  , switch  ]
[ F ->  · V  , error  ]
[ F ->  · V  , comment  ]
[ F ->  · V  , -  ]
[ F ->  · V  , +  ]
[ F ->  · V  , *  ]
[ F ->  · V  , /  ]
[ F ->  · V  , %  ]
[ F ->  · ( E )  , ;  ]
[ F ->  · ( E )  , V  ]
[ F ->  · ( E )  , :  ]
[ F ->  · ( E )  , let  ]
[ F ->  · ( E )  , next  ]
[ F ->  · ( E )  , adding  ]
[ F ->  · ( E )  , if  ]
[ F ->  · ( E )  , goto  ]
[ F ->  · ( E )  , load  ]
[ F ->  · ( E )  , put  ]
[ F ->  · ( E )  , switch  ]
[ F ->  · ( E )  , error  ]
[ F ->  · ( E )  , comment  ]
[ F ->  · ( E )  , -  ]
[ F ->  · ( E )  , +  ]
[ F ->  · ( E )  , *  ]
[ F ->  · ( E )  , /  ]
[ F ->  · ( E )  , %  ]
[ F ->  · C  , ;  ]
[ F ->  · C  , V  ]
[ F ->  · C  , :  ]
[ F ->  · C  , let  ]
[ F ->  · C  , next  ]
[ F ->  · C  , adding  ]
[ F ->  · C  , if  ]
[ F ->  · C  , goto  ]
[ F ->  · C  , load  ]
[ F ->  · C  , put  ]
[ F ->  · C  , switch  ]
[ F ->  · C  , error  ]
[ F ->  · C  , comment  ]
[ F ->  · C  , -  ]
[ F ->  · C  , +  ]
[ F ->  · C  , *  ]
[ F ->  · C  , /  ]
[ F ->  · C  , %  ]
[ F ->  · value ( E , E )  , ;  ]
[ F ->  · value ( E , E )  , V  ]
[ F ->  · value ( E , E )  , :  ]
[ F ->  · value ( E , E )  , let  ]
[ F ->  · value ( E , E )  , next  ]
[ F ->  · value ( E , E )  , adding  ]
[ F ->  · value ( E , E )  , if  ]
[ F ->  · value ( E , E )  , goto  ]
[ F ->  · value ( E , E )  , load  ]
[ F ->  · value ( E , E )  , put  ]
[ F ->  · value ( E , E )  , switch  ]
[ F ->  · value ( E , E )  , error  ]
[ F ->  · value ( E , E )  , comment  ]
[ F ->  · value ( E , E )  , -  ]
[ F ->  · value ( E , E )  , +  ]
[ F ->  · value ( E , E )  , *  ]
[ F ->  · value ( E , E )  , /  ]
[ F ->  · value ( E , E )  , %  ]
[ F ->  · derivative ( E )  , ;  ]
[ F ->  · derivative ( E )  , V  ]
[ F ->  · derivative ( E )  , :  ]
[ F ->  · derivative ( E )  , let  ]
[ F ->  · derivative ( E )  , next  ]
[ F ->  · derivative ( E )  , adding  ]
[ F ->  · derivative ( E )  , if  ]
[ F ->  · derivative ( E )  , goto  ]
[ F ->  · derivative ( E )  , load  ]
[ F ->  · derivative ( E )  , put  ]
[ F ->  · derivative ( E )  , switch  ]
[ F ->  · derivative ( E )  , error  ]
[ F ->  · derivative ( E )  , comment  ]
[ F ->  · derivative ( E )  , -  ]
[ F ->  · derivative ( E )  , +  ]
[ F ->  · derivative ( E )  , *  ]
[ F ->  · derivative ( E )  , /  ]
[ F ->  · derivative ( E )  , %  ]
[ F ->  · coeff ( E , E )  , ;  ]
[ F ->  · coeff ( E , E )  , V  ]
[ F ->  · coeff ( E , E )  , :  ]
[ F ->  · coeff ( E , E )  , let  ]
[ F ->  · coeff ( E , E )  , next  ]
[ F ->  · coeff ( E , E )  , adding  ]
[ F ->  · coeff ( E , E )  , if  ]
[ F ->  · coeff ( E , E )  , goto  ]
[ F ->  · coeff ( E , E )  , load  ]
[ F ->  · coeff ( E , E )  , put  ]
[ F ->  · coeff ( E , E )  , switch  ]
[ F ->  · coeff ( E , E )  , error  ]
[ F ->  · coeff ( E , E )  , comment  ]
[ F ->  · coeff ( E , E )  , -  ]
[ F ->  · coeff ( E , E )  , +  ]
[ F ->  · coeff ( E , E )  , *  ]
[ F ->  · coeff ( E , E )  , /  ]
[ F ->  · coeff ( E , E )  , %  ]
[ F ->  · deg ( E )  , ;  ]
[ F ->  · deg ( E )  , V  ]
[ F ->  · deg ( E )  , :  ]
[ F ->  · deg ( E )  , let  ]
[ F ->  · deg ( E )  , next  ]
[ F ->  · deg ( E )  , adding  ]
[ F ->  · deg ( E )  , if  ]
[ F ->  · deg ( E )  , goto  ]
[ F ->  · deg ( E )  , load  ]
[ F ->  · deg ( E )  , put  ]
[ F ->  · deg ( E )  , switch  ]
[ F ->  · deg ( E )  , error  ]
[ F ->  · deg ( E )  , comment  ]
[ F ->  · deg ( E )  , -  ]
[ F ->  · deg ( E )  , +  ]
[ F ->  · deg ( E )  , *  ]
[ F ->  · deg ( E )  , /  ]
[ F ->  · deg ( E )  , %  ]
}

set 567 = GOTO( set 542 , ; ) :
{
[ <op> -> if <test> goto V <else> ;  ·  , ;  ]
[ <op> -> if <test> goto V <else> ;  ·  , V  ]
[ <op> -> if <test> goto V <else> ;  ·  , :  ]
[ <op> -> if <test> goto V <else> ;  ·  , let  ]
[ <op> -> if <test> goto V <else> ;  ·  , if  ]
[ <op> -> if <test> goto V <else> ;  ·  , goto  ]
[ <op> -> if <test> goto V <else> ;  ·  , load  ]
[ <op> -> if <test> goto V <else> ;  ·  , put  ]
[ <op> -> if <test> goto V <else> ;  ·  , switch  ]
[ <op> -> if <test> goto V <else> ;  ·  , end  ]
[ <op> -> if <test> goto V <else> ;  ·  , break  ]
[ <op> -> if <test> goto V <else> ;  ·  , error  ]
[ <op> -> if <test> goto V <else> ;  ·  , comment  ]
}

set 568 = GOTO( set 545 , ; ) :
{
[ <op> -> load ( V <listV> ) ;  ·  , ;  ]
[ <op> -> load ( V <listV> ) ;  ·  , V  ]
[ <op> -> load ( V <listV> ) ;  ·  , :  ]
[ <op> -> load ( V <listV> ) ;  ·  , let  ]
[ <op> -> load ( V <listV> ) ;  ·  , if  ]
[ <op> -> load ( V <listV> ) ;  ·  , goto  ]
[ <op> -> load ( V <listV> ) ;  ·  , load  ]
[ <op> -> load ( V <listV> ) ;  ·  , put  ]
[ <op> -> load ( V <listV> ) ;  ·  , switch  ]
[ <op> -> load ( V <listV> ) ;  ·  , end  ]
[ <op> -> load ( V <listV> ) ;  ·  , break  ]
[ <op> -> load ( V <listV> ) ;  ·  , error  ]
[ <op> -> load ( V <listV> ) ;  ·  , comment  ]
}

set 569 = GOTO( set 546 , ; ) :
{
[ <op> -> put ( E <listE> ) ;  ·  , ;  ]
[ <op> -> put ( E <listE> ) ;  ·  , V  ]
[ <op> -> put ( E <listE> ) ;  ·  , :  ]
[ <op> -> put ( E <listE> ) ;  ·  , let  ]
[ <op> -> put ( E <listE> ) ;  ·  , if  ]
[ <op> -> put ( E <listE> ) ;  ·  , goto  ]
[ <op> -> put ( E <listE> ) ;  ·  , load  ]
[ <op> -> put ( E <listE> ) ;  ·  , put  ]
[ <op> -> put ( E <listE> ) ;  ·  , switch  ]
[ <op> -> put ( E <listE> ) ;  ·  , end  ]
[ <op> -> put ( E <listE> ) ;  ·  , break  ]
[ <op> -> put ( E <listE> ) ;  ·  , error  ]
[ <op> -> put ( E <listE> ) ;  ·  , comment  ]
}

set 570 = GOTO( set 547 , end ) :
{
[ <op> -> switch ( E ) <switch_body> end  · switch ;  , ;  ]
[ <op> -> switch ( E ) <switch_body> end  · switch ;  , V  ]
[ <op> -> switch ( E ) <switch_body> end  · switch ;  , :  ]
[ <op> -> switch ( E ) <switch_body> end  · switch ;  , let  ]
[ <op> -> switch ( E ) <switch_body> end  · switch ;  , if  ]
[ <op> -> switch ( E ) <switch_body> end  · switch ;  , goto  ]
[ <op> -> switch ( E ) <switch_body> end  · switch ;  , load  ]
[ <op> -> switch ( E ) <switch_body> end  · switch ;  , put  ]
[ <op> -> switch ( E ) <switch_body> end  · switch ;  , switch  ]
[ <op> -> switch ( E ) <switch_body> end  · switch ;  , end  ]
[ <op> -> switch ( E ) <switch_body> end  · switch ;  , break  ]
[ <op> -> switch ( E ) <switch_body> end  · switch ;  , error  ]
[ <op> -> switch ( E ) <switch_body> end  · switch ;  , comment  ]
}

set 571 = GOTO( set 549 , to ) :
{
[ <op> -> V for V = E to  · E <step> <pr> next V  , ;  ]
[ <op> -> V for V = E to  · E <step> <pr> next V  , V  ]
[ <op> -> V for V = E to  · E <step> <pr> next V  , :  ]
[ <op> -> V for V = E to  · E <step> <pr> next V  , let  ]
[ <op> -> V for V = E to  · E <step> <pr> next V  , if  ]
[ <op> -> V for V = E to  · E <step> <pr> next V  , goto  ]
[ <op> -> V for V = E to  · E <step> <pr> next V  , load  ]
[ <op> -> V for V = E to  · E <step> <pr> next V  , put  ]
[ <op> -> V for V = E to  · E <step> <pr> next V  , switch  ]
[ <op> -> V for V = E to  · E <step> <pr> next V  , end  ]
[ <op> -> V for V = E to  · E <step> <pr> next V  , case  ]
[ <op> -> V for V = E to  · E <step> <pr> next V  , break  ]
[ <op> -> V for V = E to  · E <step> <pr> next V  , default  ]
[ <op> -> V for V = E to  · E <step> <pr> next V  , error  ]
[ <op> -> V for V = E to  · E <step> <pr> next V  , comment  ]
[ E ->  · E - T  , ;  ]
[ E ->  · E - T  , V  ]
[ E ->  · E - T  , :  ]
[ E ->  · E - T  , let  ]
[ E ->  · E - T  , next  ]
[ E ->  · E - T  , adding  ]
[ E ->  · E - T  , if  ]
[ E ->  · E - T  , goto  ]
[ E ->  · E - T  , load  ]
[ E ->  · E - T  , put  ]
[ E ->  · E - T  , switch  ]
[ E ->  · E - T  , error  ]
[ E ->  · E - T  , comment  ]
[ E ->  · E - T  , -  ]
[ E ->  · E - T  , +  ]
[ E ->  · E + T  , ;  ]
[ E ->  · E + T  , V  ]
[ E ->  · E + T  , :  ]
[ E ->  · E + T  , let  ]
[ E ->  · E + T  , next  ]
[ E ->  · E + T  , adding  ]
[ E ->  · E + T  , if  ]
[ E ->  · E + T  , goto  ]
[ E ->  · E + T  , load  ]
[ E ->  · E + T  , put  ]
[ E ->  · E + T  , switch  ]
[ E ->  · E + T  , error  ]
[ E ->  · E + T  , comment  ]
[ E ->  · E + T  , -  ]
[ E ->  · E + T  , +  ]
[ E ->  · T  , ;  ]
[ E ->  · T  , V  ]
[ E ->  · T  , :  ]
[ E ->  · T  , let  ]
[ E ->  · T  , next  ]
[ E ->  · T  , adding  ]
[ E ->  · T  , if  ]
[ E ->  · T  , goto  ]
[ E ->  · T  , load  ]
[ E ->  · T  , put  ]
[ E ->  · T  , switch  ]
[ E ->  · T  , error  ]
[ E ->  · T  , comment  ]
[ E ->  · T  , -  ]
[ E ->  · T  , +  ]
[ T ->  · T * F  , ;  ]
[ T ->  · T * F  , V  ]
[ T ->  · T * F  , :  ]
[ T ->  · T * F  , let  ]
[ T ->  · T * F  , next  ]
[ T ->  · T * F  , adding  ]
[ T ->  · T * F  , if  ]
[ T ->  · T * F  , goto  ]
[ T ->  · T * F  , load  ]
[ T ->  · T * F  , put  ]
[ T ->  · T * F  , switch  ]
[ T ->  · T * F  , error  ]
[ T ->  · T * F  , comment  ]
[ T ->  · T * F  , -  ]
[ T ->  · T * F  , +  ]
[ T ->  · T * F  , *  ]
[ T ->  · T * F  , /  ]
[ T ->  · T * F  , %  ]
[ T ->  · T / F  , ;  ]
[ T ->  · T / F  , V  ]
[ T ->  · T / F  , :  ]
[ T ->  · T / F  , let  ]
[ T ->  · T / F  , next  ]
[ T ->  · T / F  , adding  ]
[ T ->  · T / F  , if  ]
[ T ->  · T / F  , goto  ]
[ T ->  · T / F  , load  ]
[ T ->  · T / F  , put  ]
[ T ->  · T / F  , switch  ]
[ T ->  · T / F  , error  ]
[ T ->  · T / F  , comment  ]
[ T ->  · T / F  , -  ]
[ T ->  · T / F  , +  ]
[ T ->  · T / F  , *  ]
[ T ->  · T / F  , /  ]
[ T ->  · T / F  , %  ]
[ T ->  · T % F  , ;  ]
[ T ->  · T % F  , V  ]
[ T ->  · T % F  , :  ]
[ T ->  · T % F  , let  ]
[ T ->  · T % F  , next  ]
[ T ->  · T % F  , adding  ]
[ T ->  · T % F  , if  ]
[ T ->  · T % F  , goto  ]
[ T ->  · T % F  , load  ]
[ T ->  · T % F  , put  ]
[ T ->  · T % F  , switch  ]
[ T ->  · T % F  , error  ]
[ T ->  · T % F  , comment  ]
[ T ->  · T % F  , -  ]
[ T ->  · T % F  , +  ]
[ T ->  · T % F  , *  ]
[ T ->  · T % F  , /  ]
[ T ->  · T % F  , %  ]
[ T ->  · F  , ;  ]
[ T ->  · F  , V  ]
[ T ->  · F  , :  ]
[ T ->  · F  , let  ]
[ T ->  · F  , next  ]
[ T ->  · F  , adding  ]
[ T ->  · F  , if  ]
[ T ->  · F  , goto  ]
[ T ->  · F  , load  ]
[ T ->  · F  , put  ]
[ T ->  · F  , switch  ]
[ T ->  · F  , error  ]
[ T ->  · F  , comment  ]
[ T ->  · F  , -  ]
[ T ->  · F  , +  ]
[ T ->  · F  , *  ]
[ T ->  · F  , /  ]
[ T ->  · F  , %  ]
[ F ->  · V  , ;  ]
[ F ->  · V  , V  ]
[ F ->  · V  , :  ]
[ F ->  · V  , let  ]
[ F ->  · V  , next  ]
[ F ->  · V  , adding  ]
[ F ->  · V  , if  ]
[ F ->  · V  , goto  ]
[ F ->  · V  , load  ]
[ F ->  · V  , put  ]
[ F ->  · V  , switch  ]
[ F ->  · V  , error  ]
[ F ->  · V  , comment  ]
[ F ->  · V  , -  ]
[ F ->  · V  , +  ]
[ F ->  · V  , *  ]
[ F ->  · V  , /  ]
[ F ->  · V  , %  ]
[ F ->  · ( E )  , ;  ]
[ F ->  · ( E )  , V  ]
[ F ->  · ( E )  , :  ]
[ F ->  · ( E )  , let  ]
[ F ->  · ( E )  , next  ]
[ F ->  · ( E )  , adding  ]
[ F ->  · ( E )  , if  ]
[ F ->  · ( E )  , goto  ]
[ F ->  · ( E )  , load  ]
[ F ->  · ( E )  , put  ]
[ F ->  · ( E )  , switch  ]
[ F ->  · ( E )  , error  ]
[ F ->  · ( E )  , comment  ]
[ F ->  · ( E )  , -  ]
[ F ->  · ( E )  , +  ]
[ F ->  · ( E )  , *  ]
[ F ->  · ( E )  , /  ]
[ F ->  · ( E )  , %  ]
[ F ->  · C  , ;  ]
[ F ->  · C  , V  ]
[ F ->  · C  , :  ]
[ F ->  · C  , let  ]
[ F ->  · C  , next  ]
[ F ->  · C  , adding  ]
[ F ->  · C  , if  ]
[ F ->  · C  , goto  ]
[ F ->  · C  , load  ]
[ F ->  · C  , put  ]
[ F ->  · C  , switch  ]
[ F ->  · C  , error  ]
[ F ->  · C  , comment  ]
[ F ->  · C  , -  ]
[ F ->  · C  , +  ]
[ F ->  · C  , *  ]
[ F ->  · C  , /  ]
[ F ->  · C  , %  ]
[ F ->  · value ( E , E )  , ;  ]
[ F ->  · value ( E , E )  , V  ]
[ F ->  · value ( E , E )  , :  ]
[ F ->  · value ( E , E )  , let  ]
[ F ->  · value ( E , E )  , next  ]
[ F ->  · value ( E , E )  , adding  ]
[ F ->  · value ( E , E )  , if  ]
[ F ->  · value ( E , E )  , goto  ]
[ F ->  · value ( E , E )  , load  ]
[ F ->  · value ( E , E )  , put  ]
[ F ->  · value ( E , E )  , switch  ]
[ F ->  · value ( E , E )  , error  ]
[ F ->  · value ( E , E )  , comment  ]
[ F ->  · value ( E , E )  , -  ]
[ F ->  · value ( E , E )  , +  ]
[ F ->  · value ( E , E )  , *  ]
[ F ->  · value ( E , E )  , /  ]
[ F ->  · value ( E , E )  , %  ]
[ F ->  · derivative ( E )  , ;  ]
[ F ->  · derivative ( E )  , V  ]
[ F ->  · derivative ( E )  , :  ]
[ F ->  · derivative ( E )  , let  ]
[ F ->  · derivative ( E )  , next  ]
[ F ->  · derivative ( E )  , adding  ]
[ F ->  · derivative ( E )  , if  ]
[ F ->  · derivative ( E )  , goto  ]
[ F ->  · derivative ( E )  , load  ]
[ F ->  · derivative ( E )  , put  ]
[ F ->  · derivative ( E )  , switch  ]
[ F ->  · derivative ( E )  , error  ]
[ F ->  · derivative ( E )  , comment  ]
[ F ->  · derivative ( E )  , -  ]
[ F ->  · derivative ( E )  , +  ]
[ F ->  · derivative ( E )  , *  ]
[ F ->  · derivative ( E )  , /  ]
[ F ->  · derivative ( E )  , %  ]
[ F ->  · coeff ( E , E )  , ;  ]
[ F ->  · coeff ( E , E )  , V  ]
[ F ->  · coeff ( E , E )  , :  ]
[ F ->  · coeff ( E , E )  , let  ]
[ F ->  · coeff ( E , E )  , next  ]
[ F ->  · coeff ( E , E )  , adding  ]
[ F ->  · coeff ( E , E )  , if  ]
[ F ->  · coeff ( E , E )  , goto  ]
[ F ->  · coeff ( E , E )  , load  ]
[ F ->  · coeff ( E , E )  , put  ]
[ F ->  · coeff ( E , E )  , switch  ]
[ F ->  · coeff ( E , E )  , error  ]
[ F ->  · coeff ( E , E )  , comment  ]
[ F ->  · coeff ( E , E )  , -  ]
[ F ->  · coeff ( E , E )  , +  ]
[ F ->  · coeff ( E , E )  , *  ]
[ F ->  · coeff ( E , E )  , /  ]
[ F ->  · coeff ( E , E )  , %  ]
[ F ->  · deg ( E )  , ;  ]
[ F ->  · deg ( E )  , V  ]
[ F ->  · deg ( E )  , :  ]
[ F ->  · deg ( E )  , let  ]
[ F ->  · deg ( E )  , next  ]
[ F ->  · deg ( E )  , adding  ]
[ F ->  · deg ( E )  , if  ]
[ F ->  · deg ( E )  , goto  ]
[ F ->  · deg ( E )  , load  ]
[ F ->  · deg ( E )  , put  ]
[ F ->  · deg ( E )  , switch  ]
[ F ->  · deg ( E )  , error  ]
[ F ->  · deg ( E )  , comment  ]
[ F ->  · deg ( E )  , -  ]
[ F ->  · deg ( E )  , +  ]
[ F ->  · deg ( E )  , *  ]
[ F ->  · deg ( E )  , /  ]
[ F ->  · deg ( E )  , %  ]
}

set 572 = GOTO( set 550 , ; ) :
{
[ <op> -> if <test> goto V <else> ;  ·  , ;  ]
[ <op> -> if <test> goto V <else> ;  ·  , V  ]
[ <op> -> if <test> goto V <else> ;  ·  , :  ]
[ <op> -> if <test> goto V <else> ;  ·  , let  ]
[ <op> -> if <test> goto V <else> ;  ·  , if  ]
[ <op> -> if <test> goto V <else> ;  ·  , goto  ]
[ <op> -> if <test> goto V <else> ;  ·  , load  ]
[ <op> -> if <test> goto V <else> ;  ·  , put  ]
[ <op> -> if <test> goto V <else> ;  ·  , switch  ]
[ <op> -> if <test> goto V <else> ;  ·  , end  ]
[ <op> -> if <test> goto V <else> ;  ·  , case  ]
[ <op> -> if <test> goto V <else> ;  ·  , break  ]
[ <op> -> if <test> goto V <else> ;  ·  , default  ]
[ <op> -> if <test> goto V <else> ;  ·  , error  ]
[ <op> -> if <test> goto V <else> ;  ·  , comment  ]
}

set 573 = GOTO( set 553 , ; ) :
{
[ <op> -> load ( V <listV> ) ;  ·  , ;  ]
[ <op> -> load ( V <listV> ) ;  ·  , V  ]
[ <op> -> load ( V <listV> ) ;  ·  , :  ]
[ <op> -> load ( V <listV> ) ;  ·  , let  ]
[ <op> -> load ( V <listV> ) ;  ·  , if  ]
[ <op> -> load ( V <listV> ) ;  ·  , goto  ]
[ <op> -> load ( V <listV> ) ;  ·  , load  ]
[ <op> -> load ( V <listV> ) ;  ·  , put  ]
[ <op> -> load ( V <listV> ) ;  ·  , switch  ]
[ <op> -> load ( V <listV> ) ;  ·  , end  ]
[ <op> -> load ( V <listV> ) ;  ·  , case  ]
[ <op> -> load ( V <listV> ) ;  ·  , break  ]
[ <op> -> load ( V <listV> ) ;  ·  , default  ]
[ <op> -> load ( V <listV> ) ;  ·  , error  ]
[ <op> -> load ( V <listV> ) ;  ·  , comment  ]
}

set 574 = GOTO( set 554 , ; ) :
{
[ <op> -> put ( E <listE> ) ;  ·  , ;  ]
[ <op> -> put ( E <listE> ) ;  ·  , V  ]
[ <op> -> put ( E <listE> ) ;  ·  , :  ]
[ <op> -> put ( E <listE> ) ;  ·  , let  ]
[ <op> -> put ( E <listE> ) ;  ·  , if  ]
[ <op> -> put ( E <listE> ) ;  ·  , goto  ]
[ <op> -> put ( E <listE> ) ;  ·  , load  ]
[ <op> -> put ( E <listE> ) ;  ·  , put  ]
[ <op> -> put ( E <listE> ) ;  ·  , switch  ]
[ <op> -> put ( E <listE> ) ;  ·  , end  ]
[ <op> -> put ( E <listE> ) ;  ·  , case  ]
[ <op> -> put ( E <listE> ) ;  ·  , break  ]
[ <op> -> put ( E <listE> ) ;  ·  , default  ]
[ <op> -> put ( E <listE> ) ;  ·  , error  ]
[ <op> -> put ( E <listE> ) ;  ·  , comment  ]
}

set 575 = GOTO( set 555 , end ) :
{
[ <op> -> switch ( E ) <switch_body> end  · switch ;  , ;  ]
[ <op> -> switch ( E ) <switch_body> end  · switch ;  , V  ]
[ <op> -> switch ( E ) <switch_body> end  · switch ;  , :  ]
[ <op> -> switch ( E ) <switch_body> end  · switch ;  , let  ]
[ <op> -> switch ( E ) <switch_body> end  · switch ;  , if  ]
[ <op> -> switch ( E ) <switch_body> end  · switch ;  , goto  ]
[ <op> -> switch ( E ) <switch_body> end  · switch ;  , load  ]
[ <op> -> switch ( E ) <switch_body> end  · switch ;  , put  ]
[ <op> -> switch ( E ) <switch_body> end  · switch ;  , switch  ]
[ <op> -> switch ( E ) <switch_body> end  · switch ;  , end  ]
[ <op> -> switch ( E ) <switch_body> end  · switch ;  , case  ]
[ <op> -> switch ( E ) <switch_body> end  · switch ;  , break  ]
[ <op> -> switch ( E ) <switch_body> end  · switch ;  , default  ]
[ <op> -> switch ( E ) <switch_body> end  · switch ;  , error  ]
[ <op> -> switch ( E ) <switch_body> end  · switch ;  , comment  ]
}

set 576 = GOTO( set 557 , to ) :
{
[ <op> -> V for V = E to  · E <step> <pr> next V  , ;  ]
[ <op> -> V for V = E to  · E <step> <pr> next V  , V  ]
[ <op> -> V for V = E to  · E <step> <pr> next V  , :  ]
[ <op> -> V for V = E to  · E <step> <pr> next V  , let  ]
[ <op> -> V for V = E to  · E <step> <pr> next V  , next  ]
[ <op> -> V for V = E to  · E <step> <pr> next V  , if  ]
[ <op> -> V for V = E to  · E <step> <pr> next V  , goto  ]
[ <op> -> V for V = E to  · E <step> <pr> next V  , load  ]
[ <op> -> V for V = E to  · E <step> <pr> next V  , put  ]
[ <op> -> V for V = E to  · E <step> <pr> next V  , switch  ]
[ <op> -> V for V = E to  · E <step> <pr> next V  , error  ]
[ <op> -> V for V = E to  · E <step> <pr> next V  , comment  ]
[ E ->  · E - T  , ;  ]
[ E ->  · E - T  , V  ]
[ E ->  · E - T  , :  ]
[ E ->  · E - T  , let  ]
[ E ->  · E - T  , next  ]
[ E ->  · E - T  , adding  ]
[ E ->  · E - T  , if  ]
[ E ->  · E - T  , goto  ]
[ E ->  · E - T  , load  ]
[ E ->  · E - T  , put  ]
[ E ->  · E - T  , switch  ]
[ E ->  · E - T  , error  ]
[ E ->  · E - T  , comment  ]
[ E ->  · E - T  , -  ]
[ E ->  · E - T  , +  ]
[ E ->  · E + T  , ;  ]
[ E ->  · E + T  , V  ]
[ E ->  · E + T  , :  ]
[ E ->  · E + T  , let  ]
[ E ->  · E + T  , next  ]
[ E ->  · E + T  , adding  ]
[ E ->  · E + T  , if  ]
[ E ->  · E + T  , goto  ]
[ E ->  · E + T  , load  ]
[ E ->  · E + T  , put  ]
[ E ->  · E + T  , switch  ]
[ E ->  · E + T  , error  ]
[ E ->  · E + T  , comment  ]
[ E ->  · E + T  , -  ]
[ E ->  · E + T  , +  ]
[ E ->  · T  , ;  ]
[ E ->  · T  , V  ]
[ E ->  · T  , :  ]
[ E ->  · T  , let  ]
[ E ->  · T  , next  ]
[ E ->  · T  , adding  ]
[ E ->  · T  , if  ]
[ E ->  · T  , goto  ]
[ E ->  · T  , load  ]
[ E ->  · T  , put  ]
[ E ->  · T  , switch  ]
[ E ->  · T  , error  ]
[ E ->  · T  , comment  ]
[ E ->  · T  , -  ]
[ E ->  · T  , +  ]
[ T ->  · T * F  , ;  ]
[ T ->  · T * F  , V  ]
[ T ->  · T * F  , :  ]
[ T ->  · T * F  , let  ]
[ T ->  · T * F  , next  ]
[ T ->  · T * F  , adding  ]
[ T ->  · T * F  , if  ]
[ T ->  · T * F  , goto  ]
[ T ->  · T * F  , load  ]
[ T ->  · T * F  , put  ]
[ T ->  · T * F  , switch  ]
[ T ->  · T * F  , error  ]
[ T ->  · T * F  , comment  ]
[ T ->  · T * F  , -  ]
[ T ->  · T * F  , +  ]
[ T ->  · T * F  , *  ]
[ T ->  · T * F  , /  ]
[ T ->  · T * F  , %  ]
[ T ->  · T / F  , ;  ]
[ T ->  · T / F  , V  ]
[ T ->  · T / F  , :  ]
[ T ->  · T / F  , let  ]
[ T ->  · T / F  , next  ]
[ T ->  · T / F  , adding  ]
[ T ->  · T / F  , if  ]
[ T ->  · T / F  , goto  ]
[ T ->  · T / F  , load  ]
[ T ->  · T / F  , put  ]
[ T ->  · T / F  , switch  ]
[ T ->  · T / F  , error  ]
[ T ->  · T / F  , comment  ]
[ T ->  · T / F  , -  ]
[ T ->  · T / F  , +  ]
[ T ->  · T / F  , *  ]
[ T ->  · T / F  , /  ]
[ T ->  · T / F  , %  ]
[ T ->  · T % F  , ;  ]
[ T ->  · T % F  , V  ]
[ T ->  · T % F  , :  ]
[ T ->  · T % F  , let  ]
[ T ->  · T % F  , next  ]
[ T ->  · T % F  , adding  ]
[ T ->  · T % F  , if  ]
[ T ->  · T % F  , goto  ]
[ T ->  · T % F  , load  ]
[ T ->  · T % F  , put  ]
[ T ->  · T % F  , switch  ]
[ T ->  · T % F  , error  ]
[ T ->  · T % F  , comment  ]
[ T ->  · T % F  , -  ]
[ T ->  · T % F  , +  ]
[ T ->  · T % F  , *  ]
[ T ->  · T % F  , /  ]
[ T ->  · T % F  , %  ]
[ T ->  · F  , ;  ]
[ T ->  · F  , V  ]
[ T ->  · F  , :  ]
[ T ->  · F  , let  ]
[ T ->  · F  , next  ]
[ T ->  · F  , adding  ]
[ T ->  · F  , if  ]
[ T ->  · F  , goto  ]
[ T ->  · F  , load  ]
[ T ->  · F  , put  ]
[ T ->  · F  , switch  ]
[ T ->  · F  , error  ]
[ T ->  · F  , comment  ]
[ T ->  · F  , -  ]
[ T ->  · F  , +  ]
[ T ->  · F  , *  ]
[ T ->  · F  , /  ]
[ T ->  · F  , %  ]
[ F ->  · V  , ;  ]
[ F ->  · V  , V  ]
[ F ->  · V  , :  ]
[ F ->  · V  , let  ]
[ F ->  · V  , next  ]
[ F ->  · V  , adding  ]
[ F ->  · V  , if  ]
[ F ->  · V  , goto  ]
[ F ->  · V  , load  ]
[ F ->  · V  , put  ]
[ F ->  · V  , switch  ]
[ F ->  · V  , error  ]
[ F ->  · V  , comment  ]
[ F ->  · V  , -  ]
[ F ->  · V  , +  ]
[ F ->  · V  , *  ]
[ F ->  · V  , /  ]
[ F ->  · V  , %  ]
[ F ->  · ( E )  , ;  ]
[ F ->  · ( E )  , V  ]
[ F ->  · ( E )  , :  ]
[ F ->  · ( E )  , let  ]
[ F ->  · ( E )  , next  ]
[ F ->  · ( E )  , adding  ]
[ F ->  · ( E )  , if  ]
[ F ->  · ( E )  , goto  ]
[ F ->  · ( E )  , load  ]
[ F ->  · ( E )  , put  ]
[ F ->  · ( E )  , switch  ]
[ F ->  · ( E )  , error  ]
[ F ->  · ( E )  , comment  ]
[ F ->  · ( E )  , -  ]
[ F ->  · ( E )  , +  ]
[ F ->  · ( E )  , *  ]
[ F ->  · ( E )  , /  ]
[ F ->  · ( E )  , %  ]
[ F ->  · C  , ;  ]
[ F ->  · C  , V  ]
[ F ->  · C  , :  ]
[ F ->  · C  , let  ]
[ F ->  · C  , next  ]
[ F ->  · C  , adding  ]
[ F ->  · C  , if  ]
[ F ->  · C  , goto  ]
[ F ->  · C  , load  ]
[ F ->  · C  , put  ]
[ F ->  · C  , switch  ]
[ F ->  · C  , error  ]
[ F ->  · C  , comment  ]
[ F ->  · C  , -  ]
[ F ->  · C  , +  ]
[ F ->  · C  , *  ]
[ F ->  · C  , /  ]
[ F ->  · C  , %  ]
[ F ->  · value ( E , E )  , ;  ]
[ F ->  · value ( E , E )  , V  ]
[ F ->  · value ( E , E )  , :  ]
[ F ->  · value ( E , E )  , let  ]
[ F ->  · value ( E , E )  , next  ]
[ F ->  · value ( E , E )  , adding  ]
[ F ->  · value ( E , E )  , if  ]
[ F ->  · value ( E , E )  , goto  ]
[ F ->  · value ( E , E )  , load  ]
[ F ->  · value ( E , E )  , put  ]
[ F ->  · value ( E , E )  , switch  ]
[ F ->  · value ( E , E )  , error  ]
[ F ->  · value ( E , E )  , comment  ]
[ F ->  · value ( E , E )  , -  ]
[ F ->  · value ( E , E )  , +  ]
[ F ->  · value ( E , E )  , *  ]
[ F ->  · value ( E , E )  , /  ]
[ F ->  · value ( E , E )  , %  ]
[ F ->  · derivative ( E )  , ;  ]
[ F ->  · derivative ( E )  , V  ]
[ F ->  · derivative ( E )  , :  ]
[ F ->  · derivative ( E )  , let  ]
[ F ->  · derivative ( E )  , next  ]
[ F ->  · derivative ( E )  , adding  ]
[ F ->  · derivative ( E )  , if  ]
[ F ->  · derivative ( E )  , goto  ]
[ F ->  · derivative ( E )  , load  ]
[ F ->  · derivative ( E )  , put  ]
[ F ->  · derivative ( E )  , switch  ]
[ F ->  · derivative ( E )  , error  ]
[ F ->  · derivative ( E )  , comment  ]
[ F ->  · derivative ( E )  , -  ]
[ F ->  · derivative ( E )  , +  ]
[ F ->  · derivative ( E )  , *  ]
[ F ->  · derivative ( E )  , /  ]
[ F ->  · derivative ( E )  , %  ]
[ F ->  · coeff ( E , E )  , ;  ]
[ F ->  · coeff ( E , E )  , V  ]
[ F ->  · coeff ( E , E )  , :  ]
[ F ->  · coeff ( E , E )  , let  ]
[ F ->  · coeff ( E , E )  , next  ]
[ F ->  · coeff ( E , E )  , adding  ]
[ F ->  · coeff ( E , E )  , if  ]
[ F ->  · coeff ( E , E )  , goto  ]
[ F ->  · coeff ( E , E )  , load  ]
[ F ->  · coeff ( E , E )  , put  ]
[ F ->  · coeff ( E , E )  , switch  ]
[ F ->  · coeff ( E , E )  , error  ]
[ F ->  · coeff ( E , E )  , comment  ]
[ F ->  · coeff ( E , E )  , -  ]
[ F ->  · coeff ( E , E )  , +  ]
[ F ->  · coeff ( E , E )  , *  ]
[ F ->  · coeff ( E , E )  , /  ]
[ F ->  · coeff ( E , E )  , %  ]
[ F ->  · deg ( E )  , ;  ]
[ F ->  · deg ( E )  , V  ]
[ F ->  · deg ( E )  , :  ]
[ F ->  · deg ( E )  , let  ]
[ F ->  · deg ( E )  , next  ]
[ F ->  · deg ( E )  , adding  ]
[ F ->  · deg ( E )  , if  ]
[ F ->  · deg ( E )  , goto  ]
[ F ->  · deg ( E )  , load  ]
[ F ->  · deg ( E )  , put  ]
[ F ->  · deg ( E )  , switch  ]
[ F ->  · deg ( E )  , error  ]
[ F ->  · deg ( E )  , comment  ]
[ F ->  · deg ( E )  , -  ]
[ F ->  · deg ( E )  , +  ]
[ F ->  · deg ( E )  , *  ]
[ F ->  · deg ( E )  , /  ]
[ F ->  · deg ( E )  , %  ]
}

set 577 = GOTO( set 558 , ; ) :
{
[ <op> -> if <test> goto V <else> ;  ·  , ;  ]
[ <op> -> if <test> goto V <else> ;  ·  , V  ]
[ <op> -> if <test> goto V <else> ;  ·  , :  ]
[ <op> -> if <test> goto V <else> ;  ·  , let  ]
[ <op> -> if <test> goto V <else> ;  ·  , next  ]
[ <op> -> if <test> goto V <else> ;  ·  , if  ]
[ <op> -> if <test> goto V <else> ;  ·  , goto  ]
[ <op> -> if <test> goto V <else> ;  ·  , load  ]
[ <op> -> if <test> goto V <else> ;  ·  , put  ]
[ <op> -> if <test> goto V <else> ;  ·  , switch  ]
[ <op> -> if <test> goto V <else> ;  ·  , error  ]
[ <op> -> if <test> goto V <else> ;  ·  , comment  ]
}

set 578 = GOTO( set 561 , ; ) :
{
[ <op> -> load ( V <listV> ) ;  ·  , ;  ]
[ <op> -> load ( V <listV> ) ;  ·  , V  ]
[ <op> -> load ( V <listV> ) ;  ·  , :  ]
[ <op> -> load ( V <listV> ) ;  ·  , let  ]
[ <op> -> load ( V <listV> ) ;  ·  , next  ]
[ <op> -> load ( V <listV> ) ;  ·  , if  ]
[ <op> -> load ( V <listV> ) ;  ·  , goto  ]
[ <op> -> load ( V <listV> ) ;  ·  , load  ]
[ <op> -> load ( V <listV> ) ;  ·  , put  ]
[ <op> -> load ( V <listV> ) ;  ·  , switch  ]
[ <op> -> load ( V <listV> ) ;  ·  , error  ]
[ <op> -> load ( V <listV> ) ;  ·  , comment  ]
}

set 579 = GOTO( set 562 , ; ) :
{
[ <op> -> put ( E <listE> ) ;  ·  , ;  ]
[ <op> -> put ( E <listE> ) ;  ·  , V  ]
[ <op> -> put ( E <listE> ) ;  ·  , :  ]
[ <op> -> put ( E <listE> ) ;  ·  , let  ]
[ <op> -> put ( E <listE> ) ;  ·  , next  ]
[ <op> -> put ( E <listE> ) ;  ·  , if  ]
[ <op> -> put ( E <listE> ) ;  ·  , goto  ]
[ <op> -> put ( E <listE> ) ;  ·  , load  ]
[ <op> -> put ( E <listE> ) ;  ·  , put  ]
[ <op> -> put ( E <listE> ) ;  ·  , switch  ]
[ <op> -> put ( E <listE> ) ;  ·  , error  ]
[ <op> -> put ( E <listE> ) ;  ·  , comment  ]
}

set 580 = GOTO( set 563 , end ) :
{
[ <op> -> switch ( E ) <switch_body> end  · switch ;  , ;  ]
[ <op> -> switch ( E ) <switch_body> end  · switch ;  , V  ]
[ <op> -> switch ( E ) <switch_body> end  · switch ;  , :  ]
[ <op> -> switch ( E ) <switch_body> end  · switch ;  , let  ]
[ <op> -> switch ( E ) <switch_body> end  · switch ;  , next  ]
[ <op> -> switch ( E ) <switch_body> end  · switch ;  , if  ]
[ <op> -> switch ( E ) <switch_body> end  · switch ;  , goto  ]
[ <op> -> switch ( E ) <switch_body> end  · switch ;  , load  ]
[ <op> -> switch ( E ) <switch_body> end  · switch ;  , put  ]
[ <op> -> switch ( E ) <switch_body> end  · switch ;  , switch  ]
[ <op> -> switch ( E ) <switch_body> end  · switch ;  , error  ]
[ <op> -> switch ( E ) <switch_body> end  · switch ;  , comment  ]
}

set 581 = GOTO( set 564 , ) ) :
{
[ F -> coeff ( E , E )  ·  , ;  ]
[ F -> coeff ( E , E )  ·  , V  ]
[ F -> coeff ( E , E )  ·  , :  ]
[ F -> coeff ( E , E )  ·  , let  ]
[ F -> coeff ( E , E )  ·  , next  ]
[ F -> coeff ( E , E )  ·  , if  ]
[ F -> coeff ( E , E )  ·  , goto  ]
[ F -> coeff ( E , E )  ·  , load  ]
[ F -> coeff ( E , E )  ·  , put  ]
[ F -> coeff ( E , E )  ·  , switch  ]
[ F -> coeff ( E , E )  ·  , error  ]
[ F -> coeff ( E , E )  ·  , comment  ]
[ F -> coeff ( E , E )  ·  , -  ]
[ F -> coeff ( E , E )  ·  , +  ]
[ F -> coeff ( E , E )  ·  , *  ]
[ F -> coeff ( E , E )  ·  , /  ]
[ F -> coeff ( E , E )  ·  , %  ]
}

set 582 = GOTO( set 565 , ) ) :
{
[ F -> value ( E , E )  ·  , ;  ]
[ F -> value ( E , E )  ·  , V  ]
[ F -> value ( E , E )  ·  , :  ]
[ F -> value ( E , E )  ·  , let  ]
[ F -> value ( E , E )  ·  , next  ]
[ F -> value ( E , E )  ·  , if  ]
[ F -> value ( E , E )  ·  , goto  ]
[ F -> value ( E , E )  ·  , load  ]
[ F -> value ( E , E )  ·  , put  ]
[ F -> value ( E , E )  ·  , switch  ]
[ F -> value ( E , E )  ·  , error  ]
[ F -> value ( E , E )  ·  , comment  ]
[ F -> value ( E , E )  ·  , -  ]
[ F -> value ( E , E )  ·  , +  ]
[ F -> value ( E , E )  ·  , *  ]
[ F -> value ( E , E )  ·  , /  ]
[ F -> value ( E , E )  ·  , %  ]
}

set 583 = GOTO( set 566 , E ) :
{
[ <op> -> V for V = E to E  · <step> <pr> next V  , ;  ]
[ <op> -> V for V = E to E  · <step> <pr> next V  , V  ]
[ <op> -> V for V = E to E  · <step> <pr> next V  , :  ]
[ <op> -> V for V = E to E  · <step> <pr> next V  , let  ]
[ <op> -> V for V = E to E  · <step> <pr> next V  , if  ]
[ <op> -> V for V = E to E  · <step> <pr> next V  , goto  ]
[ <op> -> V for V = E to E  · <step> <pr> next V  , load  ]
[ <op> -> V for V = E to E  · <step> <pr> next V  , put  ]
[ <op> -> V for V = E to E  · <step> <pr> next V  , switch  ]
[ <op> -> V for V = E to E  · <step> <pr> next V  , end  ]
[ <op> -> V for V = E to E  · <step> <pr> next V  , break  ]
[ <op> -> V for V = E to E  · <step> <pr> next V  , error  ]
[ <op> -> V for V = E to E  · <step> <pr> next V  , comment  ]
[ E -> E  · - T  , ;  ]
[ E -> E  · - T  , V  ]
[ E -> E  · - T  , :  ]
[ E -> E  · - T  , let  ]
[ E -> E  · - T  , next  ]
[ E -> E  · - T  , adding  ]
[ E -> E  · - T  , if  ]
[ E -> E  · - T  , goto  ]
[ E -> E  · - T  , load  ]
[ E -> E  · - T  , put  ]
[ E -> E  · - T  , switch  ]
[ E -> E  · - T  , error  ]
[ E -> E  · - T  , comment  ]
[ E -> E  · - T  , -  ]
[ E -> E  · - T  , +  ]
[ E -> E  · + T  , ;  ]
[ E -> E  · + T  , V  ]
[ E -> E  · + T  , :  ]
[ E -> E  · + T  , let  ]
[ E -> E  · + T  , next  ]
[ E -> E  · + T  , adding  ]
[ E -> E  · + T  , if  ]
[ E -> E  · + T  , goto  ]
[ E -> E  · + T  , load  ]
[ E -> E  · + T  , put  ]
[ E -> E  · + T  , switch  ]
[ E -> E  · + T  , error  ]
[ E -> E  · + T  , comment  ]
[ E -> E  · + T  , -  ]
[ E -> E  · + T  , +  ]
[ <step> ->  ·  , ;  ]
[ <step> ->  ·  , V  ]
[ <step> ->  ·  , :  ]
[ <step> ->  ·  , let  ]
[ <step> ->  ·  , next  ]
[ <step> ->  ·  , if  ]
[ <step> ->  ·  , goto  ]
[ <step> ->  ·  , load  ]
[ <step> ->  ·  , put  ]
[ <step> ->  ·  , switch  ]
[ <step> ->  ·  , error  ]
[ <step> ->  ·  , comment  ]
[ <step> ->  · adding E  , ;  ]
[ <step> ->  · adding E  , V  ]
[ <step> ->  · adding E  , :  ]
[ <step> ->  · adding E  , let  ]
[ <step> ->  · adding E  , next  ]
[ <step> ->  · adding E  , if  ]
[ <step> ->  · adding E  , goto  ]
[ <step> ->  · adding E  , load  ]
[ <step> ->  · adding E  , put  ]
[ <step> ->  · adding E  , switch  ]
[ <step> ->  · adding E  , error  ]
[ <step> ->  · adding E  , comment  ]
}

set 584 = GOTO( set 570 , switch ) :
{
[ <op> -> switch ( E ) <switch_body> end switch  · ;  , ;  ]
[ <op> -> switch ( E ) <switch_body> end switch  · ;  , V  ]
[ <op> -> switch ( E ) <switch_body> end switch  · ;  , :  ]
[ <op> -> switch ( E ) <switch_body> end switch  · ;  , let  ]
[ <op> -> switch ( E ) <switch_body> end switch  · ;  , if  ]
[ <op> -> switch ( E ) <switch_body> end switch  · ;  , goto  ]
[ <op> -> switch ( E ) <switch_body> end switch  · ;  , load  ]
[ <op> -> switch ( E ) <switch_body> end switch  · ;  , put  ]
[ <op> -> switch ( E ) <switch_body> end switch  · ;  , switch  ]
[ <op> -> switch ( E ) <switch_body> end switch  · ;  , end  ]
[ <op> -> switch ( E ) <switch_body> end switch  · ;  , break  ]
[ <op> -> switch ( E ) <switch_body> end switch  · ;  , error  ]
[ <op> -> switch ( E ) <switch_body> end switch  · ;  , comment  ]
}

set 585 = GOTO( set 571 , E ) :
{
[ <op> -> V for V = E to E  · <step> <pr> next V  , ;  ]
[ <op> -> V for V = E to E  · <step> <pr> next V  , V  ]
[ <op> -> V for V = E to E  · <step> <pr> next V  , :  ]
[ <op> -> V for V = E to E  · <step> <pr> next V  , let  ]
[ <op> -> V for V = E to E  · <step> <pr> next V  , if  ]
[ <op> -> V for V = E to E  · <step> <pr> next V  , goto  ]
[ <op> -> V for V = E to E  · <step> <pr> next V  , load  ]
[ <op> -> V for V = E to E  · <step> <pr> next V  , put  ]
[ <op> -> V for V = E to E  · <step> <pr> next V  , switch  ]
[ <op> -> V for V = E to E  · <step> <pr> next V  , end  ]
[ <op> -> V for V = E to E  · <step> <pr> next V  , case  ]
[ <op> -> V for V = E to E  · <step> <pr> next V  , break  ]
[ <op> -> V for V = E to E  · <step> <pr> next V  , default  ]
[ <op> -> V for V = E to E  · <step> <pr> next V  , error  ]
[ <op> -> V for V = E to E  · <step> <pr> next V  , comment  ]
[ E -> E  · - T  , ;  ]
[ E -> E  · - T  , V  ]
[ E -> E  · - T  , :  ]
[ E -> E  · - T  , let  ]
[ E -> E  · - T  , next  ]
[ E -> E  · - T  , adding  ]
[ E -> E  · - T  , if  ]
[ E -> E  · - T  , goto  ]
[ E -> E  · - T  , load  ]
[ E -> E  · - T  , put  ]
[ E -> E  · - T  , switch  ]
[ E -> E  · - T  , error  ]
[ E -> E  · - T  , comment  ]
[ E -> E  · - T  , -  ]
[ E -> E  · - T  , +  ]
[ E -> E  · + T  , ;  ]
[ E -> E  · + T  , V  ]
[ E -> E  · + T  , :  ]
[ E -> E  · + T  , let  ]
[ E -> E  · + T  , next  ]
[ E -> E  · + T  , adding  ]
[ E -> E  · + T  , if  ]
[ E -> E  · + T  , goto  ]
[ E -> E  · + T  , load  ]
[ E -> E  · + T  , put  ]
[ E -> E  · + T  , switch  ]
[ E -> E  · + T  , error  ]
[ E -> E  · + T  , comment  ]
[ E -> E  · + T  , -  ]
[ E -> E  · + T  , +  ]
[ <step> ->  ·  , ;  ]
[ <step> ->  ·  , V  ]
[ <step> ->  ·  , :  ]
[ <step> ->  ·  , let  ]
[ <step> ->  ·  , next  ]
[ <step> ->  ·  , if  ]
[ <step> ->  ·  , goto  ]
[ <step> ->  ·  , load  ]
[ <step> ->  ·  , put  ]
[ <step> ->  ·  , switch  ]
[ <step> ->  ·  , error  ]
[ <step> ->  ·  , comment  ]
[ <step> ->  · adding E  , ;  ]
[ <step> ->  · adding E  , V  ]
[ <step> ->  · adding E  , :  ]
[ <step> ->  · adding E  , let  ]
[ <step> ->  · adding E  , next  ]
[ <step> ->  · adding E  , if  ]
[ <step> ->  · adding E  , goto  ]
[ <step> ->  · adding E  , load  ]
[ <step> ->  · adding E  , put  ]
[ <step> ->  · adding E  , switch  ]
[ <step> ->  · adding E  , error  ]
[ <step> ->  · adding E  , comment  ]
}

set 586 = GOTO( set 575 , switch ) :
{
[ <op> -> switch ( E ) <switch_body> end switch  · ;  , ;  ]
[ <op> -> switch ( E ) <switch_body> end switch  · ;  , V  ]
[ <op> -> switch ( E ) <switch_body> end switch  · ;  , :  ]
[ <op> -> switch ( E ) <switch_body> end switch  · ;  , let  ]
[ <op> -> switch ( E ) <switch_body> end switch  · ;  , if  ]
[ <op> -> switch ( E ) <switch_body> end switch  · ;  , goto  ]
[ <op> -> switch ( E ) <switch_body> end switch  · ;  , load  ]
[ <op> -> switch ( E ) <switch_body> end switch  · ;  , put  ]
[ <op> -> switch ( E ) <switch_body> end switch  · ;  , switch  ]
[ <op> -> switch ( E ) <switch_body> end switch  · ;  , end  ]
[ <op> -> switch ( E ) <switch_body> end switch  · ;  , case  ]
[ <op> -> switch ( E ) <switch_body> end switch  · ;  , break  ]
[ <op> -> switch ( E ) <switch_body> end switch  · ;  , default  ]
[ <op> -> switch ( E ) <switch_body> end switch  · ;  , error  ]
[ <op> -> switch ( E ) <switch_body> end switch  · ;  , comment  ]
}

set 587 = GOTO( set 576 , E ) :
{
[ <op> -> V for V = E to E  · <step> <pr> next V  , ;  ]
[ <op> -> V for V = E to E  · <step> <pr> next V  , V  ]
[ <op> -> V for V = E to E  · <step> <pr> next V  , :  ]
[ <op> -> V for V = E to E  · <step> <pr> next V  , let  ]
[ <op> -> V for V = E to E  · <step> <pr> next V  , next  ]
[ <op> -> V for V = E to E  · <step> <pr> next V  , if  ]
[ <op> -> V for V = E to E  · <step> <pr> next V  , goto  ]
[ <op> -> V for V = E to E  · <step> <pr> next V  , load  ]
[ <op> -> V for V = E to E  · <step> <pr> next V  , put  ]
[ <op> -> V for V = E to E  · <step> <pr> next V  , switch  ]
[ <op> -> V for V = E to E  · <step> <pr> next V  , error  ]
[ <op> -> V for V = E to E  · <step> <pr> next V  , comment  ]
[ E -> E  · - T  , ;  ]
[ E -> E  · - T  , V  ]
[ E -> E  · - T  , :  ]
[ E -> E  · - T  , let  ]
[ E -> E  · - T  , next  ]
[ E -> E  · - T  , adding  ]
[ E -> E  · - T  , if  ]
[ E -> E  · - T  , goto  ]
[ E -> E  · - T  , load  ]
[ E -> E  · - T  , put  ]
[ E -> E  · - T  , switch  ]
[ E -> E  · - T  , error  ]
[ E -> E  · - T  , comment  ]
[ E -> E  · - T  , -  ]
[ E -> E  · - T  , +  ]
[ E -> E  · + T  , ;  ]
[ E -> E  · + T  , V  ]
[ E -> E  · + T  , :  ]
[ E -> E  · + T  , let  ]
[ E -> E  · + T  , next  ]
[ E -> E  · + T  , adding  ]
[ E -> E  · + T  , if  ]
[ E -> E  · + T  , goto  ]
[ E -> E  · + T  , load  ]
[ E -> E  · + T  , put  ]
[ E -> E  · + T  , switch  ]
[ E -> E  · + T  , error  ]
[ E -> E  · + T  , comment  ]
[ E -> E  · + T  , -  ]
[ E -> E  · + T  , +  ]
[ <step> ->  ·  , ;  ]
[ <step> ->  ·  , V  ]
[ <step> ->  ·  , :  ]
[ <step> ->  ·  , let  ]
[ <step> ->  ·  , next  ]
[ <step> ->  ·  , if  ]
[ <step> ->  ·  , goto  ]
[ <step> ->  ·  , load  ]
[ <step> ->  ·  , put  ]
[ <step> ->  ·  , switch  ]
[ <step> ->  ·  , error  ]
[ <step> ->  ·  , comment  ]
[ <step> ->  · adding E  , ;  ]
[ <step> ->  · adding E  , V  ]
[ <step> ->  · adding E  , :  ]
[ <step> ->  · adding E  , let  ]
[ <step> ->  · adding E  , next  ]
[ <step> ->  · adding E  , if  ]
[ <step> ->  · adding E  , goto  ]
[ <step> ->  · adding E  , load  ]
[ <step> ->  · adding E  , put  ]
[ <step> ->  · adding E  , switch  ]
[ <step> ->  · adding E  , error  ]
[ <step> ->  · adding E  , comment  ]
}

set 588 = GOTO( set 580 , switch ) :
{
[ <op> -> switch ( E ) <switch_body> end switch  · ;  , ;  ]
[ <op> -> switch ( E ) <switch_body> end switch  · ;  , V  ]
[ <op> -> switch ( E ) <switch_body> end switch  · ;  , :  ]
[ <op> -> switch ( E ) <switch_body> end switch  · ;  , let  ]
[ <op> -> switch ( E ) <switch_body> end switch  · ;  , next  ]
[ <op> -> switch ( E ) <switch_body> end switch  · ;  , if  ]
[ <op> -> switch ( E ) <switch_body> end switch  · ;  , goto  ]
[ <op> -> switch ( E ) <switch_body> end switch  · ;  , load  ]
[ <op> -> switch ( E ) <switch_body> end switch  · ;  , put  ]
[ <op> -> switch ( E ) <switch_body> end switch  · ;  , switch  ]
[ <op> -> switch ( E ) <switch_body> end switch  · ;  , error  ]
[ <op> -> switch ( E ) <switch_body> end switch  · ;  , comment  ]
}

set 589 = GOTO( set 583 , <step> ) :
{
[ <pr> ->  ·  , next  ]
[ <pr> ->  · <op> <pr>  , next  ]
[ <op> ->  · ;  , ;  ]
[ <op> ->  · ;  , V  ]
[ <op> ->  · ;  , :  ]
[ <op> ->  · ;  , let  ]
[ <op> ->  · ;  , next  ]
[ <op> ->  · ;  , if  ]
[ <op> ->  · ;  , goto  ]
[ <op> ->  · ;  , load  ]
[ <op> ->  · ;  , put  ]
[ <op> ->  · ;  , switch  ]
[ <op> ->  · ;  , error  ]
[ <op> ->  · ;  , comment  ]
[ <op> ->  · V <listV> : TYPE ;  , ;  ]
[ <op> ->  · V <listV> : TYPE ;  , V  ]
[ <op> ->  · V <listV> : TYPE ;  , :  ]
[ <op> ->  · V <listV> : TYPE ;  , let  ]
[ <op> ->  · V <listV> : TYPE ;  , next  ]
[ <op> ->  · V <listV> : TYPE ;  , if  ]
[ <op> ->  · V <listV> : TYPE ;  , goto  ]
[ <op> ->  · V <listV> : TYPE ;  , load  ]
[ <op> ->  · V <listV> : TYPE ;  , put  ]
[ <op> ->  · V <listV> : TYPE ;  , switch  ]
[ <op> ->  · V <listV> : TYPE ;  , error  ]
[ <op> ->  · V <listV> : TYPE ;  , comment  ]
[ <op> ->  · V for V = E to E <step> <pr> next V  , ;  ]
[ <op> ->  · V for V = E to E <step> <pr> next V  , V  ]
[ <op> ->  · V for V = E to E <step> <pr> next V  , :  ]
[ <op> ->  · V for V = E to E <step> <pr> next V  , let  ]
[ <op> ->  · V for V = E to E <step> <pr> next V  , next  ]
[ <op> ->  · V for V = E to E <step> <pr> next V  , if  ]
[ <op> ->  · V for V = E to E <step> <pr> next V  , goto  ]
[ <op> ->  · V for V = E to E <step> <pr> next V  , load  ]
[ <op> ->  · V for V = E to E <step> <pr> next V  , put  ]
[ <op> ->  · V for V = E to E <step> <pr> next V  , switch  ]
[ <op> ->  · V for V = E to E <step> <pr> next V  , error  ]
[ <op> ->  · V for V = E to E <step> <pr> next V  , comment  ]
[ <op> ->  · : V  , ;  ]
[ <op> ->  · : V  , V  ]
[ <op> ->  · : V  , :  ]
[ <op> ->  · : V  , let  ]
[ <op> ->  · : V  , next  ]
[ <op> ->  · : V  , if  ]
[ <op> ->  · : V  , goto  ]
[ <op> ->  · : V  , load  ]
[ <op> ->  · : V  , put  ]
[ <op> ->  · : V  , switch  ]
[ <op> ->  · : V  , error  ]
[ <op> ->  · : V  , comment  ]
[ <op> ->  · let V <listA>  , ;  ]
[ <op> ->  · let V <listA>  , V  ]
[ <op> ->  · let V <listA>  , :  ]
[ <op> ->  · let V <listA>  , let  ]
[ <op> ->  · let V <listA>  , next  ]
[ <op> ->  · let V <listA>  , if  ]
[ <op> ->  · let V <listA>  , goto  ]
[ <op> ->  · let V <listA>  , load  ]
[ <op> ->  · let V <listA>  , put  ]
[ <op> ->  · let V <listA>  , switch  ]
[ <op> ->  · let V <listA>  , error  ]
[ <op> ->  · let V <listA>  , comment  ]
[ <op> ->  · if <test> goto V <else> ;  , ;  ]
[ <op> ->  · if <test> goto V <else> ;  , V  ]
[ <op> ->  · if <test> goto V <else> ;  , :  ]
[ <op> ->  · if <test> goto V <else> ;  , let  ]
[ <op> ->  · if <test> goto V <else> ;  , next  ]
[ <op> ->  · if <test> goto V <else> ;  , if  ]
[ <op> ->  · if <test> goto V <else> ;  , goto  ]
[ <op> ->  · if <test> goto V <else> ;  , load  ]
[ <op> ->  · if <test> goto V <else> ;  , put  ]
[ <op> ->  · if <test> goto V <else> ;  , switch  ]
[ <op> ->  · if <test> goto V <else> ;  , error  ]
[ <op> ->  · if <test> goto V <else> ;  , comment  ]
[ <op> ->  · goto V  , ;  ]
[ <op> ->  · goto V  , V  ]
[ <op> ->  · goto V  , :  ]
[ <op> ->  · goto V  , let  ]
[ <op> ->  · goto V  , next  ]
[ <op> ->  · goto V  , if  ]
[ <op> ->  · goto V  , goto  ]
[ <op> ->  · goto V  , load  ]
[ <op> ->  · goto V  , put  ]
[ <op> ->  · goto V  , switch  ]
[ <op> ->  · goto V  , error  ]
[ <op> ->  · goto V  , comment  ]
[ <op> ->  · load ( V <listV> ) ;  , ;  ]
[ <op> ->  · load ( V <listV> ) ;  , V  ]
[ <op> ->  · load ( V <listV> ) ;  , :  ]
[ <op> ->  · load ( V <listV> ) ;  , let  ]
[ <op> ->  · load ( V <listV> ) ;  , next  ]
[ <op> ->  · load ( V <listV> ) ;  , if  ]
[ <op> ->  · load ( V <listV> ) ;  , goto  ]
[ <op> ->  · load ( V <listV> ) ;  , load  ]
[ <op> ->  · load ( V <listV> ) ;  , put  ]
[ <op> ->  · load ( V <listV> ) ;  , switch  ]
[ <op> ->  · load ( V <listV> ) ;  , error  ]
[ <op> ->  · load ( V <listV> ) ;  , comment  ]
[ <op> ->  · put ( E <listE> ) ;  , ;  ]
[ <op> ->  · put ( E <listE> ) ;  , V  ]
[ <op> ->  · put ( E <listE> ) ;  , :  ]
[ <op> ->  · put ( E <listE> ) ;  , let  ]
[ <op> ->  · put ( E <listE> ) ;  , next  ]
[ <op> ->  · put ( E <listE> ) ;  , if  ]
[ <op> ->  · put ( E <listE> ) ;  , goto  ]
[ <op> ->  · put ( E <listE> ) ;  , load  ]
[ <op> ->  · put ( E <listE> ) ;  , put  ]
[ <op> ->  · put ( E <listE> ) ;  , switch  ]
[ <op> ->  · put ( E <listE> ) ;  , error  ]
[ <op> ->  · put ( E <listE> ) ;  , comment  ]
[ <op> ->  · switch ( E ) <switch_body> end switch ;  , ;  ]
[ <op> ->  · switch ( E ) <switch_body> end switch ;  , V  ]
[ <op> ->  · switch ( E ) <switch_body> end switch ;  , :  ]
[ <op> ->  · switch ( E ) <switch_body> end switch ;  , let  ]
[ <op> ->  · switch ( E ) <switch_body> end switch ;  , next  ]
[ <op> ->  · switch ( E ) <switch_body> end switch ;  , if  ]
[ <op> ->  · switch ( E ) <switch_body> end switch ;  , goto  ]
[ <op> ->  · switch ( E ) <switch_body> end switch ;  , load  ]
[ <op> ->  · switch ( E ) <switch_body> end switch ;  , put  ]
[ <op> ->  · switch ( E ) <switch_body> end switch ;  , switch  ]
[ <op> ->  · switch ( E ) <switch_body> end switch ;  , error  ]
[ <op> ->  · switch ( E ) <switch_body> end switch ;  , comment  ]
[ <op> ->  · error ;  , ;  ]
[ <op> ->  · error ;  , V  ]
[ <op> ->  · error ;  , :  ]
[ <op> ->  · error ;  , let  ]
[ <op> ->  · error ;  , next  ]
[ <op> ->  · error ;  , if  ]
[ <op> ->  · error ;  , goto  ]
[ <op> ->  · error ;  , load  ]
[ <op> ->  · error ;  , put  ]
[ <op> ->  · error ;  , switch  ]
[ <op> ->  · error ;  , error  ]
[ <op> ->  · error ;  , comment  ]
[ <op> ->  · comment  , ;  ]
[ <op> ->  · comment  , V  ]
[ <op> ->  · comment  , :  ]
[ <op> ->  · comment  , let  ]
[ <op> ->  · comment  , next  ]
[ <op> ->  · comment  , if  ]
[ <op> ->  · comment  , goto  ]
[ <op> ->  · comment  , load  ]
[ <op> ->  · comment  , put  ]
[ <op> ->  · comment  , switch  ]
[ <op> ->  · comment  , error  ]
[ <op> ->  · comment  , comment  ]
[ <op> -> V for V = E to E <step>  · <pr> next V  , ;  ]
[ <op> -> V for V = E to E <step>  · <pr> next V  , V  ]
[ <op> -> V for V = E to E <step>  · <pr> next V  , :  ]
[ <op> -> V for V = E to E <step>  · <pr> next V  , let  ]
[ <op> -> V for V = E to E <step>  · <pr> next V  , if  ]
[ <op> -> V for V = E to E <step>  · <pr> next V  , goto  ]
[ <op> -> V for V = E to E <step>  · <pr> next V  , load  ]
[ <op> -> V for V = E to E <step>  · <pr> next V  , put  ]
[ <op> -> V for V = E to E <step>  · <pr> next V  , switch  ]
[ <op> -> V for V = E to E <step>  · <pr> next V  , end  ]
[ <op> -> V for V = E to E <step>  · <pr> next V  , break  ]
[ <op> -> V for V = E to E <step>  · <pr> next V  , error  ]
[ <op> -> V for V = E to E <step>  · <pr> next V  , comment  ]
}

set 590 = GOTO( set 584 , ; ) :
{
[ <op> -> switch ( E ) <switch_body> end switch ;  ·  , ;  ]
[ <op> -> switch ( E ) <switch_body> end switch ;  ·  , V  ]
[ <op> -> switch ( E ) <switch_body> end switch ;  ·  , :  ]
[ <op> -> switch ( E ) <switch_body> end switch ;  ·  , let  ]
[ <op> -> switch ( E ) <switch_body> end switch ;  ·  , if  ]
[ <op> -> switch ( E ) <switch_body> end switch ;  ·  , goto  ]
[ <op> -> switch ( E ) <switch_body> end switch ;  ·  , load  ]
[ <op> -> switch ( E ) <switch_body> end switch ;  ·  , put  ]
[ <op> -> switch ( E ) <switch_body> end switch ;  ·  , switch  ]
[ <op> -> switch ( E ) <switch_body> end switch ;  ·  , end  ]
[ <op> -> switch ( E ) <switch_body> end switch ;  ·  , break  ]
[ <op> -> switch ( E ) <switch_body> end switch ;  ·  , error  ]
[ <op> -> switch ( E ) <switch_body> end switch ;  ·  , comment  ]
}

set 591 = GOTO( set 585 , <step> ) :
{
[ <pr> ->  ·  , next  ]
[ <pr> ->  · <op> <pr>  , next  ]
[ <op> ->  · ;  , ;  ]
[ <op> ->  · ;  , V  ]
[ <op> ->  · ;  , :  ]
[ <op> ->  · ;  , let  ]
[ <op> ->  · ;  , next  ]
[ <op> ->  · ;  , if  ]
[ <op> ->  · ;  , goto  ]
[ <op> ->  · ;  , load  ]
[ <op> ->  · ;  , put  ]
[ <op> ->  · ;  , switch  ]
[ <op> ->  · ;  , error  ]
[ <op> ->  · ;  , comment  ]
[ <op> ->  · V <listV> : TYPE ;  , ;  ]
[ <op> ->  · V <listV> : TYPE ;  , V  ]
[ <op> ->  · V <listV> : TYPE ;  , :  ]
[ <op> ->  · V <listV> : TYPE ;  , let  ]
[ <op> ->  · V <listV> : TYPE ;  , next  ]
[ <op> ->  · V <listV> : TYPE ;  , if  ]
[ <op> ->  · V <listV> : TYPE ;  , goto  ]
[ <op> ->  · V <listV> : TYPE ;  , load  ]
[ <op> ->  · V <listV> : TYPE ;  , put  ]
[ <op> ->  · V <listV> : TYPE ;  , switch  ]
[ <op> ->  · V <listV> : TYPE ;  , error  ]
[ <op> ->  · V <listV> : TYPE ;  , comment  ]
[ <op> ->  · V for V = E to E <step> <pr> next V  , ;  ]
[ <op> ->  · V for V = E to E <step> <pr> next V  , V  ]
[ <op> ->  · V for V = E to E <step> <pr> next V  , :  ]
[ <op> ->  · V for V = E to E <step> <pr> next V  , let  ]
[ <op> ->  · V for V = E to E <step> <pr> next V  , next  ]
[ <op> ->  · V for V = E to E <step> <pr> next V  , if  ]
[ <op> ->  · V for V = E to E <step> <pr> next V  , goto  ]
[ <op> ->  · V for V = E to E <step> <pr> next V  , load  ]
[ <op> ->  · V for V = E to E <step> <pr> next V  , put  ]
[ <op> ->  · V for V = E to E <step> <pr> next V  , switch  ]
[ <op> ->  · V for V = E to E <step> <pr> next V  , error  ]
[ <op> ->  · V for V = E to E <step> <pr> next V  , comment  ]
[ <op> ->  · : V  , ;  ]
[ <op> ->  · : V  , V  ]
[ <op> ->  · : V  , :  ]
[ <op> ->  · : V  , let  ]
[ <op> ->  · : V  , next  ]
[ <op> ->  · : V  , if  ]
[ <op> ->  · : V  , goto  ]
[ <op> ->  · : V  , load  ]
[ <op> ->  · : V  , put  ]
[ <op> ->  · : V  , switch  ]
[ <op> ->  · : V  , error  ]
[ <op> ->  · : V  , comment  ]
[ <op> ->  · let V <listA>  , ;  ]
[ <op> ->  · let V <listA>  , V  ]
[ <op> ->  · let V <listA>  , :  ]
[ <op> ->  · let V <listA>  , let  ]
[ <op> ->  · let V <listA>  , next  ]
[ <op> ->  · let V <listA>  , if  ]
[ <op> ->  · let V <listA>  , goto  ]
[ <op> ->  · let V <listA>  , load  ]
[ <op> ->  · let V <listA>  , put  ]
[ <op> ->  · let V <listA>  , switch  ]
[ <op> ->  · let V <listA>  , error  ]
[ <op> ->  · let V <listA>  , comment  ]
[ <op> ->  · if <test> goto V <else> ;  , ;  ]
[ <op> ->  · if <test> goto V <else> ;  , V  ]
[ <op> ->  · if <test> goto V <else> ;  , :  ]
[ <op> ->  · if <test> goto V <else> ;  , let  ]
[ <op> ->  · if <test> goto V <else> ;  , next  ]
[ <op> ->  · if <test> goto V <else> ;  , if  ]
[ <op> ->  · if <test> goto V <else> ;  , goto  ]
[ <op> ->  · if <test> goto V <else> ;  , load  ]
[ <op> ->  · if <test> goto V <else> ;  , put  ]
[ <op> ->  · if <test> goto V <else> ;  , switch  ]
[ <op> ->  · if <test> goto V <else> ;  , error  ]
[ <op> ->  · if <test> goto V <else> ;  , comment  ]
[ <op> ->  · goto V  , ;  ]
[ <op> ->  · goto V  , V  ]
[ <op> ->  · goto V  , :  ]
[ <op> ->  · goto V  , let  ]
[ <op> ->  · goto V  , next  ]
[ <op> ->  · goto V  , if  ]
[ <op> ->  · goto V  , goto  ]
[ <op> ->  · goto V  , load  ]
[ <op> ->  · goto V  , put  ]
[ <op> ->  · goto V  , switch  ]
[ <op> ->  · goto V  , error  ]
[ <op> ->  · goto V  , comment  ]
[ <op> ->  · load ( V <listV> ) ;  , ;  ]
[ <op> ->  · load ( V <listV> ) ;  , V  ]
[ <op> ->  · load ( V <listV> ) ;  , :  ]
[ <op> ->  · load ( V <listV> ) ;  , let  ]
[ <op> ->  · load ( V <listV> ) ;  , next  ]
[ <op> ->  · load ( V <listV> ) ;  , if  ]
[ <op> ->  · load ( V <listV> ) ;  , goto  ]
[ <op> ->  · load ( V <listV> ) ;  , load  ]
[ <op> ->  · load ( V <listV> ) ;  , put  ]
[ <op> ->  · load ( V <listV> ) ;  , switch  ]
[ <op> ->  · load ( V <listV> ) ;  , error  ]
[ <op> ->  · load ( V <listV> ) ;  , comment  ]
[ <op> ->  · put ( E <listE> ) ;  , ;  ]
[ <op> ->  · put ( E <listE> ) ;  , V  ]
[ <op> ->  · put ( E <listE> ) ;  , :  ]
[ <op> ->  · put ( E <listE> ) ;  , let  ]
[ <op> ->  · put ( E <listE> ) ;  , next  ]
[ <op> ->  · put ( E <listE> ) ;  , if  ]
[ <op> ->  · put ( E <listE> ) ;  , goto  ]
[ <op> ->  · put ( E <listE> ) ;  , load  ]
[ <op> ->  · put ( E <listE> ) ;  , put  ]
[ <op> ->  · put ( E <listE> ) ;  , switch  ]
[ <op> ->  · put ( E <listE> ) ;  , error  ]
[ <op> ->  · put ( E <listE> ) ;  , comment  ]
[ <op> ->  · switch ( E ) <switch_body> end switch ;  , ;  ]
[ <op> ->  · switch ( E ) <switch_body> end switch ;  , V  ]
[ <op> ->  · switch ( E ) <switch_body> end switch ;  , :  ]
[ <op> ->  · switch ( E ) <switch_body> end switch ;  , let  ]
[ <op> ->  · switch ( E ) <switch_body> end switch ;  , next  ]
[ <op> ->  · switch ( E ) <switch_body> end switch ;  , if  ]
[ <op> ->  · switch ( E ) <switch_body> end switch ;  , goto  ]
[ <op> ->  · switch ( E ) <switch_body> end switch ;  , load  ]
[ <op> ->  · switch ( E ) <switch_body> end switch ;  , put  ]
[ <op> ->  · switch ( E ) <switch_body> end switch ;  , switch  ]
[ <op> ->  · switch ( E ) <switch_body> end switch ;  , error  ]
[ <op> ->  · switch ( E ) <switch_body> end switch ;  , comment  ]
[ <op> ->  · error ;  , ;  ]
[ <op> ->  · error ;  , V  ]
[ <op> ->  · error ;  , :  ]
[ <op> ->  · error ;  , let  ]
[ <op> ->  · error ;  , next  ]
[ <op> ->  · error ;  , if  ]
[ <op> ->  · error ;  , goto  ]
[ <op> ->  · error ;  , load  ]
[ <op> ->  · error ;  , put  ]
[ <op> ->  · error ;  , switch  ]
[ <op> ->  · error ;  , error  ]
[ <op> ->  · error ;  , comment  ]
[ <op> ->  · comment  , ;  ]
[ <op> ->  · comment  , V  ]
[ <op> ->  · comment  , :  ]
[ <op> ->  · comment  , let  ]
[ <op> ->  · comment  , next  ]
[ <op> ->  · comment  , if  ]
[ <op> ->  · comment  , goto  ]
[ <op> ->  · comment  , load  ]
[ <op> ->  · comment  , put  ]
[ <op> ->  · comment  , switch  ]
[ <op> ->  · comment  , error  ]
[ <op> ->  · comment  , comment  ]
[ <op> -> V for V = E to E <step>  · <pr> next V  , ;  ]
[ <op> -> V for V = E to E <step>  · <pr> next V  , V  ]
[ <op> -> V for V = E to E <step>  · <pr> next V  , :  ]
[ <op> -> V for V = E to E <step>  · <pr> next V  , let  ]
[ <op> -> V for V = E to E <step>  · <pr> next V  , if  ]
[ <op> -> V for V = E to E <step>  · <pr> next V  , goto  ]
[ <op> -> V for V = E to E <step>  · <pr> next V  , load  ]
[ <op> -> V for V = E to E <step>  · <pr> next V  , put  ]
[ <op> -> V for V = E to E <step>  · <pr> next V  , switch  ]
[ <op> -> V for V = E to E <step>  · <pr> next V  , end  ]
[ <op> -> V for V = E to E <step>  · <pr> next V  , case  ]
[ <op> -> V for V = E to E <step>  · <pr> next V  , break  ]
[ <op> -> V for V = E to E <step>  · <pr> next V  , default  ]
[ <op> -> V for V = E to E <step>  · <pr> next V  , error  ]
[ <op> -> V for V = E to E <step>  · <pr> next V  , comment  ]
}

set 592 = GOTO( set 586 , ; ) :
{
[ <op> -> switch ( E ) <switch_body> end switch ;  ·  , ;  ]
[ <op> -> switch ( E ) <switch_body> end switch ;  ·  , V  ]
[ <op> -> switch ( E ) <switch_body> end switch ;  ·  , :  ]
[ <op> -> switch ( E ) <switch_body> end switch ;  ·  , let  ]
[ <op> -> switch ( E ) <switch_body> end switch ;  ·  , if  ]
[ <op> -> switch ( E ) <switch_body> end switch ;  ·  , goto  ]
[ <op> -> switch ( E ) <switch_body> end switch ;  ·  , load  ]
[ <op> -> switch ( E ) <switch_body> end switch ;  ·  , put  ]
[ <op> -> switch ( E ) <switch_body> end switch ;  ·  , switch  ]
[ <op> -> switch ( E ) <switch_body> end switch ;  ·  , end  ]
[ <op> -> switch ( E ) <switch_body> end switch ;  ·  , case  ]
[ <op> -> switch ( E ) <switch_body> end switch ;  ·  , break  ]
[ <op> -> switch ( E ) <switch_body> end switch ;  ·  , default  ]
[ <op> -> switch ( E ) <switch_body> end switch ;  ·  , error  ]
[ <op> -> switch ( E ) <switch_body> end switch ;  ·  , comment  ]
}

set 593 = GOTO( set 587 , <step> ) :
{
[ <pr> ->  ·  , next  ]
[ <pr> ->  · <op> <pr>  , next  ]
[ <op> ->  · ;  , ;  ]
[ <op> ->  · ;  , V  ]
[ <op> ->  · ;  , :  ]
[ <op> ->  · ;  , let  ]
[ <op> ->  · ;  , next  ]
[ <op> ->  · ;  , if  ]
[ <op> ->  · ;  , goto  ]
[ <op> ->  · ;  , load  ]
[ <op> ->  · ;  , put  ]
[ <op> ->  · ;  , switch  ]
[ <op> ->  · ;  , error  ]
[ <op> ->  · ;  , comment  ]
[ <op> ->  · V <listV> : TYPE ;  , ;  ]
[ <op> ->  · V <listV> : TYPE ;  , V  ]
[ <op> ->  · V <listV> : TYPE ;  , :  ]
[ <op> ->  · V <listV> : TYPE ;  , let  ]
[ <op> ->  · V <listV> : TYPE ;  , next  ]
[ <op> ->  · V <listV> : TYPE ;  , if  ]
[ <op> ->  · V <listV> : TYPE ;  , goto  ]
[ <op> ->  · V <listV> : TYPE ;  , load  ]
[ <op> ->  · V <listV> : TYPE ;  , put  ]
[ <op> ->  · V <listV> : TYPE ;  , switch  ]
[ <op> ->  · V <listV> : TYPE ;  , error  ]
[ <op> ->  · V <listV> : TYPE ;  , comment  ]
[ <op> ->  · V for V = E to E <step> <pr> next V  , ;  ]
[ <op> ->  · V for V = E to E <step> <pr> next V  , V  ]
[ <op> ->  · V for V = E to E <step> <pr> next V  , :  ]
[ <op> ->  · V for V = E to E <step> <pr> next V  , let  ]
[ <op> ->  · V for V = E to E <step> <pr> next V  , next  ]
[ <op> ->  · V for V = E to E <step> <pr> next V  , if  ]
[ <op> ->  · V for V = E to E <step> <pr> next V  , goto  ]
[ <op> ->  · V for V = E to E <step> <pr> next V  , load  ]
[ <op> ->  · V for V = E to E <step> <pr> next V  , put  ]
[ <op> ->  · V for V = E to E <step> <pr> next V  , switch  ]
[ <op> ->  · V for V = E to E <step> <pr> next V  , error  ]
[ <op> ->  · V for V = E to E <step> <pr> next V  , comment  ]
[ <op> ->  · : V  , ;  ]
[ <op> ->  · : V  , V  ]
[ <op> ->  · : V  , :  ]
[ <op> ->  · : V  , let  ]
[ <op> ->  · : V  , next  ]
[ <op> ->  · : V  , if  ]
[ <op> ->  · : V  , goto  ]
[ <op> ->  · : V  , load  ]
[ <op> ->  · : V  , put  ]
[ <op> ->  · : V  , switch  ]
[ <op> ->  · : V  , error  ]
[ <op> ->  · : V  , comment  ]
[ <op> ->  · let V <listA>  , ;  ]
[ <op> ->  · let V <listA>  , V  ]
[ <op> ->  · let V <listA>  , :  ]
[ <op> ->  · let V <listA>  , let  ]
[ <op> ->  · let V <listA>  , next  ]
[ <op> ->  · let V <listA>  , if  ]
[ <op> ->  · let V <listA>  , goto  ]
[ <op> ->  · let V <listA>  , load  ]
[ <op> ->  · let V <listA>  , put  ]
[ <op> ->  · let V <listA>  , switch  ]
[ <op> ->  · let V <listA>  , error  ]
[ <op> ->  · let V <listA>  , comment  ]
[ <op> ->  · if <test> goto V <else> ;  , ;  ]
[ <op> ->  · if <test> goto V <else> ;  , V  ]
[ <op> ->  · if <test> goto V <else> ;  , :  ]
[ <op> ->  · if <test> goto V <else> ;  , let  ]
[ <op> ->  · if <test> goto V <else> ;  , next  ]
[ <op> ->  · if <test> goto V <else> ;  , if  ]
[ <op> ->  · if <test> goto V <else> ;  , goto  ]
[ <op> ->  · if <test> goto V <else> ;  , load  ]
[ <op> ->  · if <test> goto V <else> ;  , put  ]
[ <op> ->  · if <test> goto V <else> ;  , switch  ]
[ <op> ->  · if <test> goto V <else> ;  , error  ]
[ <op> ->  · if <test> goto V <else> ;  , comment  ]
[ <op> ->  · goto V  , ;  ]
[ <op> ->  · goto V  , V  ]
[ <op> ->  · goto V  , :  ]
[ <op> ->  · goto V  , let  ]
[ <op> ->  · goto V  , next  ]
[ <op> ->  · goto V  , if  ]
[ <op> ->  · goto V  , goto  ]
[ <op> ->  · goto V  , load  ]
[ <op> ->  · goto V  , put  ]
[ <op> ->  · goto V  , switch  ]
[ <op> ->  · goto V  , error  ]
[ <op> ->  · goto V  , comment  ]
[ <op> ->  · load ( V <listV> ) ;  , ;  ]
[ <op> ->  · load ( V <listV> ) ;  , V  ]
[ <op> ->  · load ( V <listV> ) ;  , :  ]
[ <op> ->  · load ( V <listV> ) ;  , let  ]
[ <op> ->  · load ( V <listV> ) ;  , next  ]
[ <op> ->  · load ( V <listV> ) ;  , if  ]
[ <op> ->  · load ( V <listV> ) ;  , goto  ]
[ <op> ->  · load ( V <listV> ) ;  , load  ]
[ <op> ->  · load ( V <listV> ) ;  , put  ]
[ <op> ->  · load ( V <listV> ) ;  , switch  ]
[ <op> ->  · load ( V <listV> ) ;  , error  ]
[ <op> ->  · load ( V <listV> ) ;  , comment  ]
[ <op> ->  · put ( E <listE> ) ;  , ;  ]
[ <op> ->  · put ( E <listE> ) ;  , V  ]
[ <op> ->  · put ( E <listE> ) ;  , :  ]
[ <op> ->  · put ( E <listE> ) ;  , let  ]
[ <op> ->  · put ( E <listE> ) ;  , next  ]
[ <op> ->  · put ( E <listE> ) ;  , if  ]
[ <op> ->  · put ( E <listE> ) ;  , goto  ]
[ <op> ->  · put ( E <listE> ) ;  , load  ]
[ <op> ->  · put ( E <listE> ) ;  , put  ]
[ <op> ->  · put ( E <listE> ) ;  , switch  ]
[ <op> ->  · put ( E <listE> ) ;  , error  ]
[ <op> ->  · put ( E <listE> ) ;  , comment  ]
[ <op> ->  · switch ( E ) <switch_body> end switch ;  , ;  ]
[ <op> ->  · switch ( E ) <switch_body> end switch ;  , V  ]
[ <op> ->  · switch ( E ) <switch_body> end switch ;  , :  ]
[ <op> ->  · switch ( E ) <switch_body> end switch ;  , let  ]
[ <op> ->  · switch ( E ) <switch_body> end switch ;  , next  ]
[ <op> ->  · switch ( E ) <switch_body> end switch ;  , if  ]
[ <op> ->  · switch ( E ) <switch_body> end switch ;  , goto  ]
[ <op> ->  · switch ( E ) <switch_body> end switch ;  , load  ]
[ <op> ->  · switch ( E ) <switch_body> end switch ;  , put  ]
[ <op> ->  · switch ( E ) <switch_body> end switch ;  , switch  ]
[ <op> ->  · switch ( E ) <switch_body> end switch ;  , error  ]
[ <op> ->  · switch ( E ) <switch_body> end switch ;  , comment  ]
[ <op> ->  · error ;  , ;  ]
[ <op> ->  · error ;  , V  ]
[ <op> ->  · error ;  , :  ]
[ <op> ->  · error ;  , let  ]
[ <op> ->  · error ;  , next  ]
[ <op> ->  · error ;  , if  ]
[ <op> ->  · error ;  , goto  ]
[ <op> ->  · error ;  , load  ]
[ <op> ->  · error ;  , put  ]
[ <op> ->  · error ;  , switch  ]
[ <op> ->  · error ;  , error  ]
[ <op> ->  · error ;  , comment  ]
[ <op> ->  · comment  , ;  ]
[ <op> ->  · comment  , V  ]
[ <op> ->  · comment  , :  ]
[ <op> ->  · comment  , let  ]
[ <op> ->  · comment  , next  ]
[ <op> ->  · comment  , if  ]
[ <op> ->  · comment  , goto  ]
[ <op> ->  · comment  , load  ]
[ <op> ->  · comment  , put  ]
[ <op> ->  · comment  , switch  ]
[ <op> ->  · comment  , error  ]
[ <op> ->  · comment  , comment  ]
[ <op> -> V for V = E to E <step>  · <pr> next V  , ;  ]
[ <op> -> V for V = E to E <step>  · <pr> next V  , V  ]
[ <op> -> V for V = E to E <step>  · <pr> next V  , :  ]
[ <op> -> V for V = E to E <step>  · <pr> next V  , let  ]
[ <op> -> V for V = E to E <step>  · <pr> next V  , next  ]
[ <op> -> V for V = E to E <step>  · <pr> next V  , if  ]
[ <op> -> V for V = E to E <step>  · <pr> next V  , goto  ]
[ <op> -> V for V = E to E <step>  · <pr> next V  , load  ]
[ <op> -> V for V = E to E <step>  · <pr> next V  , put  ]
[ <op> -> V for V = E to E <step>  · <pr> next V  , switch  ]
[ <op> -> V for V = E to E <step>  · <pr> next V  , error  ]
[ <op> -> V for V = E to E <step>  · <pr> next V  , comment  ]
}

set 594 = GOTO( set 588 , ; ) :
{
[ <op> -> switch ( E ) <switch_body> end switch ;  ·  , ;  ]
[ <op> -> switch ( E ) <switch_body> end switch ;  ·  , V  ]
[ <op> -> switch ( E ) <switch_body> end switch ;  ·  , :  ]
[ <op> -> switch ( E ) <switch_body> end switch ;  ·  , let  ]
[ <op> -> switch ( E ) <switch_body> end switch ;  ·  , next  ]
[ <op> -> switch ( E ) <switch_body> end switch ;  ·  , if  ]
[ <op> -> switch ( E ) <switch_body> end switch ;  ·  , goto  ]
[ <op> -> switch ( E ) <switch_body> end switch ;  ·  , load  ]
[ <op> -> switch ( E ) <switch_body> end switch ;  ·  , put  ]
[ <op> -> switch ( E ) <switch_body> end switch ;  ·  , switch  ]
[ <op> -> switch ( E ) <switch_body> end switch ;  ·  , error  ]
[ <op> -> switch ( E ) <switch_body> end switch ;  ·  , comment  ]
}

set 595 = GOTO( set 589 , <pr> ) :
{
[ <op> -> V for V = E to E <step> <pr>  · next V  , ;  ]
[ <op> -> V for V = E to E <step> <pr>  · next V  , V  ]
[ <op> -> V for V = E to E <step> <pr>  · next V  , :  ]
[ <op> -> V for V = E to E <step> <pr>  · next V  , let  ]
[ <op> -> V for V = E to E <step> <pr>  · next V  , if  ]
[ <op> -> V for V = E to E <step> <pr>  · next V  , goto  ]
[ <op> -> V for V = E to E <step> <pr>  · next V  , load  ]
[ <op> -> V for V = E to E <step> <pr>  · next V  , put  ]
[ <op> -> V for V = E to E <step> <pr>  · next V  , switch  ]
[ <op> -> V for V = E to E <step> <pr>  · next V  , end  ]
[ <op> -> V for V = E to E <step> <pr>  · next V  , break  ]
[ <op> -> V for V = E to E <step> <pr>  · next V  , error  ]
[ <op> -> V for V = E to E <step> <pr>  · next V  , comment  ]
}

set 596 = GOTO( set 591 , <pr> ) :
{
[ <op> -> V for V = E to E <step> <pr>  · next V  , ;  ]
[ <op> -> V for V = E to E <step> <pr>  · next V  , V  ]
[ <op> -> V for V = E to E <step> <pr>  · next V  , :  ]
[ <op> -> V for V = E to E <step> <pr>  · next V  , let  ]
[ <op> -> V for V = E to E <step> <pr>  · next V  , if  ]
[ <op> -> V for V = E to E <step> <pr>  · next V  , goto  ]
[ <op> -> V for V = E to E <step> <pr>  · next V  , load  ]
[ <op> -> V for V = E to E <step> <pr>  · next V  , put  ]
[ <op> -> V for V = E to E <step> <pr>  · next V  , switch  ]
[ <op> -> V for V = E to E <step> <pr>  · next V  , end  ]
[ <op> -> V for V = E to E <step> <pr>  · next V  , case  ]
[ <op> -> V for V = E to E <step> <pr>  · next V  , break  ]
[ <op> -> V for V = E to E <step> <pr>  · next V  , default  ]
[ <op> -> V for V = E to E <step> <pr>  · next V  , error  ]
[ <op> -> V for V = E to E <step> <pr>  · next V  , comment  ]
}

set 597 = GOTO( set 593 , <pr> ) :
{
[ <op> -> V for V = E to E <step> <pr>  · next V  , ;  ]
[ <op> -> V for V = E to E <step> <pr>  · next V  , V  ]
[ <op> -> V for V = E to E <step> <pr>  · next V  , :  ]
[ <op> -> V for V = E to E <step> <pr>  · next V  , let  ]
[ <op> -> V for V = E to E <step> <pr>  · next V  , next  ]
[ <op> -> V for V = E to E <step> <pr>  · next V  , if  ]
[ <op> -> V for V = E to E <step> <pr>  · next V  , goto  ]
[ <op> -> V for V = E to E <step> <pr>  · next V  , load  ]
[ <op> -> V for V = E to E <step> <pr>  · next V  , put  ]
[ <op> -> V for V = E to E <step> <pr>  · next V  , switch  ]
[ <op> -> V for V = E to E <step> <pr>  · next V  , error  ]
[ <op> -> V for V = E to E <step> <pr>  · next V  , comment  ]
}

set 598 = GOTO( set 595 , next ) :
{
[ <op> -> V for V = E to E <step> <pr> next  · V  , ;  ]
[ <op> -> V for V = E to E <step> <pr> next  · V  , V  ]
[ <op> -> V for V = E to E <step> <pr> next  · V  , :  ]
[ <op> -> V for V = E to E <step> <pr> next  · V  , let  ]
[ <op> -> V for V = E to E <step> <pr> next  · V  , if  ]
[ <op> -> V for V = E to E <step> <pr> next  · V  , goto  ]
[ <op> -> V for V = E to E <step> <pr> next  · V  , load  ]
[ <op> -> V for V = E to E <step> <pr> next  · V  , put  ]
[ <op> -> V for V = E to E <step> <pr> next  · V  , switch  ]
[ <op> -> V for V = E to E <step> <pr> next  · V  , end  ]
[ <op> -> V for V = E to E <step> <pr> next  · V  , break  ]
[ <op> -> V for V = E to E <step> <pr> next  · V  , error  ]
[ <op> -> V for V = E to E <step> <pr> next  · V  , comment  ]
}

set 599 = GOTO( set 596 , next ) :
{
[ <op> -> V for V = E to E <step> <pr> next  · V  , ;  ]
[ <op> -> V for V = E to E <step> <pr> next  · V  , V  ]
[ <op> -> V for V = E to E <step> <pr> next  · V  , :  ]
[ <op> -> V for V = E to E <step> <pr> next  · V  , let  ]
[ <op> -> V for V = E to E <step> <pr> next  · V  , if  ]
[ <op> -> V for V = E to E <step> <pr> next  · V  , goto  ]
[ <op> -> V for V = E to E <step> <pr> next  · V  , load  ]
[ <op> -> V for V = E to E <step> <pr> next  · V  , put  ]
[ <op> -> V for V = E to E <step> <pr> next  · V  , switch  ]
[ <op> -> V for V = E to E <step> <pr> next  · V  , end  ]
[ <op> -> V for V = E to E <step> <pr> next  · V  , case  ]
[ <op> -> V for V = E to E <step> <pr> next  · V  , break  ]
[ <op> -> V for V = E to E <step> <pr> next  · V  , default  ]
[ <op> -> V for V = E to E <step> <pr> next  · V  , error  ]
[ <op> -> V for V = E to E <step> <pr> next  · V  , comment  ]
}

set 600 = GOTO( set 597 , next ) :
{
[ <op> -> V for V = E to E <step> <pr> next  · V  , ;  ]
[ <op> -> V for V = E to E <step> <pr> next  · V  , V  ]
[ <op> -> V for V = E to E <step> <pr> next  · V  , :  ]
[ <op> -> V for V = E to E <step> <pr> next  · V  , let  ]
[ <op> -> V for V = E to E <step> <pr> next  · V  , next  ]
[ <op> -> V for V = E to E <step> <pr> next  · V  , if  ]
[ <op> -> V for V = E to E <step> <pr> next  · V  , goto  ]
[ <op> -> V for V = E to E <step> <pr> next  · V  , load  ]
[ <op> -> V for V = E to E <step> <pr> next  · V  , put  ]
[ <op> -> V for V = E to E <step> <pr> next  · V  , switch  ]
[ <op> -> V for V = E to E <step> <pr> next  · V  , error  ]
[ <op> -> V for V = E to E <step> <pr> next  · V  , comment  ]
}

set 601 = GOTO( set 598 , V ) :
{
[ <op> -> V for V = E to E <step> <pr> next V  ·  , ;  ]
[ <op> -> V for V = E to E <step> <pr> next V  ·  , V  ]
[ <op> -> V for V = E to E <step> <pr> next V  ·  , :  ]
[ <op> -> V for V = E to E <step> <pr> next V  ·  , let  ]
[ <op> -> V for V = E to E <step> <pr> next V  ·  , if  ]
[ <op> -> V for V = E to E <step> <pr> next V  ·  , goto  ]
[ <op> -> V for V = E to E <step> <pr> next V  ·  , load  ]
[ <op> -> V for V = E to E <step> <pr> next V  ·  , put  ]
[ <op> -> V for V = E to E <step> <pr> next V  ·  , switch  ]
[ <op> -> V for V = E to E <step> <pr> next V  ·  , end  ]
[ <op> -> V for V = E to E <step> <pr> next V  ·  , break  ]
[ <op> -> V for V = E to E <step> <pr> next V  ·  , error  ]
[ <op> -> V for V = E to E <step> <pr> next V  ·  , comment  ]
}

set 602 = GOTO( set 599 , V ) :
{
[ <op> -> V for V = E to E <step> <pr> next V  ·  , ;  ]
[ <op> -> V for V = E to E <step> <pr> next V  ·  , V  ]
[ <op> -> V for V = E to E <step> <pr> next V  ·  , :  ]
[ <op> -> V for V = E to E <step> <pr> next V  ·  , let  ]
[ <op> -> V for V = E to E <step> <pr> next V  ·  , if  ]
[ <op> -> V for V = E to E <step> <pr> next V  ·  , goto  ]
[ <op> -> V for V = E to E <step> <pr> next V  ·  , load  ]
[ <op> -> V for V = E to E <step> <pr> next V  ·  , put  ]
[ <op> -> V for V = E to E <step> <pr> next V  ·  , switch  ]
[ <op> -> V for V = E to E <step> <pr> next V  ·  , end  ]
[ <op> -> V for V = E to E <step> <pr> next V  ·  , case  ]
[ <op> -> V for V = E to E <step> <pr> next V  ·  , break  ]
[ <op> -> V for V = E to E <step> <pr> next V  ·  , default  ]
[ <op> -> V for V = E to E <step> <pr> next V  ·  , error  ]
[ <op> -> V for V = E to E <step> <pr> next V  ·  , comment  ]
}

set 603 = GOTO( set 600 , V ) :
{
[ <op> -> V for V = E to E <step> <pr> next V  ·  , ;  ]
[ <op> -> V for V = E to E <step> <pr> next V  ·  , V  ]
[ <op> -> V for V = E to E <step> <pr> next V  ·  , :  ]
[ <op> -> V for V = E to E <step> <pr> next V  ·  , let  ]
[ <op> -> V for V = E to E <step> <pr> next V  ·  , next  ]
[ <op> -> V for V = E to E <step> <pr> next V  ·  , if  ]
[ <op> -> V for V = E to E <step> <pr> next V  ·  , goto  ]
[ <op> -> V for V = E to E <step> <pr> next V  ·  , load  ]
[ <op> -> V for V = E to E <step> <pr> next V  ·  , put  ]
[ <op> -> V for V = E to E <step> <pr> next V  ·  , switch  ]
[ <op> -> V for V = E to E <step> <pr> next V  ·  , error  ]
[ <op> -> V for V = E to E <step> <pr> next V  ·  , comment  ]
}

