# 50Вариант. Решение задачи Коши для систем дифференциальных уравнений 1-ого
# порядка модифицированным методом Эйлера
import numpy as np
#Подключаем numpy На всякий случай, вдруг придётся решать функции сложнее по типу sin или cos

#вычисляется значение функции v по заданной формуле, использующей переменные x и y.
def f(x, y):
    v = x * y; #Любая функция, которую нам надо вычислить
    return v;

#Использованные формулы:
#x(n+1/2) = x + h/2
#y(n+1/2) = y + h/2 * f(x,y)
#x(n+1) = x + h
#y(n+1) = y + h * f(x(n+1/2),y(n+1/2))
#Гоняем их по циклу до тех пор, пока не дойдём до конечной точки х

#вычисляет и выводит итоговое значение y при каждом шаге x
def printFinalValues(x, xn, y, h):
# Красивый вывод таблицей
    print("x    |   y")
    print("--------------------------")
    print(f"{x}  |  {y}")
#Вычисление значения по формулам
    while (x < xn):
        x1 = x + h * 0.5
        y1 = y + h * 0.5 * f(x, y)
        x1p = x + h
        y1p = y + h * f(x1, y1)
        x = x1p
        y = y1p
        print(f"{x}  |  {y:.2f}")

#Вывод значения
    print(f"Значение y в точке x = {x}, равно: {y:.2f}");

#Записываем входные значения
x = float(input("Введите x: "));
y = float(input("Введите y: "));
xn = float(input("Введите конечную точку: "));
h = float(input("Введите шаг: "));

printFinalValues(x, xn, y, h);